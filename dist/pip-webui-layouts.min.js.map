{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/auxpanel/AuxPanel.ts","src/auxpanel/AuxPanelPart.ts","src/auxpanel/AuxPanelService.ts","src/auxpanel/IAuxPanelService.ts","src/auxpanel/index.ts","src/index.ts","src/layouts/CardDirective.ts","src/layouts/DialogDirective.ts","src/layouts/DocumentDirective.ts","src/layouts/MainDirective.ts","src/layouts/SimpleDirective.ts","src/layouts/TilesDirective.ts","src/media/IMediaService.ts","src/media/MediaService.ts","src/media/ResizeFunctions.ts","src/media/index.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","layouts","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","MediaService_1","IMediaService_1","AuxPanelDirectiveController","$rootScope","pipAuxPanel","_this","normalSize","largeSize","gtxs","gtlg","bodyElement","$","bodyWidth","width","$on","LayoutResizedEvent","$inject","prototype","isGtxs","isOpen","MainBreakpoints","xs","isGtlg","lg","AuxPanel","controller","transclude","component","../media/IMediaService","../media/MediaService","2","AuxPanelPartDirective","ngIfDirective","ngIf","priority","terminal","restrict","link","$scope","$element","$attrs","apply","AuxPanelPartController_1","partName","pipAuxPanelPart","pos","indexOf","partValue","substr","onAuxPanelChanged","config","event","currentPartValue","parts","angular","3","hookAuxPanelEvents","IAuxPanelService_1","OpenAuxPanelEvent","open","CloseAuxPanelEvent","close","defineProperty","value","AuxPanelService","$mdSidenav","id","_config","_rootScope","_sidenav","get","configurable","classes","sendConfigEvent","_state","$broadcast","AuxPanelStateChangedEvent","enumerable","$emit","AuxPanelOpenedEvent","AuxPanelClosedEvent","toggle","_i","arguments","_","each","c","push","reject","cc","part","AuxPanelChangedEvent","AuxPanelProvider","state","set","IAuxPanelService_2","AuxPanelConfig","type","_service","$get","provider","run","./IAuxPanelService","4","Object","m","p","hasOwnProperty","./auxpanel/index","./layouts/CardDirective","./layouts/DialogDirective","./layouts/DocumentDirective","./layouts/MainDirective","./layouts/SimpleDirective","./layouts/TilesDirective","./media/index","7","cardDirective","CardDirectiveLink","addClass","listener","resize","MainResizedEvent","left","top","$mainBody","cardContainer","maxWidth","maxHeight","height","minWidth","Math","floor","Number","minHeight","MainBreakpointStatuses","space","min","css","hasClass","max","setTimeout","$header","find","$footer","$body","maxBodyHeight","outerHeight","8","dialogDirective","documentDirective","directive","10","mainDirective","MainDirectiveController","controllerAs","mainBodyDirective","MainBodyDirectiveLink","$timeout","_container","pipContainer","ResizeFunctions_1","addResizeListener","removeResizeListener","updateBreakpointStatuses","innerWidth","body","update","breakpoint","status","isBoolean","$apply","../media/ResizeFunctions","11","simpleDirective","12","tilesDirective","convertToBoolean","toString","toLowerCase","heading","pipInfinite","String","tilesOptions","gutter","isFitWidth","isResizeBound","TilesDirectiveLink","TilesOptions","_columnWidth","columnWidth","children","_heading","_prevContainerWidth","_masonry","Masonry","data","_sizer","appendTo","force","containerWidth","parent","columns","removeClass","layout","13","MediaBreakpoints","sm","md","MediaBreakpointStatuses","breakpoints","MediaProvider","service","size","15","callback","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","resizeListener","win","target","srcElement","__resizeRAF__","requestFrame","trigger","__resizeTrigger__","__resizeListeners__","forEach","fn","loadListener","contentDocument","defaultView","__resizeElement__","addEventListener","element","attachEvent","getComputedStyle","position","style","obj","document","createElement","setAttribute","onload","isIE","appendChild","removeEventListener","removeChild","navigator","userAgent","match"],"mappings":"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","file":"pip-webui-layouts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { MainBreakpoints } from '../media/MediaService';\r\nimport { IAuxPanelService } from './IAuxPanelService';\r\nimport { MainResizedEvent, LayoutResizedEvent } from '../media/IMediaService';\r\n\r\n{\r\n    class AuxPanelDirectiveController {\r\n        private normalSize: number = 320;\r\n        private largeSize: number = 480;\r\n        private _debounceBodySize: Function;\r\n        private gtxs: boolean = null;\r\n        private gtlg: boolean = null;\r\n        private bodyWidth: number;\r\n        private bodyElement: any;\r\n\r\n        public constructor(\r\n            private $rootScope: ng.IRootScopeService,\r\n            private pipAuxPanel: IAuxPanelService\r\n        ) {\r\n            \"ngInject\";\r\n\r\n            // this._debounceBodySize = _.debounce(() => {\r\n            //     let bodySize: number = Number($('body').width());\r\n            //     this.gtxs = bodySize > MainBreakpoints.xs && this.pipAuxPanel.isOpen();\r\n            //     this.gtlg = bodySize > (MainBreakpoints.lg + this.largeSize)  && this.pipAuxPanel.isOpen();\r\n            // }, 10);\r\n\r\n            this.bodyElement = $('body');\r\n            this.bodyWidth = this.bodyElement.width();\r\n            $rootScope.$on(LayoutResizedEvent, () => {\r\n                this.bodyWidth = this.bodyElement.width();\r\n            });\r\n            // this._debounceBodySize();\r\n        }\r\n\r\n        public isGtxs(): boolean {\r\n            // if (this.gtxs != null) {\r\n            //     this._debounceBodySize();\r\n            //     return this.gtxs;\r\n            // } else {\r\n            //     let bodySize: number = Number($('body').width());\r\n            //     this.gtxs = bodySize > MainBreakpoints.xs && this.pipAuxPanel.isOpen();\r\n\r\n            //     return this.gtxs;\r\n            // }\r\n\r\n            if (!this.pipAuxPanel.isOpen()) return false;\r\n\r\n            this.bodyWidth = this.bodyElement.width();\r\n\r\n            return this.bodyWidth > MainBreakpoints.xs;\r\n        }\r\n\r\n        public isGtlg(): boolean {\r\n            // if (this.gtxs != null) {\r\n            //     this._debounceBodySize();\r\n            //     return this.gtlg;\r\n            // } else {\r\n            //     let bodySize: number = Number($('body').width());\r\n            //     this.gtlg = bodySize > (MainBreakpoints.lg + this.largeSize)  && this.pipAuxPanel.isOpen();\r\n                \r\n            //     return this.gtlg;\r\n            // }            \r\n\r\n            if (!this.pipAuxPanel.isOpen()) return false;\r\n\r\n            this.bodyWidth = this.bodyElement.width();\r\n            \r\n            return this.bodyWidth > (MainBreakpoints.lg + this.largeSize);\r\n        }\r\n    }\r\n\r\n    const AuxPanel: ng.IComponentOptions = {\r\n\r\n        controller: AuxPanelDirectiveController,\r\n        transclude: true,\r\n        template: '<md-sidenav class=\"md-sidenav-right md-whiteframe-z2 pip-auxpanel color-content-bg\" ng-class=\"{\\'pip-large\\': $ctrl.isGtlg()}\"' +\r\n        'md-component-id=\"pip-auxpanel\" md-is-locked-open=\"$ctrl.isGtxs()\" ng-transclude><div pip-focused></div>' +\r\n        '</md-sidenav>'\r\n    }\r\n\r\n    angular\r\n        .module('pipAuxPanel')\r\n        .component('pipAuxPanel', AuxPanel);\r\n\r\n}\r\n","{\r\n\r\n    class AuxPanelPartController {\r\n        private partName: string;\r\n        private partValue: string;\r\n        private pos: number;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            $element: ng.IRootElementService,\r\n            $attrs,\r\n            $rootScope: ng.IRootScopeService,\r\n            pipAuxPanel) {\r\n            \"ngInject\";\r\n            this.partName = '' + $attrs.pipAuxPanelPart;\r\n            this.pos = this.partName.indexOf(':');\r\n            if (this.pos > 0) {\r\n                this.partValue = this.partName.substr(this.pos + 1);\r\n                this.partName = this.partName.substr(0, this.pos);\r\n            }\r\n\r\n            this.onAuxPanelChanged(null, pipAuxPanel.config)\r\n            $rootScope.$on('pipAuxPanelChanged', (event, config) => {\r\n                this.onAuxPanelChanged(event, config);\r\n            });\r\n\r\n        }\r\n\r\n        private onAuxPanelChanged(event, config) {\r\n            let parts = config.parts || {};\r\n            let currentPartValue = config[this.partName];\r\n            // Set visible variable to switch ngIf\r\n\r\n            this.$scope['visible'] = this.partValue ? currentPartValue == this.partValue : currentPartValue;\r\n        }\r\n    }\r\n\r\n\r\n    function AuxPanelPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        let ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function ($scope: ng.IScope, $element, $attrs) {\r\n                // Visualize based on visible variable in scope\r\n                $attrs.ngIf = () => { return $scope['visible'] };\r\n                ngIf.link.apply(ngIf);\r\n            },\r\n            controller: AuxPanelPartController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipAuxPanel')\r\n        .directive('pipAuxPanelPart', AuxPanelPartDirective);\r\n\r\n}","import { AuxPanelStateChangedEvent, AuxPanelChangedEvent, OpenAuxPanelEvent, CloseAuxPanelEvent, AuxPanelOpenedEvent, AuxPanelClosedEvent } from './IAuxPanelService';\r\nimport { AuxPanelConfig, IAuxPanelService, IAuxPanelProvider } from './IAuxPanelService';\r\n\r\nclass AuxPanelService implements IAuxPanelService {\r\n    private _config: AuxPanelConfig;\r\n    private _state: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _sidenav: ng.material.ISidenavService;\r\n    private id = 'pip-auxpanel';\r\n\r\n    public constructor(config: AuxPanelConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n\r\n        \"ngInject\";\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n        this._sidenav = $mdSidenav;\r\n    }\r\n\r\n    public get config(): AuxPanelConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: any) {\r\n        this._state = value || {};\r\n        this._rootScope.$broadcast(AuxPanelStateChangedEvent, value);\r\n    }\r\n\r\n    public isOpen(): boolean {\r\n        return this._sidenav(this.id).isOpen();\r\n    }\r\n\r\n    public open() {\r\n        this._sidenav(this.id).open();\r\n        this._rootScope.$emit(AuxPanelOpenedEvent, this._config);\r\n    }\r\n\r\n    public close() {\r\n        this._sidenav(this.id).close();\r\n        this._rootScope.$emit(AuxPanelClosedEvent, this._config);\r\n    }\r\n\r\n    public toggle() {\r\n        this._sidenav(this.id).toggle();\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(AuxPanelChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass AuxPanelProvider implements IAuxPanelProvider {\r\n    private _config: AuxPanelConfig = {\r\n        parts: {},\r\n        classes: [],\r\n        type: 'sticky',\r\n        state: null\r\n    };\r\n\r\n    private _service: AuxPanelService;\r\n\r\n    public get config(): AuxPanelConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: AuxPanelConfig) {\r\n        this._config = value || new AuxPanelConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._config.type;\r\n    }\r\n\r\n    public set type(value: string) {\r\n        this._config.type = value;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public open(): void {\r\n        this._service.open();\r\n    }\r\n\r\n    public close(): void {\r\n        this._service.close();\r\n    }\r\n\r\n    public toggle(): void {\r\n        this._service.toggle();\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AuxPanelService(this._config, $rootScope, $mdSidenav);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nfunction hookAuxPanelEvents($rootScope: ng.IRootScopeService, pipAuxPanel: IAuxPanelService) {\r\n    \"ngInject\";\r\n    $rootScope.$on(OpenAuxPanelEvent, () => { pipAuxPanel.open(); });\r\n    $rootScope.$on(CloseAuxPanelEvent, () => { pipAuxPanel.close(); });\r\n}\r\n\r\nangular\r\n    .module('pipAuxPanel')\r\n    .provider('pipAuxPanel', AuxPanelProvider)\r\n    .run(hookAuxPanelEvents);\r\n","export const AuxPanelChangedEvent = 'pipAuxPanelChanged';\r\nexport const AuxPanelStateChangedEvent = 'pipAuxPanelStateChanged';\r\nexport const OpenAuxPanelEvent = 'pipOpenAuxPanel';\r\nexport const CloseAuxPanelEvent = 'pipCloseAuxPanel';\r\nexport const AuxPanelOpenedEvent = 'pipAuxPanelOpened';\r\nexport const AuxPanelClosedEvent = 'pipAuxPanelClosed';\r\n\r\nexport class AuxPanelConfig {\r\n    parts: any;\r\n    classes: string[];\r\n    state: any;\r\n    type: string;\r\n} \r\n\r\nexport interface IAuxPanelService {\r\n    readonly config: AuxPanelConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n    state: any;    \r\n\r\n    isOpen(): boolean;\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n  \r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n \r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface IAuxPanelProvider extends ng.IServiceProvider {\r\n    config: AuxPanelConfig;\r\n    parts: any;\r\n    type: string;\r\n    classes: string[];\r\n\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}","angular.module('pipAuxPanel', ['ngMaterial']);\r\n\r\nimport './AuxPanelService';\r\nimport './AuxPanelPart';\r\nimport './AuxPanel';\r\n\r\nexport * from './IAuxPanelService';","angular.module('pipLayout', ['wu.masonry', 'pipMedia', 'pipAuxPanel']);\r\n\r\nimport './media/index';\r\n\r\nimport './layouts/MainDirective';\r\nimport './layouts/CardDirective';\r\nimport './layouts/DialogDirective';\r\nimport './layouts/DocumentDirective';\r\nimport './layouts/SimpleDirective';\r\nimport './layouts/TilesDirective';\r\nimport './auxpanel/index';\r\n\r\nexport * from './media/index';\r\n","import { MainResizedEvent, LayoutResizedEvent } from '../media/IMediaService';\r\nimport { MainBreakpointStatuses } from '../media/MediaService';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\ninterface ICardDirectiveAttributes extends ng.IAttributes {\r\n    minWidth: string | number;\r\n    minHeight: string | number;\r\n    width: string | number;\r\n    height: string | number;\r\n}\r\n\r\nclass CardDirectiveLink {\r\n\r\n    public constructor(\r\n        private $rootScope: ng.IRootScopeService, \r\n        private $element: JQuery, \r\n        private $attrs: ICardDirectiveAttributes\r\n    ) {\r\n       \"ngInject\";\r\n        // Add class to the element\r\n        $element.addClass('pip-card');\r\n\r\n        let listener = () => { this.resize(); }\r\n\r\n        // Resize every time window is resized\r\n        $rootScope.$on(MainResizedEvent, listener);\r\n\r\n        // Resize right away to avoid flicking\r\n        this.resize();\r\n\r\n        // Resize the element right away\r\n        setTimeout(listener, 100);\r\n    }\r\n\r\n    private resize() {\r\n        const\r\n            $mainBody = $('.pip-main-body'),\r\n            cardContainer = $('.pip-card-container'),\r\n            windowWidth = $('pip-main').width();\r\n        let\r\n            maxWidth = $mainBody.width(),\r\n            maxHeight = $mainBody.height(),\r\n            minWidth = this.$attrs.minWidth ? Math.floor(Number(this.$attrs.minWidth)) : null,\r\n            minHeight = this.$attrs.minHeight ? Math.floor(Number(this.$attrs.minHeight)) : null,\r\n            width = this.$attrs.width ? Math.floor(Number(this.$attrs.width)) : null,\r\n            height = this.$attrs.height ? Math.floor(Number(this.$attrs.height)) : null,\r\n            left, top;\r\n\r\n        // Full-screen on phone\r\n        if (MainBreakpointStatuses.xs) {\r\n            minWidth = null;\r\n            minHeight = null;\r\n            width = null;\r\n            height = null;\r\n            maxWidth = null;\r\n            maxHeight = null;\r\n        }\r\n        // Card view with adjustable margins on tablet and desktop\r\n        else {\r\n            // Set margin and maximum dimensions\r\n            const space = MainBreakpointStatuses['gt-md'] ? 24 : 16;\r\n            maxWidth -= space * 2;\r\n            maxHeight -= space * 2;\r\n\r\n            // Set minimum dimensions\r\n            minWidth = minWidth ? Math.min(minWidth, maxWidth) : null;\r\n            minHeight = minHeight ? Math.min(minHeight, maxHeight) : null;\r\n\r\n            // Set regular dimensions\r\n            width = width ? Math.min(width, maxWidth) : null;\r\n            height = height ? Math.min(height, maxHeight) : null;\r\n        }\r\n\r\n        // Set dimensions\r\n        this.$element.css('max-width', maxWidth ? maxWidth + 'px' : '');\r\n        this.$element.css('min-width', minWidth ? minWidth + 'px' : '');\r\n        this.$element.css('width', width ? width + 'px' : '');\r\n        this.$element.css('height', height ? height + 'px' : '');\r\n\r\n        if (!cardContainer.hasClass('pip-outer-scroll')) {\r\n            this.$element.css('max-height', maxHeight ? maxHeight + 'px' : '');\r\n            this.$element.css('min-height', minHeight ? minHeight + 'px' : '');\r\n            const\r\n                $header = this.$element.find('.pip-header:visible'),\r\n                $footer = this.$element.find('.pip-footer:visible'),\r\n                $body = this.$element.find('.pip-body');\r\n            let maxBodyHeight = maxHeight || $mainBody.height();\r\n\r\n            if ($header.length > 0)\r\n                maxBodyHeight -= $header.outerHeight(true);\r\n            if ($footer.length > 0)\r\n                maxBodyHeight -= $footer.outerHeight(true);\r\n\r\n            $body.css('max-height', maxBodyHeight + 'px');\r\n        } else {\r\n            cardContainer.addClass('pip-scroll');\r\n            if (MainBreakpointStatuses.xs) {\r\n                left = 0;\r\n                top = 0;\r\n            } else {\r\n                left = cardContainer.width() / 2 - this.$element.width() / 2 - 16;\r\n                top = Math.max(cardContainer.height() / 2 - this.$element.height() / 2 - 16, 0);\r\n            }\r\n\r\n            this.$element.css('left', left);\r\n            this.$element.css('top', top);\r\n\r\n            setTimeout(() => { this.$element.css('display', 'flex'); }, 100);\r\n        }\r\n\r\n        // Notify child controls that layout was resized\r\n        this.$rootScope.$emit('pipLayoutResized');\r\n    }\r\n}\r\n\r\nfunction cardDirective($rootScope: ng.IRootScopeService) {\r\n    \"ngInject\";\r\n\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope, $element, $attrs) => {\r\n            new CardDirectiveLink($rootScope, $element, $attrs);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipCard', cardDirective);\r\n\r\n})();","// Avoid default export\r\n(() => {\r\n\r\nfunction dialogDirective(): ng.IDirective {\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\r\n            $element.addClass('pip-dialog');\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipDialog', dialogDirective);\r\n\r\n})();","// Avoid default export\r\n(() => {\r\n\r\nfunction documentDirective(): ng.IDirective {\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\r\n            $element.addClass('pip-document');\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipDocument', documentDirective);\r\n\r\n})();","import { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\r\nimport { MainResizedEvent } from '../media/IMediaService';\r\nimport { MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\n    interface IMainDirectiveAttributes extends ng.IAttributes {\r\n        pipContainer: string;\r\n    }\r\n\r\n    class MainDirectiveController implements ng.IController {\r\n        private _container: any;\r\n\r\n        public constructor(\r\n            private $scope: ng.IScope,\r\n            private $element: angular.IRootElementService,\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $attrs: IMainDirectiveAttributes\r\n        ) {\r\n            \"ngInject\";\r\n            this._container = $attrs.pipContainer ? $($attrs.pipContainer) : $element;\r\n\r\n            // Add CSS class\r\n            $element.addClass('pip-main');\r\n\r\n            // Add resize listener\r\n            const listener = () => { this.resize(); };\r\n            addResizeListener(this._container[0], listener);\r\n\r\n            // Unbind when scope is removed\r\n            $scope.$on('$destroy', () => {\r\n                removeResizeListener(this._container[0], listener);\r\n            });\r\n\r\n            // Perform initial calculations\r\n            this.updateBreakpointStatuses();\r\n        }\r\n\r\n        private updateBreakpointStatuses() {\r\n            const width = this._container.innerWidth();\r\n            const body = $('body');\r\n\r\n            MainBreakpointStatuses.update(MainBreakpoints, width);\r\n\r\n            $.each(MainBreakpointStatuses, (breakpoint, status) => {\r\n                if (_.isBoolean(status)) {\r\n                    body[status ? 'addClass' : 'removeClass']('pip-' + breakpoint);\r\n                }\r\n            });\r\n\r\n            this.$timeout(() => {\r\n                this.$rootScope.$apply();\r\n            });\r\n        }\r\n\r\n        private resize() {\r\n            this.updateBreakpointStatuses();\r\n            this.$rootScope.$emit(MainResizedEvent, MainBreakpointStatuses);\r\n        }\r\n    }\r\n\r\n    class MainBodyDirectiveLink {\r\n        public constructor(\r\n            $scope: ng.IScope,\r\n            $element: angular.IRootElementService\r\n        ) {\r\n            \"ngInject\";\r\n            // Add CSS class\r\n            $element.addClass('pip-main-body');\r\n        }\r\n    }\r\n\r\n    function mainDirective(): ng.IDirective {\r\n        \"ngInject\";\r\n        return {\r\n            restrict: 'EA',\r\n            controller: MainDirectiveController,\r\n            controllerAs: 'vm'\r\n        }\r\n    }\r\n\r\n    function mainBodyDirective(): ng.IDirective {\r\n        \"ngInject\";\r\n        return {\r\n            restrict: 'EA',\r\n            link: MainBodyDirectiveLink\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipLayout')\r\n        .directive('pipMain', mainDirective)\r\n        .directive('pipMainBody', mainBodyDirective);\r\n\r\n})();","(() => {\r\n\r\n    function simpleDirective(): ng.IDirective {\r\n        \"ngInject\";\r\n        return {\r\n            restrict: 'EA',\r\n            link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\r\n                $element.addClass('pip-simple');\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipLayout')\r\n        .directive('pipSimple', simpleDirective);\r\n\r\n})();","import { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\r\nimport { MainResizedEvent, LayoutResizedEvent } from '../media/IMediaService';\r\nimport { MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\r\n\r\ndeclare var Masonry: any;\r\n\r\ninterface ITilesDirectiveAttributes extends ng.IAttributes {\r\n    columnWidth: string | number;\r\n    pipInfinite: string | boolean | number;\r\n}\r\n\r\nclass TilesOptions {\r\n    gutter: number;\r\n    isFitWidth: boolean;\r\n    isResizeBound: boolean;\r\n    transitionDuration: number;\r\n}\r\n\r\ninterface ITilesControllerScope extends ng.IScope {\r\n    tilesOptions: TilesOptions;\r\n}\r\n\r\nclass TilesDirectiveLink {\r\n    private _columnWidth: number;\r\n    private _container: any;\r\n\tprivate _heading: any;\r\n    private _prevContainerWidth: number;\r\n    private _masonry: any;\r\n    private _sizer: any;\r\n\r\n    public constructor(\r\n        $scope: ng.IScope,\r\n        private $element: JQuery,\r\n        private $attrs: ITilesDirectiveAttributes,\r\n        private $rootScope: ng.IRootScopeService\r\n    ) {\r\n        \"ngInject\";\r\n        this._columnWidth = $attrs.columnWidth ? Math.floor(Number($attrs.columnWidth)) : 440;\r\n        this._container = $element.children('.pip-tiles-container');\r\n\t\tthis._heading = $($element.children('.pip-tiles-heading')[0]);\r\n        this._prevContainerWidth = null;\r\n        this._masonry = Masonry.data(this._container[0]);\r\n\r\n        // Add class to the element\r\n        $element.addClass('pip-tiles');\r\n\r\n        // Add resize listener\r\n        const listener = () => { this.resize(false); };\r\n        addResizeListener($element[0], listener);\r\n\r\n        // Unbind when scope is removed\r\n        $scope.$on('$destroy', () => {\r\n            removeResizeListener($element[0], listener);\r\n        });\r\n\r\n        // Insert sizer\r\n        this._sizer = $('<div class=\"pip-tile-sizer\"></div>');\r\n        this._sizer.appendTo(this._container);\r\n\r\n        // Resize every time window is resized\r\n        $rootScope.$on(MainResizedEvent, () => { this.resize(false); });\r\n\r\n        // Resize the element right away\r\n        this.resize(true);\r\n    }\r\n\r\n    private resize(force: boolean) {\r\n        let width = this.$element.parent().width(),\r\n            containerWidth;\r\n\r\n        if (MainBreakpointStatuses['gt-xs'] && (width - 36) > this._columnWidth) {\r\n            width = width - 24 * 2;\r\n\r\n            let columns = Math.floor(width / this._columnWidth);\r\n            containerWidth = (this._columnWidth + 16) * columns - 16;\r\n\r\n            if (containerWidth > width) {\r\n                columns--;\r\n                containerWidth = (this._columnWidth + 16) * columns - 16;\r\n            }\r\n\r\n            if (columns < 1) {\r\n                containerWidth = width;\r\n                this._sizer.css('width', containerWidth + 'px');\r\n            } else {\r\n                this._sizer.css('width', this._columnWidth + 'px');\r\n            }\r\n\r\n            // +10 to avoid precision related error\r\n            this._container.css('width', (containerWidth + 10) + 'px');\r\n\t\t\tif (this._heading) {\r\n\t\t\t\tthis._heading.css('width', (containerWidth + 10) + 'px');\r\n\t\t\t}\r\n            this._container.removeClass('pip-mobile');\r\n        } else {\r\n            width = width - 16 * 2;\r\n            containerWidth = width;\r\n\r\n            this._sizer.css('width', containerWidth + 'px');\r\n            // +10 to avoid precision related error\r\n            this._container.css('width', (containerWidth + 10) + 'px');\r\n\t\t\tif (this._heading) {\r\n\t\t\t\tthis._heading.css('width', (containerWidth + 10) + 'px');\r\n\t\t\t}\r\n            this._container.addClass('pip-mobile');\r\n        }\r\n\r\n        // Manually call layout on tile container\r\n        if (this._prevContainerWidth != containerWidth || force) {\r\n            this._prevContainerWidth = containerWidth;\r\n            this._masonry.layout();\r\n\r\n            // Notify child controls that layout was resized\r\n            this.$rootScope.$emit(LayoutResizedEvent, containerWidth);\r\n        }\r\n    }\r\n}\r\n\r\nfunction tilesDirective($rootScope: ng.IRootScopeService): ng.IDirective {\r\n    \"ngInject\";\r\n\r\n    // Converts value into boolean\r\n    function convertToBoolean(value): boolean {\r\n        if (value == null) return false;\r\n        if (!value) return false;\r\n        value = value.toString().toLowerCase();\r\n        return value == '1' || value == 'true';\r\n    }\r\n\r\n    return {\r\n        restrict: 'EA',\r\n        scope: {\r\n\t\t\tgutter: '='\r\n\t\t},\r\n        transclude: {\r\n            'heading': '?pipTilesHeading'\r\n        },\r\n        template:\r\n        ($element: JQuery, $attrs: ITilesDirectiveAttributes) => {\r\n            if (convertToBoolean($attrs.pipInfinite)) {\r\n                return String()\r\n                    + '<div class=\"pip-tiles-heading\" ng-transclude=\"heading\"></div>'\r\n                    + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\r\n                    + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\r\n                    + ' masonry-options=\"tilesOptions\"  pip-scroll-container=\"\\'.pip-tiles\\'\"'\r\n                    + ' pip-infinite-scroll=\"readScroll()\" >'\r\n                    + '</div>';\r\n            } else {\r\n                return String()\r\n\t\t\t\t\t+ '<div class=\"pip-tiles-heading\" ng-transclude=\"heading\"></div>'\r\n                    + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\r\n                    + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\r\n                    + ' masonry-options=\"tilesOptions\">'\r\n                    + '</div>';\r\n            }\r\n        },\r\n        controller: ($scope: ITilesControllerScope) => {\r\n            $scope.tilesOptions = {\r\n                gutter: $scope.gutter || 8,//16\r\n                isFitWidth: false,\r\n                isResizeBound: false,\r\n                transitionDuration: 0 // '0.2s'\r\n            };\r\n        },\r\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ITilesDirectiveAttributes) => {\r\n            new TilesDirectiveLink($scope, $element, $attrs, $rootScope);\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipTiles', tilesDirective);\r\n","export const MainResizedEvent = 'pipMainResized';\r\nexport const LayoutResizedEvent = 'pipLayoutResized';\r\n\r\nexport class MediaBreakpoints {\r\n    public constructor(\r\n        xs: number, sm: number, md: number, lg: number\r\n    ) {\r\n        this.xs = xs;\r\n        this.sm = sm;\r\n        this.md = md;\r\n        this.lg = lg;\r\n    }\r\n\r\n    public xs: number;\r\n    public sm: number;\r\n    public md: number;\r\n    public lg: number;\r\n}\r\n\r\nexport class MediaBreakpointStatuses {\r\n    public width: number;\r\n    public 'xs': boolean;\r\n    public 'gt-xs': boolean;\r\n    public 'sm': boolean;\r\n    public 'gt-sm': boolean;\r\n    public 'md': boolean;\r\n    public 'gt-md': boolean;\r\n    public 'lg': boolean;\r\n    public 'gt-lg': boolean;\r\n    public 'xl': boolean;\r\n\r\n    public update(breakpoints: MediaBreakpoints, width: number) {\r\n        if (breakpoints == null || width == null) return;\r\n\r\n        this.width = width;\r\n        this['xs'] = width <= breakpoints.xs;\r\n        this['gt-xs'] = width > breakpoints.xs;\r\n        this['sm'] = width > breakpoints.xs && width <= breakpoints.sm;\r\n        this['gt-sm'] = width > breakpoints.sm;\r\n        this['md'] = width > breakpoints.sm && width <= breakpoints.md;\r\n        this['gt-md'] = width > breakpoints.md;\r\n        this['lg'] = width > breakpoints.md && width <= breakpoints.lg;\r\n        this['gt-lg'] = width > breakpoints.lg;\r\n        this['xl'] = this['gt-lg'];\r\n    }\r\n}\r\n\r\nexport interface IMediaService {\r\n    (breakpoint: string): boolean;\r\n    breakpoints: MediaBreakpoints;\r\n    width: number;\r\n} \r\n\r\nexport interface IMediaProvider extends ng.IServiceProvider {\r\n    breakpoints: MediaBreakpoints;\r\n}","import { MediaBreakpoints, MediaBreakpointStatuses } from './IMediaService';\r\nimport { IMediaProvider } from './IMediaService';\r\n\r\nexport let MainBreakpoints = new MediaBreakpoints(639, 716, 1024, 1439);\r\nexport const MainBreakpointStatuses = new MediaBreakpointStatuses();\r\n\r\nclass MediaProvider implements IMediaProvider {\r\n    public get breakpoints(): MediaBreakpoints {\r\n        return MainBreakpoints;\r\n    }\r\n\r\n    public set breakpoints(value: MediaBreakpoints) {\r\n        MainBreakpoints = value;\r\n    }\r\n\r\n    public $get() {\r\n        const service = (size) => {\r\n            return MainBreakpointStatuses[size];\r\n        }\r\n\r\n        Object.defineProperty(service, 'breakpoints', {\r\n            get: () => { return MainBreakpoints; },\r\n            set: (value) => { \r\n                MainBreakpoints = value || new MediaBreakpoints(639, 716, 1024, 1439);\r\n                \r\n                MainBreakpointStatuses.update(\r\n                    MainBreakpoints, \r\n                    MainBreakpointStatuses.width\r\n                );\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(service, 'width', {\r\n            get: () => { \r\n                return MainBreakpointStatuses.width; \r\n            }\r\n        });\r\n\r\n        return service; \r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipMedia')\r\n    .provider('pipMedia', MediaProvider);\r\n","let attachEvent = (<any>document).attachEvent;\r\nlet isIE = navigator.userAgent.match(/Trident/);\r\n\r\nfunction requestFrame(callback): any {\r\n           \"ngInject\";\r\n    let frame = window.requestAnimationFrame\r\n        || (<any>window).mozRequestAnimationFrame\r\n        || (<any>window).webkitRequestAnimationFrame\r\n        || function (callback) {\r\n            return window.setTimeout(callback, 20);\r\n        };\r\n\r\n    return frame(callback);\r\n}\r\n\r\nfunction cancelFrame(): any {\r\n           \"ngInject\";\r\n    let cancel = window.cancelAnimationFrame\r\n        || (<any>window).mozCancelAnimationFrame\r\n        || (<any>window).webkitCancelAnimationFrame\r\n        || window.clearTimeout;\r\n\r\n    return function (id) {\r\n        return cancel(id);\r\n    };\r\n}\r\n\r\nfunction resizeListener(event: any): void {\r\n    const win = event.target || event.srcElement;\r\n    if (win.__resizeRAF__) cancelFrame(/*win.__resizeRAF__*/);\r\n    win.__resizeRAF__ = requestFrame(function () {\r\n        const trigger = win.__resizeTrigger__;\r\n        trigger.__resizeListeners__.forEach(function (fn) {\r\n            fn.call(trigger, event);\r\n        });\r\n    });\r\n}\r\n\r\nfunction loadListener(event: any): void {\r\n    if (this.contentDocument) {\r\n        this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\r\n        this.contentDocument.defaultView.addEventListener('resize', resizeListener);\r\n    }\r\n}\r\n\r\nexport function addResizeListener(element, listener): void {\r\n           \"ngInject\";\r\n    if (!element.__resizeListeners__) {\r\n        element.__resizeListeners__ = [];\r\n        if (attachEvent) {\r\n            element.__resizeTrigger__ = element;\r\n            element.attachEvent('onresize', resizeListener);\r\n        }\r\n        else {\r\n            if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\r\n            const obj: any = element.__resizeTrigger__ = document.createElement('object');\r\n            obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\r\n            obj.__resizeElement__ = element;\r\n            obj.onload = loadListener;\r\n            obj.type = 'text/html';\r\n            if (isIE) element.appendChild(obj);\r\n            obj.data = 'about:blank';\r\n            if (!isIE) element.appendChild(obj);\r\n        }\r\n    }\r\n\r\n    element.__resizeListeners__.push(listener);\r\n}\r\n\r\nexport function removeResizeListener(element, listener): void {\r\n           \"ngInject\";\r\n    if (listener) element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(listener), 1);\r\n    if (!element.__resizeListeners__.length) {\r\n        if (attachEvent) element.detachEvent('onresize', resizeListener);\r\n        else {\r\n            if (element.__resizeTrigger__.contentDocument) {\r\n                element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\r\n                element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\r\n            }\r\n        }\r\n    }\r\n}\r\n","angular.module('pipMedia', []);\r\n\r\nimport './MediaService';\r\nimport './ResizeFunctions';\r\n\r\nexport * from './IMediaService';\r\nexport * from './MediaService';\r\nexport * from './ResizeFunctions';"]}