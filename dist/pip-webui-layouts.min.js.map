{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/auxpanel/AuxPanel.ts","src/auxpanel/AuxPanelPart.ts","src/auxpanel/AuxPanelService.ts","src/auxpanel/IAuxPanelService.ts","src/auxpanel/index.ts","src/index.ts","src/layouts/CardDirective.ts","src/layouts/DialogDirective.ts","src/layouts/DocumentDirective.ts","src/layouts/MainDirective.ts","src/layouts/SimpleDirective.ts","src/layouts/TilesDirective.ts","src/media/IMediaService.ts","src/media/MediaService.ts","src/media/ResizeFunctions.ts","src/media/index.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","layouts","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","MediaService_1","AuxPanelDirectiveController","pipAuxPanel","normalSize","largeSize","$inject","prototype","isGtxs","Number","$","width","MainBreakpoints","xs","isOpen","isGtlg","lg","AuxPanel","controller","transclude","component","../media/MediaService","2","AuxPanelPartDirective","ngIfDirective","ngIf","priority","terminal","restrict","link","$scope","$element","$attrs","apply","AuxPanelPartController_1","$rootScope","_this","partName","pipAuxPanelPart","pos","indexOf","partValue","substr","onAuxPanelChanged","config","$on","event","currentPartValue","parts","angular","3","hookAuxPanelEvents","IAuxPanelService_1","OpenAuxPanelEvent","open","CloseAuxPanelEvent","close","defineProperty","value","AuxPanelService","$mdSidenav","id","_config","_rootScope","_sidenav","get","configurable","classes","sendConfigEvent","_state","$broadcast","AuxPanelStateChangedEvent","enumerable","toggle","_i","arguments","_","each","c","push","reject","cc","part","$emit","AuxPanelChangedEvent","AuxPanelProvider","state","set","IAuxPanelService_2","AuxPanelConfig","type","_service","$get","provider","run","./IAuxPanelService","4","Object","__export","m","p","hasOwnProperty","./auxpanel/index","./layouts/CardDirective","./layouts/DialogDirective","./layouts/DocumentDirective","./layouts/MainDirective","./layouts/SimpleDirective","./layouts/TilesDirective","./media/index","7","cardDirective","CardDirectiveLink","addClass","listener","resize","IMediaService_1","MainResizedEvent","left","top","$mainBody","cardContainer","maxWidth","maxHeight","height","minWidth","Math","floor","minHeight","MainBreakpointStatuses","space","min","css","hasClass","max","setTimeout","$header","find","$footer","$body","maxBodyHeight","outerHeight","8","dialogDirective","documentDirective","directive","10","mainDirective","MainDirectiveController","controllerAs","mainBodyDirective","MainBodyDirectiveLink","$timeout","_container","pipContainer","ResizeFunctions_1","addResizeListener","removeResizeListener","updateBreakpointStatuses","innerWidth","body","update","breakpoint","status","isBoolean","$apply","../media/ResizeFunctions","11","simpleDirective","12","tilesDirective","convertToBoolean","toString","toLowerCase","pipInfinite","String","tilesOptions","gutter","isFitWidth","isResizeBound","TilesDirectiveLink","TilesOptions","_columnWidth","columnWidth","children","_prevContainerWidth","_masonry","Masonry","data","_sizer","appendTo","force","containerWidth","parent","columns","removeClass","layout","LayoutResizedEvent","13","MediaBreakpoints","sm","md","MediaBreakpointStatuses","breakpoints","MediaProvider","service","size","15","callback","frame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","resizeListener","win","target","srcElement","__resizeRAF__","requestFrame","trigger","__resizeTrigger__","__resizeListeners__","forEach","fn","loadListener","contentDocument","defaultView","__resizeElement__","addEventListener","element","attachEvent","getComputedStyle","position","style","obj","document","createElement","setAttribute","onload","isIE","appendChild","removeEventListener","removeChild","navigator","userAgent","match"],"mappings":"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","file":"pip-webui-layouts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { MainBreakpoints } from '../media/MediaService';\r\nimport { IAuxPanelService } from './IAuxPanelService';\r\n\r\n{\r\n    class AuxPanelDirectiveController {\r\n        private normalSize: number = 320;\r\n        private largeSize: number = 480;\r\n\r\n        public constructor(private pipAuxPanel: IAuxPanelService) {\r\n            \"ngInject\";\r\n        }\r\n\r\n        public isGtxs(): boolean {\r\n            return Number($('body').width()) > MainBreakpoints.xs && this.pipAuxPanel.isOpen();\r\n        }\r\n\r\n        public isGtlg(): boolean {\r\n            return Number($('body').width()) > (MainBreakpoints.lg + this.largeSize);\r\n        }\r\n    }\r\n\r\n    const AuxPanel: ng.IComponentOptions = {\r\n\r\n        controller: AuxPanelDirectiveController,\r\n        transclude: true,\r\n        template: '<md-sidenav class=\"md-sidenav-right md-whiteframe-z2 pip-auxpanel color-content-bg\" ng-class=\"{\\'pip-large\\': $ctrl.isGtlg()}\"' +\r\n        'md-component-id=\"pip-auxpanel\" md-is-locked-open=\"$ctrl.isGtxs()\" pip-focused ng-transclude>' +\r\n        '</md-sidenav>'\r\n    }\r\n\r\n    angular\r\n        .module('pipAuxPanel')\r\n        .component('pipAuxPanel', AuxPanel);\r\n\r\n}","{\r\n\r\n    class AuxPanelPartController {\r\n        private partName: string;\r\n        private partValue: string;\r\n        private pos: number;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            $element: ng.IRootElementService,\r\n            $attrs,\r\n            $rootScope: ng.IRootScopeService,\r\n            pipAuxPanel) {\r\n            \"ngInject\";\r\n            this.partName = '' + $attrs.pipAuxPanelPart;\r\n            this.pos = this.partName.indexOf(':');\r\n            if (this.pos > 0) {\r\n                this.partValue = this.partName.substr(this.pos + 1);\r\n                this.partName = this.partName.substr(0, this.pos);\r\n            }\r\n\r\n            this.onAuxPanelChanged(null, pipAuxPanel.config)\r\n            $rootScope.$on('pipAuxPanelChanged', (event, config) => {\r\n                this.onAuxPanelChanged(event, config);\r\n            });\r\n\r\n        }\r\n\r\n        private onAuxPanelChanged(event, config) {\r\n            let parts = config.parts || {};\r\n            let currentPartValue = config[this.partName];\r\n            // Set visible variable to switch ngIf\r\n\r\n            this.$scope['visible'] = this.partValue ? currentPartValue == this.partValue : currentPartValue;\r\n        }\r\n    }\r\n\r\n\r\n    function AuxPanelPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        let ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function ($scope: ng.IScope, $element, $attrs) {\r\n                // Visualize based on visible variable in scope\r\n                $attrs.ngIf = () => { return $scope['visible'] };\r\n                ngIf.link.apply(ngIf);\r\n            },\r\n            controller: AuxPanelPartController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipAuxPanel')\r\n        .directive('pipAuxPanelPart', AuxPanelPartDirective);\r\n\r\n}","import { AuxPanelStateChangedEvent, AuxPanelChangedEvent, OpenAuxPanelEvent, CloseAuxPanelEvent } from './IAuxPanelService';\r\nimport { AuxPanelConfig, IAuxPanelService, IAuxPanelProvider } from './IAuxPanelService';\r\n\r\nclass AuxPanelService implements IAuxPanelService {\r\n    private _config: AuxPanelConfig;\r\n    private _state: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _sidenav: ng.material.ISidenavService;\r\n    private id = 'pip-auxpanel';\r\n\r\n    public constructor(config: AuxPanelConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n\r\n        \"ngInject\";\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n        this._sidenav = $mdSidenav;\r\n    }\r\n\r\n    public get config(): AuxPanelConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: any) {\r\n        this._state = value || {};\r\n        this._rootScope.$broadcast(AuxPanelStateChangedEvent, value);\r\n    }\r\n\r\n    public isOpen(): boolean {\r\n        return this._sidenav(this.id).isOpen();\r\n    }\r\n\r\n    public open() {\r\n        this._sidenav(this.id).open();\r\n    }\r\n\r\n    public close() {\r\n        this._sidenav(this.id).close();\r\n    }\r\n\r\n    public toggle() {\r\n        this._sidenav(this.id).toggle();\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(AuxPanelChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass AuxPanelProvider implements IAuxPanelProvider {\r\n    private _config: AuxPanelConfig = {\r\n        parts: {},\r\n        classes: [],\r\n        type: 'sticky',\r\n        state: null\r\n    };\r\n\r\n    private _service: AuxPanelService;\r\n\r\n    public get config(): AuxPanelConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: AuxPanelConfig) {\r\n        this._config = value || new AuxPanelConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._config.type;\r\n    }\r\n\r\n    public set type(value: string) {\r\n        this._config.type = value;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public open(): void {\r\n        this._service.open();\r\n    }\r\n\r\n    public close(): void {\r\n        this._service.close();\r\n    }\r\n\r\n    public toggle(): void {\r\n        this._service.toggle();\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AuxPanelService(this._config, $rootScope, $mdSidenav);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nfunction hookAuxPanelEvents($rootScope: ng.IRootScopeService, pipAuxPanel: IAuxPanelService) {\r\n    \"ngInject\";\r\n    $rootScope.$on(OpenAuxPanelEvent, () => { pipAuxPanel.open(); });\r\n    $rootScope.$on(CloseAuxPanelEvent, () => { pipAuxPanel.close(); });\r\n}\r\n\r\nangular\r\n    .module('pipAuxPanel')\r\n    .provider('pipAuxPanel', AuxPanelProvider)\r\n    .run(hookAuxPanelEvents);\r\n","export const AuxPanelChangedEvent = 'pipAuxPanelChanged';\r\nexport const AuxPanelStateChangedEvent = 'pipAuxPanelStateChanged';\r\nexport const OpenAuxPanelEvent = 'pipOpenAuxPanel';\r\nexport const CloseAuxPanelEvent = 'pipCloseAuxPanel';\r\n\r\nexport class AuxPanelConfig {\r\n    parts: any;\r\n    classes: string[];\r\n    state: any;\r\n    type: string;\r\n} \r\n\r\nexport interface IAuxPanelService {\r\n    readonly config: AuxPanelConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n    state: any;    \r\n\r\n    isOpen(): boolean;\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n  \r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n \r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface IAuxPanelProvider extends ng.IServiceProvider {\r\n    config: AuxPanelConfig;\r\n    parts: any;\r\n    type: string;\r\n    classes: string[];\r\n\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}","angular.module('pipAuxPanel', ['ngMaterial']);\r\n\r\nimport './AuxPanelService';\r\nimport './AuxPanelPart';\r\nimport './AuxPanel';\r\n\r\nexport * from './IAuxPanelService';","angular.module('pipLayout', ['wu.masonry', 'pipMedia', 'pipAuxPanel']);\r\n\r\nimport './media/index';\r\n\r\nimport './layouts/MainDirective';\r\nimport './layouts/CardDirective';\r\nimport './layouts/DialogDirective';\r\nimport './layouts/DocumentDirective';\r\nimport './layouts/SimpleDirective';\r\nimport './layouts/TilesDirective';\r\nimport './auxpanel/index';\r\n\r\nexport * from './media/index';\r\n","import { MainResizedEvent, LayoutResizedEvent } from '../media/IMediaService';\r\nimport { MainBreakpointStatuses } from '../media/MediaService';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\ninterface ICardDirectiveAttributes extends ng.IAttributes {\r\n    minWidth: string | number;\r\n    minHeight: string | number;\r\n    width: string | number;\r\n    height: string | number;\r\n}\r\n\r\nclass CardDirectiveLink {\r\n\r\n    public constructor(\r\n        private $rootScope: ng.IRootScopeService, \r\n        private $element: JQuery, \r\n        private $attrs: ICardDirectiveAttributes\r\n    ) {\r\n       \"ngInject\";\r\n        // Add class to the element\r\n        $element.addClass('pip-card');\r\n\r\n        let listener = () => { this.resize(); }\r\n\r\n        // Resize every time window is resized\r\n        $rootScope.$on(MainResizedEvent, listener);\r\n\r\n        // Resize right away to avoid flicking\r\n        this.resize();\r\n\r\n        // Resize the element right away\r\n        setTimeout(listener, 100);\r\n    }\r\n\r\n    private resize() {\r\n        const\r\n            $mainBody = $('.pip-main-body'),\r\n            cardContainer = $('.pip-card-container'),\r\n            windowWidth = $('pip-main').width();\r\n        let\r\n            maxWidth = $mainBody.width(),\r\n            maxHeight = $mainBody.height(),\r\n            minWidth = this.$attrs.minWidth ? Math.floor(Number(this.$attrs.minWidth)) : null,\r\n            minHeight = this.$attrs.minHeight ? Math.floor(Number(this.$attrs.minHeight)) : null,\r\n            width = this.$attrs.width ? Math.floor(Number(this.$attrs.width)) : null,\r\n            height = this.$attrs.height ? Math.floor(Number(this.$attrs.height)) : null,\r\n            left, top;\r\n\r\n        // Full-screen on phone\r\n        if (MainBreakpointStatuses.xs) {\r\n            minWidth = null;\r\n            minHeight = null;\r\n            width = null;\r\n            height = null;\r\n            maxWidth = null;\r\n            maxHeight = null;\r\n        }\r\n        // Card view with adjustable margins on tablet and desktop\r\n        else {\r\n            // Set margin and maximum dimensions\r\n            const space = MainBreakpointStatuses['gt-md'] ? 24 : 16;\r\n            maxWidth -= space * 2;\r\n            maxHeight -= space * 2;\r\n\r\n            // Set minimum dimensions\r\n            minWidth = minWidth ? Math.min(minWidth, maxWidth) : null;\r\n            minHeight = minHeight ? Math.min(minHeight, maxHeight) : null;\r\n\r\n            // Set regular dimensions\r\n            width = width ? Math.min(width, maxWidth) : null;\r\n            height = height ? Math.min(height, maxHeight) : null;\r\n        }\r\n\r\n        // Set dimensions\r\n        this.$element.css('max-width', maxWidth ? maxWidth + 'px' : '');\r\n        this.$element.css('min-width', minWidth ? minWidth + 'px' : '');\r\n        this.$element.css('width', width ? width + 'px' : '');\r\n        this.$element.css('height', height ? height + 'px' : '');\r\n\r\n        if (!cardContainer.hasClass('pip-outer-scroll')) {\r\n            this.$element.css('max-height', maxHeight ? maxHeight + 'px' : '');\r\n            this.$element.css('min-height', minHeight ? minHeight + 'px' : '');\r\n            const\r\n                $header = this.$element.find('.pip-header:visible'),\r\n                $footer = this.$element.find('.pip-footer:visible'),\r\n                $body = this.$element.find('.pip-body');\r\n            let maxBodyHeight = maxHeight || $mainBody.height();\r\n\r\n            if ($header.length > 0)\r\n                maxBodyHeight -= $header.outerHeight(true);\r\n            if ($footer.length > 0)\r\n                maxBodyHeight -= $footer.outerHeight(true);\r\n\r\n            $body.css('max-height', maxBodyHeight + 'px');\r\n        } else {\r\n            cardContainer.addClass('pip-scroll');\r\n            if (MainBreakpointStatuses.xs) {\r\n                left = 0;\r\n                top = 0;\r\n            } else {\r\n                left = cardContainer.width() / 2 - this.$element.width() / 2 - 16;\r\n                top = Math.max(cardContainer.height() / 2 - this.$element.height() / 2 - 16, 0);\r\n            }\r\n\r\n            this.$element.css('left', left);\r\n            this.$element.css('top', top);\r\n\r\n            setTimeout(() => { this.$element.css('display', 'flex'); }, 100);\r\n        }\r\n\r\n        // Notify child controls that layout was resized\r\n        this.$rootScope.$emit('pipLayoutResized');\r\n    }\r\n}\r\n\r\nfunction cardDirective($rootScope: ng.IRootScopeService) {\r\n    \"ngInject\";\r\n\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope, $element, $attrs) => {\r\n            new CardDirectiveLink($rootScope, $element, $attrs);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipCard', cardDirective);\r\n\r\n})();","// Avoid default export\r\n(() => {\r\n\r\nfunction dialogDirective(): ng.IDirective {\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\r\n            $element.addClass('pip-dialog');\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipDialog', dialogDirective);\r\n\r\n})();","// Avoid default export\r\n(() => {\r\n\r\nfunction documentDirective(): ng.IDirective {\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\r\n            $element.addClass('pip-document');\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipDocument', documentDirective);\r\n\r\n})();","import { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\r\nimport { MainResizedEvent } from '../media/IMediaService';\r\nimport { MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\n    interface IMainDirectiveAttributes extends ng.IAttributes {\r\n        pipContainer: string;\r\n    }\r\n\r\n    class MainDirectiveController implements ng.IController {\r\n        private _container: any;\r\n\r\n        public constructor(\r\n            private $scope: ng.IScope,\r\n            private $element: angular.IRootElementService,\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $attrs: IMainDirectiveAttributes\r\n        ) {\r\n            \"ngInject\";\r\n            this._container = $attrs.pipContainer ? $($attrs.pipContainer) : $element;\r\n\r\n            // Add CSS class\r\n            $element.addClass('pip-main');\r\n\r\n            // Add resize listener\r\n            const listener = () => { this.resize(); };\r\n            addResizeListener(this._container[0], listener);\r\n\r\n            // Unbind when scope is removed\r\n            $scope.$on('$destroy', () => {\r\n                removeResizeListener(this._container[0], listener);\r\n            });\r\n\r\n            // Perform initial calculations\r\n            this.updateBreakpointStatuses();\r\n        }\r\n\r\n        private updateBreakpointStatuses() {\r\n            const width = this._container.innerWidth();\r\n            const body = $('body');\r\n\r\n            MainBreakpointStatuses.update(MainBreakpoints, width);\r\n\r\n            $.each(MainBreakpointStatuses, (breakpoint, status) => {\r\n                if (_.isBoolean(status)) {\r\n                    body[status ? 'addClass' : 'removeClass']('pip-' + breakpoint);\r\n                }\r\n            });\r\n\r\n            this.$timeout(() => {\r\n                this.$rootScope.$apply();\r\n            });\r\n        }\r\n\r\n        private resize() {\r\n            this.updateBreakpointStatuses();\r\n            this.$rootScope.$emit(MainResizedEvent, MainBreakpointStatuses);\r\n        }\r\n    }\r\n\r\n    class MainBodyDirectiveLink {\r\n        public constructor(\r\n            $scope: ng.IScope,\r\n            $element: angular.IRootElementService\r\n        ) {\r\n            \"ngInject\";\r\n            // Add CSS class\r\n            $element.addClass('pip-main-body');\r\n        }\r\n    }\r\n\r\n    function mainDirective(): ng.IDirective {\r\n        \"ngInject\";\r\n        return {\r\n            restrict: 'EA',\r\n            controller: MainDirectiveController,\r\n            controllerAs: 'vm'\r\n        }\r\n    }\r\n\r\n    function mainBodyDirective(): ng.IDirective {\r\n        \"ngInject\";\r\n        return {\r\n            restrict: 'EA',\r\n            link: MainBodyDirectiveLink\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipLayout')\r\n        .directive('pipMain', mainDirective)\r\n        .directive('pipMainBody', mainBodyDirective);\r\n\r\n})();","(() => {\r\n\r\n    function simpleDirective(): ng.IDirective {\r\n        \"ngInject\";\r\n        return {\r\n            restrict: 'EA',\r\n            link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\r\n                $element.addClass('pip-simple');\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipLayout')\r\n        .directive('pipSimple', simpleDirective);\r\n\r\n})();","import { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\r\nimport { MainResizedEvent, LayoutResizedEvent } from '../media/IMediaService';\r\nimport { MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\r\n\r\ndeclare var Masonry: any;\r\n\r\ninterface ITilesDirectiveAttributes extends ng.IAttributes {\r\n    columnWidth: string | number;\r\n    pipInfinite: string | boolean | number;\r\n}\r\n\r\nclass TilesOptions {\r\n    gutter: number;\r\n    isFitWidth: boolean;\r\n    isResizeBound: boolean;\r\n    transitionDuration: number;\r\n}\r\n\r\ninterface ITilesControllerScope extends ng.IScope {\r\n    tilesOptions: TilesOptions;\r\n}\r\n\r\nclass TilesDirectiveLink {\r\n    private _columnWidth: number;\r\n    private _container: any;\r\n    private _prevContainerWidth: number;\r\n    private _masonry: any;\r\n    private _sizer: any;\r\n\r\n    public constructor(\r\n        $scope: ng.IScope,\r\n        private $element: JQuery,\r\n        private $attrs: ITilesDirectiveAttributes,\r\n        private $rootScope: ng.IRootScopeService\r\n    ) {\r\n        \"ngInject\";\r\n        this._columnWidth = $attrs.columnWidth ? Math.floor(Number($attrs.columnWidth)) : 440;\r\n        this._container = $element.children('.pip-tiles-container');\r\n        this._prevContainerWidth = null;\r\n        this._masonry = Masonry.data(this._container[0]);\r\n\r\n        // Add class to the element\r\n        $element.addClass('pip-tiles');\r\n\r\n        // Add resize listener\r\n        const listener = () => { this.resize(false); };\r\n        addResizeListener($element[0], listener);\r\n\r\n        // Unbind when scope is removed\r\n        $scope.$on('$destroy', () => {\r\n            removeResizeListener($element[0], listener);\r\n        });\r\n\r\n        // Insert sizer\r\n        this._sizer = $('<div class=\"pip-tile-sizer\"></div>');\r\n        this._sizer.appendTo(this._container);\r\n\r\n        // Resize every time window is resized\r\n        $rootScope.$on(MainResizedEvent, () => { this.resize(false); });\r\n\r\n        // Resize the element right away\r\n        this.resize(true);\r\n    }\r\n\r\n    private resize(force: boolean) {\r\n        let width = this.$element.parent().width(),\r\n            containerWidth;\r\n\r\n        if (MainBreakpointStatuses['gt-xs'] && (width - 36) > this._columnWidth) {\r\n            width = width - 24 * 2;\r\n\r\n            let columns = Math.floor(width / this._columnWidth);\r\n            containerWidth = (this._columnWidth + 16) * columns - 16;\r\n\r\n            if (containerWidth > width) {\r\n                columns--;\r\n                containerWidth = (this._columnWidth + 16) * columns - 16;\r\n            }\r\n\r\n            if (columns < 1) {\r\n                containerWidth = width;\r\n                this._sizer.css('width', containerWidth + 'px');\r\n            } else {\r\n                this._sizer.css('width', this._columnWidth + 'px');\r\n            }\r\n\r\n            // +10 to avoid precision related error\r\n            this._container.css('width', (containerWidth + 10) + 'px');\r\n            this._container.removeClass('pip-mobile');\r\n        } else {\r\n            width = width - 16 * 2;\r\n            containerWidth = width;\r\n\r\n            this._sizer.css('width', containerWidth + 'px');\r\n            // +10 to avoid precision related error\r\n            this._container.css('width', (containerWidth + 10) + 'px');\r\n            this._container.addClass('pip-mobile');\r\n        }\r\n\r\n        // Manually call layout on tile container\r\n        if (this._prevContainerWidth != containerWidth || force) {\r\n            this._prevContainerWidth = containerWidth;\r\n            this._masonry.layout();\r\n\r\n            // Notify child controls that layout was resized\r\n            this.$rootScope.$emit(LayoutResizedEvent);\r\n        }\r\n    }\r\n}\r\n\r\nfunction tilesDirective($rootScope: ng.IRootScopeService): ng.IDirective {\r\n    \"ngInject\";\r\n\r\n    // Converts value into boolean\r\n    function convertToBoolean(value): boolean {\r\n        if (value == null) return false;\r\n        if (!value) return false;\r\n        value = value.toString().toLowerCase();\r\n        return value == '1' || value == 'true';\r\n    }\r\n\r\n    return {\r\n        restrict: 'EA',\r\n        scope: false,\r\n        transclude: true,\r\n        template:\r\n        ($element: JQuery, $attrs: ITilesDirectiveAttributes) => {\r\n            if (convertToBoolean($attrs.pipInfinite)) {\r\n                return String()\r\n                    + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\r\n                    + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\r\n                    + ' masonry-options=\"tilesOptions\"  pip-scroll-container=\"\\'.pip-tiles\\'\"'\r\n                    + ' pip-infinite-scroll=\"readScroll()\" >'\r\n                    + '</div>';\r\n            } else {\r\n                return String()\r\n                    + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\r\n                    + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\r\n                    + ' masonry-options=\"tilesOptions\">'\r\n                    + '</div>';\r\n            }\r\n        },\r\n        controller: ($scope: ITilesControllerScope) => {\r\n            $scope.tilesOptions = {\r\n                gutter: 8,//16\r\n                isFitWidth: false,\r\n                isResizeBound: false,\r\n                transitionDuration: 0 // '0.2s'\r\n            };\r\n        },\r\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ITilesDirectiveAttributes) => {\r\n            new TilesDirectiveLink($scope, $element, $attrs, $rootScope);\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipTiles', tilesDirective);\r\n","export const MainResizedEvent = 'pipMainResized';\r\nexport const LayoutResizedEvent = 'pipLayoutResized';\r\n\r\nexport class MediaBreakpoints {\r\n    public constructor(\r\n        xs: number, sm: number, md: number, lg: number\r\n    ) {\r\n        this.xs = xs;\r\n        this.sm = sm;\r\n        this.md = md;\r\n        this.lg = lg;\r\n    }\r\n\r\n    public xs: number;\r\n    public sm: number;\r\n    public md: number;\r\n    public lg: number;\r\n}\r\n\r\nexport class MediaBreakpointStatuses {\r\n    public width: number;\r\n    public 'xs': boolean;\r\n    public 'gt-xs': boolean;\r\n    public 'sm': boolean;\r\n    public 'gt-sm': boolean;\r\n    public 'md': boolean;\r\n    public 'gt-md': boolean;\r\n    public 'lg': boolean;\r\n    public 'gt-lg': boolean;\r\n    public 'xl': boolean;\r\n\r\n    public update(breakpoints: MediaBreakpoints, width: number) {\r\n        if (breakpoints == null || width == null) return;\r\n\r\n        this.width = width;\r\n        this['xs'] = width <= breakpoints.xs;\r\n        this['gt-xs'] = width > breakpoints.xs;\r\n        this['sm'] = width > breakpoints.xs && width <= breakpoints.sm;\r\n        this['gt-sm'] = width > breakpoints.sm;\r\n        this['md'] = width > breakpoints.sm && width <= breakpoints.md;\r\n        this['gt-md'] = width > breakpoints.md;\r\n        this['lg'] = width > breakpoints.md && width <= breakpoints.lg;\r\n        this['gt-lg'] = width > breakpoints.lg;\r\n        this['xl'] = this['gt-lg'];\r\n    }\r\n}\r\n\r\nexport interface IMediaService {\r\n    (breakpoint: string): boolean;\r\n    breakpoints: MediaBreakpoints;\r\n    width: number;\r\n} \r\n\r\nexport interface IMediaProvider extends ng.IServiceProvider {\r\n    breakpoints: MediaBreakpoints;\r\n}","import { MediaBreakpoints, MediaBreakpointStatuses } from './IMediaService';\r\nimport { IMediaProvider } from './IMediaService';\r\n\r\nexport let MainBreakpoints = new MediaBreakpoints(639, 716, 1024, 1439);\r\nexport const MainBreakpointStatuses = new MediaBreakpointStatuses();\r\n\r\nclass MediaProvider implements IMediaProvider {\r\n    public get breakpoints(): MediaBreakpoints {\r\n        return MainBreakpoints;\r\n    }\r\n\r\n    public set breakpoints(value: MediaBreakpoints) {\r\n        MainBreakpoints = value;\r\n    }\r\n\r\n    public $get() {\r\n        const service = (size) => {\r\n            return MainBreakpointStatuses[size];\r\n        }\r\n\r\n        Object.defineProperty(service, 'breakpoints', {\r\n            get: () => { return MainBreakpoints; },\r\n            set: (value) => { \r\n                MainBreakpoints = value || new MediaBreakpoints(639, 716, 1024, 1439);\r\n                \r\n                MainBreakpointStatuses.update(\r\n                    MainBreakpoints, \r\n                    MainBreakpointStatuses.width\r\n                );\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(service, 'width', {\r\n            get: () => { \r\n                return MainBreakpointStatuses.width; \r\n            }\r\n        });\r\n\r\n        return service; \r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipMedia')\r\n    .provider('pipMedia', MediaProvider);\r\n","let attachEvent = (<any>document).attachEvent;\r\nlet isIE = navigator.userAgent.match(/Trident/);\r\n\r\nfunction requestFrame(callback): any {\r\n           \"ngInject\";\r\n    let frame = window.requestAnimationFrame\r\n        || (<any>window).mozRequestAnimationFrame\r\n        || (<any>window).webkitRequestAnimationFrame\r\n        || function (callback) {\r\n            return window.setTimeout(callback, 20);\r\n        };\r\n\r\n    return frame(callback);\r\n}\r\n\r\nfunction cancelFrame(): any {\r\n           \"ngInject\";\r\n    let cancel = window.cancelAnimationFrame\r\n        || (<any>window).mozCancelAnimationFrame\r\n        || (<any>window).webkitCancelAnimationFrame\r\n        || window.clearTimeout;\r\n\r\n    return function (id) {\r\n        return cancel(id);\r\n    };\r\n}\r\n\r\nfunction resizeListener(event: any): void {\r\n    const win = event.target || event.srcElement;\r\n    if (win.__resizeRAF__) cancelFrame(/*win.__resizeRAF__*/);\r\n    win.__resizeRAF__ = requestFrame(function () {\r\n        const trigger = win.__resizeTrigger__;\r\n        trigger.__resizeListeners__.forEach(function (fn) {\r\n            fn.call(trigger, event);\r\n        });\r\n    });\r\n}\r\n\r\nfunction loadListener(event: any): void {\r\n    if (this.contentDocument) {\r\n        this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\r\n        this.contentDocument.defaultView.addEventListener('resize', resizeListener);\r\n    }\r\n}\r\n\r\nexport function addResizeListener(element, listener): void {\r\n           \"ngInject\";\r\n    if (!element.__resizeListeners__) {\r\n        element.__resizeListeners__ = [];\r\n        if (attachEvent) {\r\n            element.__resizeTrigger__ = element;\r\n            element.attachEvent('onresize', resizeListener);\r\n        }\r\n        else {\r\n            if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\r\n            const obj: any = element.__resizeTrigger__ = document.createElement('object');\r\n            obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\r\n            obj.__resizeElement__ = element;\r\n            obj.onload = loadListener;\r\n            obj.type = 'text/html';\r\n            if (isIE) element.appendChild(obj);\r\n            obj.data = 'about:blank';\r\n            if (!isIE) element.appendChild(obj);\r\n        }\r\n    }\r\n\r\n    element.__resizeListeners__.push(listener);\r\n}\r\n\r\nexport function removeResizeListener(element, listener): void {\r\n           \"ngInject\";\r\n    if (listener) element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(listener), 1);\r\n    if (!element.__resizeListeners__.length) {\r\n        if (attachEvent) element.detachEvent('onresize', resizeListener);\r\n        else {\r\n            if (element.__resizeTrigger__.contentDocument) {\r\n                element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\r\n                element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\r\n            }\r\n        }\r\n    }\r\n}\r\n","angular.module('pipMedia', []);\r\n\r\nimport './MediaService';\r\nimport './ResizeFunctions';\r\n\r\nexport * from './IMediaService';\r\nexport * from './MediaService';\r\nexport * from './ResizeFunctions';"]}