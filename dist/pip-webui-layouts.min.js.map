{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/auxpanel/AuxPanel.ts","src/auxpanel/AuxPanelPart.ts","src/auxpanel/AuxPanelService.ts","src/auxpanel/IAuxPanelService.ts","src/auxpanel/index.ts","src/index.ts","src/layouts/CardDirective.ts","src/layouts/DialogDirective.ts","src/layouts/DocumentDirective.ts","src/layouts/MainDirective.ts","src/layouts/SimpleDirective.ts","src/layouts/TilesDirective.ts","src/media/IMediaService.ts","src/media/MediaService.ts","src/media/ResizeFunctions.ts","src/media/index.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","layouts","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","MediaService_1","AuxPanelDirectiveController","pipAuxPanel","normalSize","largeSize","$inject","prototype","isGtxs","Number","$","width","MainBreakpoints","xs","isOpen","isGtlg","lg","AuxPanel","controller","transclude","component","../media/MediaService","2","AuxPanelPartDirective","ngIfDirective","ngIf","priority","terminal","restrict","link","$scope","$element","$attrs","apply","AuxPanelPartController_1","$rootScope","_this","partName","pipAuxPanelPart","pos","indexOf","partValue","substr","onAuxPanelChanged","config","$on","event","currentPartValue","parts","angular","3","hookAuxPanelEvents","IAuxPanelService_1","OpenAuxPanelEvent","open","CloseAuxPanelEvent","close","defineProperty","value","AuxPanelService","$mdSidenav","id","_config","_rootScope","_sidenav","get","configurable","classes","sendConfigEvent","_state","$broadcast","AuxPanelStateChangedEvent","enumerable","toggle","_i","arguments","_","each","c","push","reject","cc","part","$emit","AuxPanelChangedEvent","AuxPanelProvider","state","set","IAuxPanelService_2","AuxPanelConfig","type","_service","$get","run","./IAuxPanelService","4","Object","__export","m","p","hasOwnProperty","./auxpanel/index","./layouts/CardDirective","./layouts/DialogDirective","./layouts/DocumentDirective","./layouts/MainDirective","./layouts/SimpleDirective","./layouts/TilesDirective","./media/index","7","cardDirective","CardDirectiveLink","addClass","listener","resize","IMediaService_1","MainResizedEvent","left","top","$mainBody","cardContainer","maxWidth","maxHeight","height","minWidth","Math","floor","minHeight","MainBreakpointStatuses","space","min","css","hasClass","max","setTimeout","$header","find","$footer","$body","maxBodyHeight","outerHeight","8","dialogDirective","documentDirective","directive","10","mainDirective","MainDirectiveController","controllerAs","mainBodyDirective","$timeout","_container","pipContainer","ResizeFunctions_1","addResizeListener","removeResizeListener","updateBreakpointStatuses","innerWidth","body","update","breakpoint","status","isBoolean","$apply","MainBodyDirectiveLink","../media/ResizeFunctions","11","simpleDirective","12","tilesDirective","convertToBoolean","toString","toLowerCase","pipInfinite","String","tilesOptions","gutter","isFitWidth","isResizeBound","TilesDirectiveLink","TilesOptions","_columnWidth","columnWidth","children","_prevContainerWidth","_masonry","Masonry","data","_sizer","appendTo","force","containerWidth","parent","columns","removeClass","layout","LayoutResizedEvent","13","MediaBreakpoints","sm","md","MediaBreakpointStatuses","breakpoints","MediaProvider","service","size","15","callback","frame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","resizeListener","win","target","srcElement","__resizeRAF__","requestFrame","trigger","__resizeTrigger__","__resizeListeners__","forEach","fn","loadListener","contentDocument","defaultView","__resizeElement__","addEventListener","element","attachEvent","getComputedStyle","position","style","obj","document","createElement","setAttribute","onload","isIE","appendChild","removeEventListener","removeChild","navigator","userAgent","match"],"mappings":"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","file":"pip-webui-layouts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { MainBreakpoints } from '../media/MediaService';\nimport { IAuxPanelService } from './IAuxPanelService';\n\n{\n    class AuxPanelDirectiveController {\n        private normalSize: number = 320;\n        private largeSize: number = 480;\n\n        public constructor(private pipAuxPanel: IAuxPanelService) {\n            \"ngInject\";\n        }\n\n        public isGtxs(): boolean {\n            return Number($('body').width()) > MainBreakpoints.xs && this.pipAuxPanel.isOpen();\n        }\n\n        public isGtlg(): boolean {\n            return Number($('body').width()) > (MainBreakpoints.lg + this.largeSize);\n        }\n    }\n\n    const AuxPanel: ng.IComponentOptions = {\n\n        controller: AuxPanelDirectiveController,\n        transclude: true,\n        template: '<md-sidenav class=\"md-sidenav-right md-whiteframe-z2 pip-auxpanel color-content-bg\" ng-class=\"{\\'pip-large\\': $ctrl.isGtlg()}\"' +\n        'md-component-id=\"pip-auxpanel\" md-is-locked-open=\"$ctrl.isGtxs()\" pip-focused ng-transclude>' +\n        '</md-sidenav>'\n    }\n\n    angular\n        .module('pipAuxPanel')\n        .component('pipAuxPanel', AuxPanel);\n\n}","{\n\n    class AuxPanelPartController {\n        private partName: string;\n        private partValue: string;\n        private pos: number;\n\n        constructor(\n            private $scope: ng.IScope,\n            $element: ng.IRootElementService,\n            $attrs,\n            $rootScope: ng.IRootScopeService,\n            pipAuxPanel) {\n            \"ngInject\";\n            this.partName = '' + $attrs.pipAuxPanelPart;\n            this.pos = this.partName.indexOf(':');\n            if (this.pos > 0) {\n                this.partValue = this.partName.substr(this.pos + 1);\n                this.partName = this.partName.substr(0, this.pos);\n            }\n\n            this.onAuxPanelChanged(null, pipAuxPanel.config)\n            $rootScope.$on('pipAuxPanelChanged', (event, config) => {\n                this.onAuxPanelChanged(event, config);\n            });\n\n        }\n\n        private onAuxPanelChanged(event, config) {\n            let parts = config.parts || {};\n            let currentPartValue = config[this.partName];\n            // Set visible variable to switch ngIf\n\n            this.$scope['visible'] = this.partValue ? currentPartValue == this.partValue : currentPartValue;\n        }\n    }\n\n\n    function AuxPanelPartDirective(ngIfDirective) {\n        \"ngInject\";\n\n        let ngIf = ngIfDirective[0];\n\n        return {\n            transclude: ngIf.transclude,\n            priority: ngIf.priority,\n            terminal: ngIf.terminal,\n            restrict: ngIf.restrict,\n            scope: true,\n            link: function ($scope: ng.IScope, $element, $attrs) {\n                // Visualize based on visible variable in scope\n                $attrs.ngIf = () => { return $scope['visible'] };\n                ngIf.link.apply(ngIf);\n            },\n            controller: AuxPanelPartController\n        };\n    }\n\n    angular\n        .module('pipAuxPanel')\n        .directive('pipAuxPanelPart', AuxPanelPartDirective);\n\n}","import { AuxPanelStateChangedEvent, AuxPanelChangedEvent, OpenAuxPanelEvent, CloseAuxPanelEvent } from './IAuxPanelService';\nimport { AuxPanelConfig, IAuxPanelService, IAuxPanelProvider } from './IAuxPanelService';\n\nclass AuxPanelService implements IAuxPanelService {\n    private _config: AuxPanelConfig;\n    private _state: any;\n    private _rootScope: ng.IRootScopeService;\n    private _sidenav: ng.material.ISidenavService;\n    private id = 'pip-auxpanel';\n\n    public constructor(config: AuxPanelConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n\n        \"ngInject\";\n        this._config = config;\n        this._rootScope = $rootScope;\n        this._sidenav = $mdSidenav;\n    }\n\n    public get config(): AuxPanelConfig {\n        return this._config;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n        this.sendConfigEvent();\n    }\n\n    public get state(): any {\n        return this._state;\n    }\n\n    public set state(value: any) {\n        this._state = value || {};\n        this._rootScope.$broadcast(AuxPanelStateChangedEvent, value);\n    }\n\n    public isOpen(): boolean {\n        return this._sidenav(this.id).isOpen();\n    }\n\n    public open() {\n        this._sidenav(this.id).open();\n    }\n\n    public close() {\n        this._sidenav(this.id).close();\n    }\n\n    public toggle() {\n        this._sidenav(this.id).toggle();\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$emit(AuxPanelChangedEvent, this._config);\n    }\n}\n\nclass AuxPanelProvider implements IAuxPanelProvider {\n    private _config: AuxPanelConfig = {\n        parts: {},\n        classes: [],\n        type: 'sticky',\n        state: null\n    };\n\n    private _service: AuxPanelService;\n\n    public get config(): AuxPanelConfig {\n        return this._config;\n    }\n\n    public set config(value: AuxPanelConfig) {\n        this._config = value || new AuxPanelConfig();\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n    }\n\n    public get type(): string {\n        return this._config.type;\n    }\n\n    public set type(value: string) {\n        this._config.type = value;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public set classes(value: string[]) {\n        this._config.classes = value || [];\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n    }\n\n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n    }\n\n    public open(): void {\n        this._service.open();\n    }\n\n    public close(): void {\n        this._service.close();\n    }\n\n    public toggle(): void {\n        this._service.toggle();\n    }\n\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new AuxPanelService(this._config, $rootScope, $mdSidenav);\n\n        return this._service;\n    }\n}\n\nfunction hookAuxPanelEvents($rootScope: ng.IRootScopeService, pipAuxPanel: IAuxPanelService) {\n    \"ngInject\";\n    $rootScope.$on(OpenAuxPanelEvent, () => { pipAuxPanel.open(); });\n    $rootScope.$on(CloseAuxPanelEvent, () => { pipAuxPanel.close(); });\n}\n\nangular\n    .module('pipAuxPanel')\n    .provider('pipAuxPanel', AuxPanelProvider)\n    .run(hookAuxPanelEvents);\n","export const AuxPanelChangedEvent = 'pipAuxPanelChanged';\nexport const AuxPanelStateChangedEvent = 'pipAuxPanelStateChanged';\nexport const OpenAuxPanelEvent = 'pipOpenAuxPanel';\nexport const CloseAuxPanelEvent = 'pipCloseAuxPanel';\n\nexport class AuxPanelConfig {\n    parts: any;\n    classes: string[];\n    state: any;\n    type: string;\n} \n\nexport interface IAuxPanelService {\n    readonly config: AuxPanelConfig;\n    readonly classes: string[];\n    parts: any;\n    state: any;    \n\n    isOpen(): boolean;\n    open(): void;\n    close(): void;\n    toggle(): void;\n  \n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n \n    part(part: string, value: any): void;\n}\n\nexport interface IAuxPanelProvider extends ng.IServiceProvider {\n    config: AuxPanelConfig;\n    parts: any;\n    type: string;\n    classes: string[];\n\n    open(): void;\n    close(): void;\n    toggle(): void;\n\n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n\n    part(part: string, value: any): void;\n}","angular.module('pipAuxPanel', ['ngMaterial']);\n\nimport './AuxPanelService';\nimport './AuxPanelPart';\nimport './AuxPanel';\n\nexport * from './IAuxPanelService';","angular.module('pipLayout', ['wu.masonry', 'pipMedia', 'pipAuxPanel']);\n\nimport './media/index';\n\nimport './layouts/MainDirective';\nimport './layouts/CardDirective';\nimport './layouts/DialogDirective';\nimport './layouts/DocumentDirective';\nimport './layouts/SimpleDirective';\nimport './layouts/TilesDirective';\nimport './auxpanel/index';\n\nexport * from './media/index';\n","import { MainResizedEvent, LayoutResizedEvent } from '../media/IMediaService';\nimport { MainBreakpointStatuses } from '../media/MediaService';\n\n// Avoid default export\n(() => {\n\ninterface ICardDirectiveAttributes extends ng.IAttributes {\n    minWidth: string | number;\n    minHeight: string | number;\n    width: string | number;\n    height: string | number;\n}\n\nclass CardDirectiveLink {\n\n    public constructor(\n        private $rootScope: ng.IRootScopeService, \n        private $element: JQuery, \n        private $attrs: ICardDirectiveAttributes\n    ) {\n       \"ngInject\";\n        // Add class to the element\n        $element.addClass('pip-card');\n\n        let listener = () => { this.resize(); }\n\n        // Resize every time window is resized\n        $rootScope.$on(MainResizedEvent, listener);\n\n        // Resize right away to avoid flicking\n        this.resize();\n\n        // Resize the element right away\n        setTimeout(listener, 100);\n    }\n\n    private resize() {\n        const\n            $mainBody = $('.pip-main-body'),\n            cardContainer = $('.pip-card-container'),\n            windowWidth = $('pip-main').width();\n        let\n            maxWidth = $mainBody.width(),\n            maxHeight = $mainBody.height(),\n            minWidth = this.$attrs.minWidth ? Math.floor(Number(this.$attrs.minWidth)) : null,\n            minHeight = this.$attrs.minHeight ? Math.floor(Number(this.$attrs.minHeight)) : null,\n            width = this.$attrs.width ? Math.floor(Number(this.$attrs.width)) : null,\n            height = this.$attrs.height ? Math.floor(Number(this.$attrs.height)) : null,\n            left, top;\n\n        // Full-screen on phone\n        if (MainBreakpointStatuses.xs) {\n            minWidth = null;\n            minHeight = null;\n            width = null;\n            height = null;\n            maxWidth = null;\n            maxHeight = null;\n        }\n        // Card view with adjustable margins on tablet and desktop\n        else {\n            // Set margin and maximum dimensions\n            const space = MainBreakpointStatuses['gt-md'] ? 24 : 16;\n            maxWidth -= space * 2;\n            maxHeight -= space * 2;\n\n            // Set minimum dimensions\n            minWidth = minWidth ? Math.min(minWidth, maxWidth) : null;\n            minHeight = minHeight ? Math.min(minHeight, maxHeight) : null;\n\n            // Set regular dimensions\n            width = width ? Math.min(width, maxWidth) : null;\n            height = height ? Math.min(height, maxHeight) : null;\n        }\n\n        // Set dimensions\n        this.$element.css('max-width', maxWidth ? maxWidth + 'px' : '');\n        this.$element.css('min-width', minWidth ? minWidth + 'px' : '');\n        this.$element.css('width', width ? width + 'px' : '');\n        this.$element.css('height', height ? height + 'px' : '');\n\n        if (!cardContainer.hasClass('pip-outer-scroll')) {\n            this.$element.css('max-height', maxHeight ? maxHeight + 'px' : '');\n            this.$element.css('min-height', minHeight ? minHeight + 'px' : '');\n            const\n                $header = this.$element.find('.pip-header:visible'),\n                $footer = this.$element.find('.pip-footer:visible'),\n                $body = this.$element.find('.pip-body');\n            let maxBodyHeight = maxHeight || $mainBody.height();\n\n            if ($header.length > 0)\n                maxBodyHeight -= $header.outerHeight(true);\n            if ($footer.length > 0)\n                maxBodyHeight -= $footer.outerHeight(true);\n\n            $body.css('max-height', maxBodyHeight + 'px');\n        } else {\n            cardContainer.addClass('pip-scroll');\n            if (MainBreakpointStatuses.xs) {\n                left = 0;\n                top = 0;\n            } else {\n                left = cardContainer.width() / 2 - this.$element.width() / 2 - 16;\n                top = Math.max(cardContainer.height() / 2 - this.$element.height() / 2 - 16, 0);\n            }\n\n            this.$element.css('left', left);\n            this.$element.css('top', top);\n\n            setTimeout(() => { this.$element.css('display', 'flex'); }, 100);\n        }\n\n        // Notify child controls that layout was resized\n        this.$rootScope.$emit('pipLayoutResized');\n    }\n}\n\nfunction cardDirective($rootScope: ng.IRootScopeService) {\n    \"ngInject\";\n\n    return {\n        restrict: 'EA',\n        link: ($scope, $element, $attrs) => {\n            new CardDirectiveLink($rootScope, $element, $attrs);\n        }\n    }\n}\n\n\nangular\n    .module('pipLayout')\n    .directive('pipCard', cardDirective);\n\n})();","// Avoid default export\n(() => {\n\nfunction dialogDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\n            $element.addClass('pip-dialog');\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipDialog', dialogDirective);\n\n})();","// Avoid default export\n(() => {\n\nfunction documentDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\n            $element.addClass('pip-document');\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipDocument', documentDirective);\n\n})();","import { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\nimport { MainResizedEvent } from '../media/IMediaService';\nimport { MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\n\n// Avoid default export\n(() => {\n\n    interface IMainDirectiveAttributes extends ng.IAttributes {\n        pipContainer: string;\n    }\n\n    class MainDirectiveController implements ng.IController {\n        private _container: any;\n\n        public constructor(\n            private $scope: ng.IScope,\n            private $element: angular.IRootElementService,\n            private $rootScope: ng.IRootScopeService,\n            private $timeout: ng.ITimeoutService,\n            private $attrs: IMainDirectiveAttributes\n        ) {\n            \"ngInject\";\n            this._container = $attrs.pipContainer ? $($attrs.pipContainer) : $element;\n\n            // Add CSS class\n            $element.addClass('pip-main');\n\n            // Add resize listener\n            const listener = () => { this.resize(); };\n            addResizeListener(this._container[0], listener);\n\n            // Unbind when scope is removed\n            $scope.$on('$destroy', () => {\n                removeResizeListener(this._container[0], listener);\n            });\n\n            // Perform initial calculations\n            this.updateBreakpointStatuses();\n        }\n\n        private updateBreakpointStatuses() {\n            const width = this._container.innerWidth();\n            const body = $('body');\n\n            MainBreakpointStatuses.update(MainBreakpoints, width);\n\n            $.each(MainBreakpointStatuses, (breakpoint, status) => {\n                if (_.isBoolean(status)) {\n                    body[status ? 'addClass' : 'removeClass']('pip-' + breakpoint);\n                }\n            });\n\n            this.$timeout(() => {\n                this.$rootScope.$apply();\n            });\n        }\n\n        private resize() {\n            this.updateBreakpointStatuses();\n            this.$rootScope.$emit(MainResizedEvent, MainBreakpointStatuses);\n        }\n    }\n\n    class MainBodyDirectiveLink {\n        public constructor(\n            $scope: ng.IScope,\n            $element: angular.IRootElementService\n        ) {\n            \"ngInject\";\n            // Add CSS class\n            $element.addClass('pip-main-body');\n        }\n    }\n\n    function mainDirective(): ng.IDirective {\n        \"ngInject\";\n        return {\n            restrict: 'EA',\n            controller: MainDirectiveController,\n            controllerAs: 'vm'\n        }\n    }\n\n    function mainBodyDirective(): ng.IDirective {\n        \"ngInject\";\n        return {\n            restrict: 'EA',\n            link: MainBodyDirectiveLink\n        }\n    }\n\n    angular\n        .module('pipLayout')\n        .directive('pipMain', mainDirective)\n        .directive('pipMainBody', mainBodyDirective);\n\n})();","(() => {\n\n    function simpleDirective(): ng.IDirective {\n        \"ngInject\";\n        return {\n            restrict: 'EA',\n            link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\n                $element.addClass('pip-simple');\n            }\n        };\n    }\n\n    angular\n        .module('pipLayout')\n        .directive('pipSimple', simpleDirective);\n\n})();","import { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\nimport { MainResizedEvent, LayoutResizedEvent } from '../media/IMediaService';\nimport { MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\n\ndeclare var Masonry: any;\n\ninterface ITilesDirectiveAttributes extends ng.IAttributes {\n    columnWidth: string | number;\n    pipInfinite: string | boolean | number;\n}\n\nclass TilesOptions {\n    gutter: number;\n    isFitWidth: boolean;\n    isResizeBound: boolean;\n    transitionDuration: number;\n}\n\ninterface ITilesControllerScope extends ng.IScope {\n    tilesOptions: TilesOptions;\n}\n\nclass TilesDirectiveLink {\n    private _columnWidth: number;\n    private _container: any;\n    private _prevContainerWidth: number;\n    private _masonry: any;\n    private _sizer: any;\n\n    public constructor(\n        $scope: ng.IScope,\n        private $element: JQuery,\n        private $attrs: ITilesDirectiveAttributes,\n        private $rootScope: ng.IRootScopeService\n    ) {\n        \"ngInject\";\n        this._columnWidth = $attrs.columnWidth ? Math.floor(Number($attrs.columnWidth)) : 440;\n        this._container = $element.children('.pip-tiles-container');\n        this._prevContainerWidth = null;\n        this._masonry = Masonry.data(this._container[0]);\n\n        // Add class to the element\n        $element.addClass('pip-tiles');\n\n        // Add resize listener\n        const listener = () => { this.resize(false); };\n        addResizeListener($element[0], listener);\n\n        // Unbind when scope is removed\n        $scope.$on('$destroy', () => {\n            removeResizeListener($element[0], listener);\n        });\n\n        // Insert sizer\n        this._sizer = $('<div class=\"pip-tile-sizer\"></div>');\n        this._sizer.appendTo(this._container);\n\n        // Resize every time window is resized\n        $rootScope.$on(MainResizedEvent, () => { this.resize(false); });\n\n        // Resize the element right away\n        this.resize(true);\n    }\n\n    private resize(force: boolean) {\n        let width = this.$element.parent().width(),\n            containerWidth;\n\n        if (MainBreakpointStatuses['gt-xs'] && (width - 36) > this._columnWidth) {\n            width = width - 24 * 2;\n\n            let columns = Math.floor(width / this._columnWidth);\n            containerWidth = (this._columnWidth + 16) * columns - 16;\n\n            if (containerWidth > width) {\n                columns--;\n                containerWidth = (this._columnWidth + 16) * columns - 16;\n            }\n\n            if (columns < 1) {\n                containerWidth = width;\n                this._sizer.css('width', containerWidth + 'px');\n            } else {\n                this._sizer.css('width', this._columnWidth + 'px');\n            }\n\n            // +10 to avoid precision related error\n            this._container.css('width', (containerWidth + 10) + 'px');\n            this._container.removeClass('pip-mobile');\n        } else {\n            width = width - 16 * 2;\n            containerWidth = width;\n\n            this._sizer.css('width', containerWidth + 'px');\n            // +10 to avoid precision related error\n            this._container.css('width', (containerWidth + 10) + 'px');\n            this._container.addClass('pip-mobile');\n        }\n\n        // Manually call layout on tile container\n        if (this._prevContainerWidth != containerWidth || force) {\n            this._prevContainerWidth = containerWidth;\n            this._masonry.layout();\n\n            // Notify child controls that layout was resized\n            this.$rootScope.$emit(LayoutResizedEvent);\n        }\n    }\n}\n\nfunction tilesDirective($rootScope: ng.IRootScopeService): ng.IDirective {\n    \"ngInject\";\n\n    // Converts value into boolean\n    function convertToBoolean(value): boolean {\n        if (value == null) return false;\n        if (!value) return false;\n        value = value.toString().toLowerCase();\n        return value == '1' || value == 'true';\n    }\n\n    return {\n        restrict: 'EA',\n        scope: false,\n        transclude: true,\n        template:\n        ($element: JQuery, $attrs: ITilesDirectiveAttributes) => {\n            if (convertToBoolean($attrs.pipInfinite)) {\n                return String()\n                    + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\n                    + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\n                    + ' masonry-options=\"tilesOptions\"  pip-scroll-container=\"\\'.pip-tiles\\'\"'\n                    + ' pip-infinite-scroll=\"readScroll()\" >'\n                    + '</div>';\n            } else {\n                return String()\n                    + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\n                    + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\n                    + ' masonry-options=\"tilesOptions\">'\n                    + '</div>';\n            }\n        },\n        controller: ($scope: ITilesControllerScope) => {\n            $scope.tilesOptions = {\n                gutter: 8,//16\n                isFitWidth: false,\n                isResizeBound: false,\n                transitionDuration: 0 // '0.2s'\n            };\n        },\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ITilesDirectiveAttributes) => {\n            new TilesDirectiveLink($scope, $element, $attrs, $rootScope);\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipTiles', tilesDirective);\n","export const MainResizedEvent = 'pipMainResized';\nexport const LayoutResizedEvent = 'pipLayoutResized';\n\nexport class MediaBreakpoints {\n    public constructor(\n        xs: number, sm: number, md: number, lg: number\n    ) {\n        this.xs = xs;\n        this.sm = sm;\n        this.md = md;\n        this.lg = lg;\n    }\n\n    public xs: number;\n    public sm: number;\n    public md: number;\n    public lg: number;\n}\n\nexport class MediaBreakpointStatuses {\n    public width: number;\n    public 'xs': boolean;\n    public 'gt-xs': boolean;\n    public 'sm': boolean;\n    public 'gt-sm': boolean;\n    public 'md': boolean;\n    public 'gt-md': boolean;\n    public 'lg': boolean;\n    public 'gt-lg': boolean;\n    public 'xl': boolean;\n\n    public update(breakpoints: MediaBreakpoints, width: number) {\n        if (breakpoints == null || width == null) return;\n\n        this.width = width;\n        this['xs'] = width <= breakpoints.xs;\n        this['gt-xs'] = width > breakpoints.xs;\n        this['sm'] = width > breakpoints.xs && width <= breakpoints.sm;\n        this['gt-sm'] = width > breakpoints.sm;\n        this['md'] = width > breakpoints.sm && width <= breakpoints.md;\n        this['gt-md'] = width > breakpoints.md;\n        this['lg'] = width > breakpoints.md && width <= breakpoints.lg;\n        this['gt-lg'] = width > breakpoints.lg;\n        this['xl'] = this['gt-lg'];\n    }\n}\n\nexport interface IMediaService {\n    (breakpoint: string): boolean;\n    breakpoints: MediaBreakpoints;\n    width: number;\n} \n\nexport interface IMediaProvider extends ng.IServiceProvider {\n    breakpoints: MediaBreakpoints;\n}","import { MediaBreakpoints, MediaBreakpointStatuses } from './IMediaService';\nimport { IMediaProvider } from './IMediaService';\n\nexport let MainBreakpoints = new MediaBreakpoints(639, 716, 1024, 1439);\nexport const MainBreakpointStatuses = new MediaBreakpointStatuses();\n\nclass MediaProvider implements IMediaProvider {\n    public get breakpoints(): MediaBreakpoints {\n        return MainBreakpoints;\n    }\n\n    public set breakpoints(value: MediaBreakpoints) {\n        MainBreakpoints = value;\n    }\n\n    public $get() {\n        const service = (size) => {\n            return MainBreakpointStatuses[size];\n        }\n\n        Object.defineProperty(service, 'breakpoints', {\n            get: () => { return MainBreakpoints; },\n            set: (value) => { \n                MainBreakpoints = value || new MediaBreakpoints(639, 716, 1024, 1439);\n                \n                MainBreakpointStatuses.update(\n                    MainBreakpoints, \n                    MainBreakpointStatuses.width\n                );\n            }\n        });\n\n        Object.defineProperty(service, 'width', {\n            get: () => { \n                return MainBreakpointStatuses.width; \n            }\n        });\n\n        return service; \n    }\n}\n\nangular\n    .module('pipMedia')\n    .provider('pipMedia', MediaProvider);\n","let attachEvent = (<any>document).attachEvent;\nlet isIE = navigator.userAgent.match(/Trident/);\n\nfunction requestFrame(callback): any {\n           \"ngInject\";\n    let frame = window.requestAnimationFrame\n        || (<any>window).mozRequestAnimationFrame\n        || (<any>window).webkitRequestAnimationFrame\n        || function (callback) {\n            return window.setTimeout(callback, 20);\n        };\n\n    return frame(callback);\n}\n\nfunction cancelFrame(): any {\n           \"ngInject\";\n    let cancel = window.cancelAnimationFrame\n        || (<any>window).mozCancelAnimationFrame\n        || (<any>window).webkitCancelAnimationFrame\n        || window.clearTimeout;\n\n    return function (id) {\n        return cancel(id);\n    };\n}\n\nfunction resizeListener(event: any): void {\n    const win = event.target || event.srcElement;\n    if (win.__resizeRAF__) cancelFrame(/*win.__resizeRAF__*/);\n    win.__resizeRAF__ = requestFrame(function () {\n        const trigger = win.__resizeTrigger__;\n        trigger.__resizeListeners__.forEach(function (fn) {\n            fn.call(trigger, event);\n        });\n    });\n}\n\nfunction loadListener(event: any): void {\n    if (this.contentDocument) {\n        this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\n        this.contentDocument.defaultView.addEventListener('resize', resizeListener);\n    }\n}\n\nexport function addResizeListener(element, listener): void {\n           \"ngInject\";\n    if (!element.__resizeListeners__) {\n        element.__resizeListeners__ = [];\n        if (attachEvent) {\n            element.__resizeTrigger__ = element;\n            element.attachEvent('onresize', resizeListener);\n        }\n        else {\n            if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\n            const obj: any = element.__resizeTrigger__ = document.createElement('object');\n            obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n            obj.__resizeElement__ = element;\n            obj.onload = loadListener;\n            obj.type = 'text/html';\n            if (isIE) element.appendChild(obj);\n            obj.data = 'about:blank';\n            if (!isIE) element.appendChild(obj);\n        }\n    }\n\n    element.__resizeListeners__.push(listener);\n}\n\nexport function removeResizeListener(element, listener): void {\n           \"ngInject\";\n    if (listener) element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(listener), 1);\n    if (!element.__resizeListeners__.length) {\n        if (attachEvent) element.detachEvent('onresize', resizeListener);\n        else {\n            if (element.__resizeTrigger__.contentDocument) {\n                element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\n                element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\n            }\n        }\n    }\n}\n","angular.module('pipMedia', []);\n\nimport './MediaService';\nimport './ResizeFunctions';\n\nexport * from './IMediaService';\nexport * from './MediaService';\nexport * from './ResizeFunctions';"]}