{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/auxpanel/AuxPanelDirective.ts","src/auxpanel/AuxPanelPartDirective.ts","src/auxpanel/AuxPanelService.ts","src/auxpanel/index.ts","src/index.ts","src/layouts/CardDirective.ts","src/layouts/DialogDirective.ts","src/layouts/DocumentDirective.ts","src/layouts/MainDirective.ts","src/layouts/SimpleDirective.ts","src/layouts/TilesDirective.ts","src/media/MediaService.ts","src/media/ResizeFunctions.ts","src/media/index.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","layouts","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","MediaService_1","AuxPanelDirective","restrict","replace","controller","AuxPanelDirectiveController","transclude","controllerAs","pipAuxPanel","normalSize","largeSize","_pipAuxPanel","$inject","prototype","isGtxs","Number","$","width","MainBreakpoints","xs","isOpen","isGtlg","lg","directive","../media/MediaService","2","AuxPanelPartDirectiveController","$scope","$element","$attrs","$rootScope","onAuxPanelChanged","event","config","currentPartValue","parts","partName","visible","partValue","pipAuxPanelPart","pos","indexOf","substr","$on","AuxPanelPartDirective","ngIfDirective","ngIf","priority","terminal","link","apply","angular","3","hookAuxPanelEvents","OpenAuxPanelEvent","open","CloseAuxPanelEvent","close","Object","defineProperty","value","AuxPanelChangedEvent","AuxPanelStateChangedEvent","AuxPanelConfig","AuxPanelService","$mdSidenav","id","_config","_rootScope","_sidenav","classes","sendConfigEvent","_state","$broadcast","enumerable","configurable","toggle","addClass","_i","arguments","_","each","c","_this","push","removeClass","reject","cc","part","$emit","AuxPanelProvider","type","_service","$get","provider","__export","m","p","hasOwnProperty","./auxpanel/index","./layouts/CardDirective","./layouts/DialogDirective","./layouts/DocumentDirective","./layouts/MainDirective","./layouts/SimpleDirective","./layouts/TilesDirective","./media/index","6","CardDirectiveLink","listener","resize","MainResizedEvent","setTimeout","left","top","$mainBody","cardContainer","maxWidth","maxHeight","height","minWidth","Math","floor","minHeight","MainBreakpointStatuses","space","min","css","hasClass","max","$header","find","$footer","$body","maxBodyHeight","outerHeight","cardDirective","7","dialogDirective","documentDirective","9","mainDirective","MainDirectiveController","mainBodyDirective","MainBodyDirectiveLink","$timeout","_container","pipContainer","ResizeFunctions_1","addResizeListener","removeResizeListener","updateBreakpointStatuses","innerWidth","body","update","breakpoint","status","isBoolean","$apply","../media/ResizeFunctions","10","simpleDirective","11","tilesDirective","convertToBoolean","toString","toLowerCase","pipInfinite","String","tilesOptions","gutter","isFitWidth","isResizeBound","transitionDuration","TilesOptions","TilesDirectiveLink","_columnWidth","columnWidth","children","_prevContainerWidth","_masonry","Masonry","data","_sizer","appendTo","force","containerWidth","parent","columns","layout","LayoutResizedEvent","12","MediaBreakpoints","sm","md","MediaBreakpointStatuses","breakpoints","MediaProvider","set","size","service","get","requestFrame","callback","frame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","win","target","srcElement","__resizeRAF__","trigger","__resizeTrigger__","__resizeListeners__","forEach","fn","loadListener","defaultView","__resizeElement__","addEventListener","resizeListener","element","attachEvent","getComputedStyle","position","style","obj","document","createElement","setAttribute","onload","isIE","appendChild","splice","detachEvent","removeChild","navigator","userAgent","match","14"],"mappings":"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","file":"pip-webui-layouts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nimport { MainBreakpoints } from '../media/MediaService';\nimport { IAuxPanelService } from './AuxPanelService';\n\n(() => {\n\nclass AuxPanelDirectiveController {\n    private _pipAuxPanel: IAuxPanelService;\n    private normalSize: number = 320;\n    private largeSize: number = 480;\n\n    public constructor(pipAuxPanel: IAuxPanelService) {\n        this._pipAuxPanel = pipAuxPanel;\n    }\n\n    public isGtxs():boolean {\n        return Number($('body').width()) > MainBreakpoints.xs && this._pipAuxPanel.isOpen();\n    }\n\n    public isGtlg():boolean {\n        return Number($('body').width()) > (MainBreakpoints.lg + this.largeSize);\n    }\n}\n\nfunction AuxPanelDirective() {\n    return {\n        restrict: 'E',\n        replace: true,\n        controller: AuxPanelDirectiveController,\n        transclude: true,\n        controllerAs: 'vm',\n        template: '<md-sidenav class=\"md-sidenav-right md-whiteframe-z2 pip-auxpanel color-content-bg\" ng-class=\"{\\'pip-large\\': vm.isGtlg()}\"' + \n                    'md-component-id=\"pip-auxpanel\" md-is-locked-open=\"vm.isGtxs()\" pip-focused ng-transclude>' + \n                    '</md-sidenav>'\n    }\n}\n\nangular\n    .module('pipAuxPanel')\n    .directive('pipAuxPanel', AuxPanelDirective);\n\n})();","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction AuxPanelPartDirectiveController($scope, $element, $attrs, $rootScope, pipAuxPanel) {\n    \"ngInject\";\n\n    var partName = '' + $attrs.pipAuxPanelPart;\n    var partValue = null;\n\n    // Break part apart\n    var pos = partName.indexOf(':');\n    if (pos > 0) {\n        partValue = partName.substr(pos + 1);\n        partName = partName.substr(0, pos);\n    }\n\n    onAuxPanelChanged(null, pipAuxPanel.config)\n    $rootScope.$on('pipAuxPanelChanged', onAuxPanelChanged);\n\n    function onAuxPanelChanged(event, config) {\n        var parts = config.parts || {};\n        var currentPartValue = config[partName];\n        // Set visible variable to switch ngIf\n\n        $scope.visible = partValue ? currentPartValue == partValue : currentPartValue;\n    }\n\n}\n\nfunction AuxPanelPartDirective(ngIfDirective) {\n    \"ngInject\";\n\n    var ngIf = ngIfDirective[0];\n\n    return {\n        transclude: ngIf.transclude,\n        priority: ngIf.priority,\n        terminal: ngIf.terminal,\n        restrict: ngIf.restrict,\n        scope: true,\n        link: function($scope: any, $element, $attrs) {\n            // Visualize based on visible variable in scope\n            $attrs.ngIf = function() { return $scope.visible };\n            ngIf.link.apply(ngIf);\n        },\n        controller: AuxPanelPartDirectiveController\n    };\n}\n\nangular\n    .module('pipAuxPanel')\n    .directive('pipAuxPanelPart', AuxPanelPartDirective);\n\n})();","'use strict';\n\nexport let AuxPanelChangedEvent = 'pipAuxPanelChanged';\nexport let AuxPanelStateChangedEvent = 'pipAuxPanelStateChanged';\nexport let OpenAuxPanelEvent = 'pipOpenAuxPanel';\nexport let CloseAuxPanelEvent = 'pipCloseAuxPanel';\n\nexport class AuxPanelConfig {\n    parts: any;\n    classes: string[];\n    state: any;\n    type: string;\n} \n\nexport interface IAuxPanelService {\n    readonly config: AuxPanelConfig;\n    readonly classes: string[];\n    parts: any;\n    state: any;    \n\n    isOpen(): boolean;\n    open(): void;\n    close(): void;\n    toggle(): void;\n  \n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n \n    part(part: string, value: any): void;\n}\n\nexport interface IAuxPanelProvider extends ng.IServiceProvider {\n    config: AuxPanelConfig;\n    parts: any;\n    type: string;\n    classes: string[];\n\n    open(): void;\n    close(): void;\n    toggle(): void;\n\n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n\n    part(part: string, value: any): void;\n}\n\nclass AuxPanelService implements IAuxPanelService {\n    private _config: AuxPanelConfig;\n    private _state: any;\n    private _rootScope: ng.IRootScopeService;\n    private _sidenav: ng.material.ISidenavService;\n    private id = 'pip-auxpanel';\n\n    public constructor(config: AuxPanelConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n        this._sidenav = $mdSidenav;\n    }\n\n    public get config(): AuxPanelConfig {\n        return this._config;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n        this.sendConfigEvent();\n    }\n\n    public get state(): any {\n        return this._state;\n    }\n\n    public set state(value: any) {\n        this._state = value || {};\n        this._rootScope.$broadcast(AuxPanelStateChangedEvent, value);\n    }\n\n    public isOpen(): boolean {\n        return this._sidenav(this.id).isOpen();\n    }\n\n    public open() {\n        this._sidenav(this.id).open();\n    }\n            \n    public close() {\n        this._sidenav(this.id).close();\n    }\n\n    public toggle() {\n        this._sidenav(this.id).toggle();\n    }\n  \n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n        this.sendConfigEvent();\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$emit(AuxPanelChangedEvent, this._config);\n    }\n}\n\nclass AuxPanelProvider implements IAuxPanelProvider {\n    private _config: AuxPanelConfig = {\n        parts: {},\n        classes: [],\n        type: 'sticky',\n        state: null\n    };\n\n    private _service: AuxPanelService;\n\n    public get config(): AuxPanelConfig {\n        return this._config;\n    }\n\n    public set config(value: AuxPanelConfig) {\n        this._config = value || new AuxPanelConfig();\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n    }\n\n    public get type(): string {\n        return this._config.type;\n    }\n\n    public set type(value: string) {\n        this._config.type = value;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public set classes(value: string[]) {\n        this._config.classes = value || [];\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n    }\n\n    public open(): void {\n        this._service.open();\n    }\n\n    public close(): void {\n        this._service.close();\n    }\n\n    public toggle(): void {\n        this._service.toggle();\n    }\n\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new AuxPanelService(this._config, $rootScope, $mdSidenav);\n\n        return this._service;\n    }     \n}\n\nfunction hookAuxPanelEvents($rootScope: ng.IRootScopeService, pipAuxPanel: IAuxPanelService) {\n    $rootScope.$on(OpenAuxPanelEvent, () => { pipAuxPanel.open(); });\n    $rootScope.$on(CloseAuxPanelEvent, () => { pipAuxPanel.close(); });\n}\n\nangular\n    .module('pipAuxPanel')\n    .provider('pipAuxPanel', AuxPanelProvider)\n    .run(hookAuxPanelEvents);\n","'use strict';\n\nangular.module('pipAuxPanel', ['ngMaterial']);\n\nimport './AuxPanelService';\nimport './AuxPanelPartDirective';\nimport './AuxPanelDirective';\n\nexport * from './AuxPanelService';","'use strict';\n\nangular.module('pipLayout', ['wu.masonry', 'pipMedia', 'pipAuxPanel']);\n\nimport './media/index';\n\nimport './layouts/MainDirective';\nimport './layouts/CardDirective';\nimport './layouts/DialogDirective';\nimport './layouts/DocumentDirective';\nimport './layouts/SimpleDirective';\nimport './layouts/TilesDirective';\nimport './auxpanel/index';\n\nexport * from './media/index';\n","'use strict';\n\nimport { MainResizedEvent, LayoutResizedEvent, MainBreakpointStatuses } from '../media/MediaService';\n\n// Avoid default export\n(() => {\n\ninterface ICardDirectiveAttributes extends ng.IAttributes {\n    minWidth: string | number;\n    minHeight: string | number;\n    width: string | number;\n    height: string | number;\n}\n\nclass CardDirectiveLink {\n\n    public constructor(\n        private $rootScope: ng.IRootScopeService, \n        private $element: JQuery, \n        private $attrs: ICardDirectiveAttributes\n    ) {\n\n        // Add class to the element\n        $element.addClass('pip-card');\n\n        let listener = () => { this.resize(); }\n\n        // Resize every time window is resized\n        $rootScope.$on(MainResizedEvent, listener);\n\n        // Resize right away to avoid flicking\n        this.resize();\n\n        // Resize the element right away\n        setTimeout(listener, 100);\n    }\n\n    private resize() {\n        const\n            $mainBody = $('.pip-main-body'),\n            cardContainer = $('.pip-card-container'),\n            windowWidth = $('pip-main').width();\n        let\n            maxWidth = $mainBody.width(),\n            maxHeight = $mainBody.height(),\n            minWidth = this.$attrs.minWidth ? Math.floor(Number(this.$attrs.minWidth)) : null,\n            minHeight = this.$attrs.minHeight ? Math.floor(Number(this.$attrs.minHeight)) : null,\n            width = this.$attrs.width ? Math.floor(Number(this.$attrs.width)) : null,\n            height = this.$attrs.height ? Math.floor(Number(this.$attrs.height)) : null,\n            left, top;\n\n        // Full-screen on phone\n        if (MainBreakpointStatuses.xs) {\n            minWidth = null;\n            minHeight = null;\n            width = null;\n            height = null;\n            maxWidth = null;\n            maxHeight = null;\n        }\n        // Card view with adjustable margins on tablet and desktop\n        else {\n            // Set margin and maximum dimensions\n            const space = MainBreakpointStatuses['gt-md'] ? 24 : 16;\n            maxWidth -= space * 2;\n            maxHeight -= space * 2;\n\n            // Set minimum dimensions\n            minWidth = minWidth ? Math.min(minWidth, maxWidth) : null;\n            minHeight = minHeight ? Math.min(minHeight, maxHeight) : null;\n\n            // Set regular dimensions\n            width = width ? Math.min(width, maxWidth) : null;\n            height = height ? Math.min(height, maxHeight) : null;\n        }\n\n        // Set dimensions\n        this.$element.css('max-width', maxWidth ? maxWidth + 'px' : '');\n        this.$element.css('min-width', minWidth ? minWidth + 'px' : '');\n        this.$element.css('width', width ? width + 'px' : '');\n        this.$element.css('height', height ? height + 'px' : '');\n\n        if (!cardContainer.hasClass('pip-outer-scroll')) {\n            this.$element.css('max-height', maxHeight ? maxHeight + 'px' : '');\n            this.$element.css('min-height', minHeight ? minHeight + 'px' : '');\n            const\n                $header = this.$element.find('.pip-header:visible'),\n                $footer = this.$element.find('.pip-footer:visible'),\n                $body = this.$element.find('.pip-body');\n            let maxBodyHeight = maxHeight || $mainBody.height();\n\n            if ($header.length > 0)\n                maxBodyHeight -= $header.outerHeight(true);\n            if ($footer.length > 0)\n                maxBodyHeight -= $footer.outerHeight(true);\n\n            $body.css('max-height', maxBodyHeight + 'px');\n        } else {\n            cardContainer.addClass('pip-scroll');\n            if (MainBreakpointStatuses.xs) {\n                left = 0;\n                top = 0;\n            } else {\n                left = cardContainer.width() / 2 - this.$element.width() / 2 - 16;\n                top = Math.max(cardContainer.height() / 2 - this.$element.height() / 2 - 16, 0);\n            }\n\n            this.$element.css('left', left);\n            this.$element.css('top', top);\n\n            setTimeout(() => { this.$element.css('display', 'flex'); }, 100);\n        }\n\n        // Notify child controls that layout was resized\n        this.$rootScope.$emit('pipLayoutResized');\n    }\n}\n\nfunction cardDirective($rootScope: ng.IRootScopeService) {\n    \"ngInject\";\n\n    return {\n        restrict: 'EA',\n        link: ($scope, $element, $attrs) => {\n            new CardDirectiveLink($rootScope, $element, $attrs);\n        }\n    }\n}\n\n\nangular\n    .module('pipLayout')\n    .directive('pipCard', cardDirective);\n\n})();","'use strict';\n\n// Avoid default export\n(() => {\n\nfunction dialogDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\n            $element.addClass('pip-dialog');\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipDialog', dialogDirective);\n\n})();","'use strict';\n\n// Avoid default export\n(() => {\n\nfunction documentDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\n            $element.addClass('pip-document');\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipDocument', documentDirective);\n\n})();","'use strict';\n\nimport { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\nimport { MainBreakpoints, MainBreakpointStatuses, MainResizedEvent } from '../media/MediaService'; \n\n// Avoid default export\n(() => {\n\ninterface IMainDirectiveAttributes extends ng.IAttributes {\n    pipContainer: string;\n}\n\nclass MainDirectiveController implements ng.IController {\n    private _container: any;\n\n    public constructor(\n        private $scope: ng.IScope, \n        private $element: angular.IRootElementService, \n        private $rootScope: ng.IRootScopeService,\n        private $timeout: ng.ITimeoutService,\n        private $attrs: IMainDirectiveAttributes\n    ) {\n        this._container = $attrs.pipContainer ? $($attrs.pipContainer) : $element;\n\n        // Add CSS class\n        $element.addClass('pip-main');\n\n        // Add resize listener\n        const listener = () => { this.resize(); };\n        addResizeListener(this._container[0], listener);\n\n        // Unbind when scope is removed\n        $scope.$on('$destroy', () => {\n            removeResizeListener(this._container[0], listener);\n        });\n\n        // Perform initial calculations\n        this.updateBreakpointStatuses();\n    }\n\n    private updateBreakpointStatuses() {\n        const width = this._container.innerWidth();\n        const body = $('body');\n\n        MainBreakpointStatuses.update(MainBreakpoints, width);\n\n        $.each(MainBreakpointStatuses, (breakpoint, status) => {\n            if (_.isBoolean(status)) {\n                body[status ? 'addClass': 'removeClass']('pip-' + breakpoint);\n            }\n        });\n\n        this.$timeout(() => {\n            this.$rootScope.$apply();\n        });\n    }\n    \n    private resize() {\n        this.updateBreakpointStatuses();\n        this.$rootScope.$emit(MainResizedEvent, MainBreakpointStatuses);\n    }\n}\n\nclass MainBodyDirectiveLink {\n    public constructor(\n        $scope: ng.IScope, \n        $element: angular.IRootElementService\n    ) {\n        // Add CSS class\n        $element.addClass('pip-main-body');\n    }\n}\n\nfunction mainDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        controller: MainDirectiveController,\n        controllerAs: 'vm' \n    }\n}\n\nfunction mainBodyDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: MainBodyDirectiveLink\n    }\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipMain', mainDirective)\n    .directive('pipMainBody', mainBodyDirective);\n\n})();","'use strict';\n\n// Avoid default export\n(() => {\n\nfunction simpleDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\n            $element.addClass('pip-simple');\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipSimple', simpleDirective);\n\n})();","'use strict';\n\nimport { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\nimport { MainResizedEvent, LayoutResizedEvent, MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\n\ndeclare var Masonry: any;\n\ninterface ITilesDirectiveAttributes extends ng.IAttributes {\n    columnWidth: string | number;\n    pipInfinite: string | boolean | number;\n}\n\nclass TilesOptions {\n    gutter: number;\n    isFitWidth: boolean;\n    isResizeBound: boolean;\n    transitionDuration: number;\n}\n\ninterface ITilesControllerScope extends ng.IScope {\n    tilesOptions: TilesOptions;\n}\n\nclass TilesDirectiveLink {\n    private _columnWidth: number;\n    private _container: any;\n    private _prevContainerWidth: number;\n    private _masonry: any;\n    private _sizer: any;\n\n    public constructor(\n        $scope: ng.IScope, \n        private $element: JQuery, \n        private $attrs: ITilesDirectiveAttributes,\n        private $rootScope: ng.IRootScopeService\n    ) {\n        this._columnWidth = $attrs.columnWidth ? Math.floor(Number($attrs.columnWidth)) : 440,\n        this._container = $element.children('.pip-tiles-container'),\n        this._prevContainerWidth = null,\n        this._masonry = Masonry.data(this._container[0]);\n        \n        // Add class to the element\n        $element.addClass('pip-tiles');\n\n        // Add resize listener\n        const listener = () => { this.resize(false); };\n        addResizeListener($element[0], listener);\n\n        // Unbind when scope is removed\n        $scope.$on('$destroy', () => {\n            removeResizeListener($element[0], listener);\n        });\n\n        // Insert sizer\n        this._sizer = $('<div class=\"pip-tile-sizer\"></div>');\n        this._sizer.appendTo(this._container);\n\n        // Resize every time window is resized\n        $rootScope.$on(MainResizedEvent, () => { this.resize(false); });\n\n        // Resize the element right away\n        this.resize(true);\n    }\n\n    private resize(force: boolean) {\n        let width = this.$element.parent().width(),\n            containerWidth;\n\n        if (MainBreakpointStatuses['gt-xs'] && (width - 36) > this._columnWidth) {\n            width = width - 24 * 2;\n\n            let columns = Math.floor(width / this._columnWidth);\n            containerWidth = (this._columnWidth + 16) * columns - 16;\n\n            if (containerWidth > width) {\n                columns--;\n                containerWidth = (this._columnWidth + 16) * columns - 16;\n            }\n\n            if (columns < 1) {\n                containerWidth = width;\n                this._sizer.css('width', containerWidth + 'px');\n            } else {\n                this._sizer.css('width', this._columnWidth + 'px');\n            }\n\n            // +10 to avoid precision related error\n            this._container.css('width', (containerWidth + 10) + 'px');\n            this._container.removeClass('pip-mobile');\n        } else {\n            width = width - 16 * 2;\n            containerWidth = width;\n\n            this._sizer.css('width', containerWidth + 'px');\n            // +10 to avoid precision related error\n            this._container.css('width', (containerWidth + 10) + 'px');\n            this._container.addClass('pip-mobile');\n        }\n\n        // Manually call layout on tile container\n        if (this._prevContainerWidth != containerWidth || force) {\n            this._prevContainerWidth = containerWidth;\n            this._masonry.layout();\n\n            // Notify child controls that layout was resized\n            this.$rootScope.$emit(LayoutResizedEvent);\n        }\n    }\n}\n\nfunction tilesDirective($rootScope: ng.IRootScopeService): ng.IDirective {\n    \"ngInject\";\n\n    // Converts value into boolean\n    function convertToBoolean(value): boolean {\n        if (value == null) return false;\n        if (!value) return false;\n        value = value.toString().toLowerCase();\n        return value == '1' || value == 'true';\n    }\n\n    return {\n        restrict: 'EA',\n        scope: false,\n        transclude: true,\n        template:\n            ($element: JQuery, $attrs: ITilesDirectiveAttributes) => {\n                if (convertToBoolean($attrs.pipInfinite)) {\n                    return String()\n                        + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\n                        + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\n                        + ' masonry-options=\"tilesOptions\"  pip-scroll-container=\"\\'.pip-tiles\\'\"'\n                        + ' pip-infinite-scroll=\"readScroll()\" >'\n                        + '</div>';\n                } else {\n                    return String()\n                        + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\n                        + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\n                        + ' masonry-options=\"tilesOptions\">'\n                        + '</div>';\n                }\n            },\n        controller: ($scope: ITilesControllerScope) => {\n            $scope.tilesOptions = {\n                gutter: 8,//16\n                isFitWidth: false,\n                isResizeBound: false,\n                transitionDuration: 0 // '0.2s'\n            };\n        },\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ITilesDirectiveAttributes) => {\n            new TilesDirectiveLink($scope, $element, $attrs, $rootScope);\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipTiles', tilesDirective);\n","'use strict';\n\nexport class MediaBreakpoints {\n    public constructor(\n        xs: number, sm: number, md: number, lg: number\n    ) {\n        this.xs = xs;\n        this.sm = sm;\n        this.md = md;\n        this.lg = lg;\n    }\n\n    public xs: number;\n    public sm: number;\n    public md: number;\n    public lg: number;\n}\n\nexport class MediaBreakpointStatuses {\n    public width: number;\n    public 'xs': boolean;\n    public 'gt-xs': boolean;\n    public 'sm': boolean;\n    public 'gt-sm': boolean;\n    public 'md': boolean;\n    public 'gt-md': boolean;\n    public 'lg': boolean;\n    public 'gt-lg': boolean;\n    public 'xl': boolean;\n\n    public update(breakpoints: MediaBreakpoints, width: number) {\n        if (breakpoints == null) return;\n\n        this.width = width;\n        this['xs'] = width <= breakpoints.xs;\n        this['gt-xs'] = width > breakpoints.xs;\n        this['sm'] = width > breakpoints.xs && width <= breakpoints.sm;\n        this['gt-sm'] = width > breakpoints.sm;\n        this['md'] = width > breakpoints.sm && width <= breakpoints.md;\n        this['gt-md'] = width > breakpoints.md;\n        this['lg'] = width > breakpoints.md && width <= breakpoints.lg;\n        this['gt-lg'] = width > breakpoints.lg;\n        this['xl'] = this['gt-lg'];\n    }\n}\n\nexport let MainResizedEvent: string = 'pipMainResized';\nexport let LayoutResizedEvent: string = 'pipLayoutResized';\n\nexport let MainBreakpoints: MediaBreakpoints = new MediaBreakpoints(639, 716, 1024, 1439);\nexport let MainBreakpointStatuses: MediaBreakpointStatuses = new MediaBreakpointStatuses();\n\nexport interface IMediaService {\n    (breakpoint: string): boolean;\n    breakpoints: MediaBreakpoints;\n    width: number;\n} \n\nexport interface IMediaProvider extends ng.IServiceProvider {\n    breakpoints: MediaBreakpoints;\n}\n\nclass MediaProvider implements IMediaProvider {\n    public get breakpoints(): MediaBreakpoints {\n        return MainBreakpoints;\n    }\n\n    public set breakpoints(value: MediaBreakpoints) {\n        MainBreakpoints = value;\n    }\n\n    public $get() {\n        const service = function(size) {\n            return MainBreakpointStatuses[size];\n        }\n\n        Object.defineProperty(service, 'breakpoints', {\n            get: () => { return MainBreakpoints; },\n            set: (value) => { \n                MainBreakpoints = value || new MediaBreakpoints(639, 716, 1024, 1439);\n                \n                MainBreakpointStatuses.update(\n                    MainBreakpoints, \n                    MainBreakpointStatuses.width\n                );\n            }\n        });\n\n        Object.defineProperty(service, 'width', {\n            get: () => { \n                return MainBreakpointStatuses.width; \n            }\n        });\n\n        return service; \n    }\n}\n\nangular\n    .module('pipMedia')\n    .provider('pipMedia', MediaProvider);\n","'use strict';\n\nlet attachEvent = (<any>document).attachEvent;\nlet isIE = navigator.userAgent.match(/Trident/);\n\nfunction requestFrame(callback): any {\n    let frame = window.requestAnimationFrame \n        || (<any>window).mozRequestAnimationFrame \n        || (<any>window).webkitRequestAnimationFrame \n        || function(callback) { \n            return window.setTimeout(callback, 20);     \n        };\n\n    return frame(callback);\n}\n\nfunction cancelFrame(): any {\n    let cancel = window.cancelAnimationFrame \n        || (<any>window).mozCancelAnimationFrame \n        || (<any>window).webkitCancelAnimationFrame \n        || window.clearTimeout;\n\n    return function(id) { \n        return cancel(id); \n    };\n}\n\nfunction resizeListener(event: any): void {\n    const win = event.target || event.srcElement;\n    if (win.__resizeRAF__) cancelFrame(/*win.__resizeRAF__*/);\n    win.__resizeRAF__ = requestFrame(function() {\n        const trigger = win.__resizeTrigger__;\n        trigger.__resizeListeners__.forEach(function(fn){\n            fn.call(trigger, event);\n        });\n    });\n}\n\nfunction loadListener(event: any): void {\n    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\n    this.contentDocument.defaultView.addEventListener('resize', resizeListener);\n}\n\nexport function addResizeListener(element, listener): void {\n    if (!element.__resizeListeners__) {\n        element.__resizeListeners__ = [];\n        if (attachEvent) {\n            element.__resizeTrigger__ = element;\n            element.attachEvent('onresize', resizeListener);\n        }\n        else {\n            if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\n            const obj: any = element.__resizeTrigger__ = document.createElement('object');\n            obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n            obj.__resizeElement__ = element;\n            obj.onload = loadListener;\n            obj.type = 'text/html';\n            if (isIE) element.appendChild(obj);\n            obj.data = 'about:blank';\n            if (!isIE) element.appendChild(obj);\n        }\n    }\n\n    element.__resizeListeners__.push(listener);\n}\n\nexport function removeResizeListener(element, listener): void {\n    if (listener) element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(listener), 1);\n    if (!element.__resizeListeners__.length) {\n        if (attachEvent) element.detachEvent('onresize', resizeListener);\n        else {\n            element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\n            element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\n        }\n    }\n}\n","'use strict';\n\nangular.module('pipMedia', []);\n\nimport './MediaService';\nimport './ResizeFunctions';\n\nexport * from './MediaService';\nexport * from './ResizeFunctions';"]}