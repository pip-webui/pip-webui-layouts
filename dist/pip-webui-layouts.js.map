{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/auxpanel/AuxPanelDirective.ts","src/auxpanel/AuxPanelPartDirective.ts","src/auxpanel/AuxPanelService.ts","src/auxpanel/index.ts","src/index.ts","src/layouts/CardDirective.ts","src/layouts/DialogDirective.ts","src/layouts/DocumentDirective.ts","src/layouts/MainDirective.ts","src/layouts/SimpleDirective.ts","src/layouts/TilesDirective.ts","src/media/MediaService.ts","src/media/ResizeFunctions.ts","src/media/index.ts"],"names":[],"mappings":"AAAA;ACAA,YAAY,CAAC;;AAEb,sDAAwD;AAGxD,CAAC;IAED;QAKI,qCAAmB,WAA6B;YAHxC,eAAU,GAAW,GAAG,CAAC;YACzB,cAAS,GAAW,GAAG,CAAC;YAG5B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QACpC,CAAC;QAEM,4CAAM,GAAb;YACI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,8BAAe,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QACxF,CAAC;QAEM,4CAAM,GAAb;YACI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,8BAAe,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7E,CAAC;QACL,kCAAC;IAAD,CAhBA,AAgBC,IAAA;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,2BAA2B;YACvC,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,6HAA6H;gBAC3H,2FAA2F;gBAC3F,eAAe;SAC9B,CAAA;IACL,CAAC;IAED,OAAO;SACF,MAAM,CAAC,aAAa,CAAC;SACrB,SAAS,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;AAEjD,CAAC,CAAC,EAAE,CAAC;;;AC1CL,YAAY,CAAC;AAGb,CAAC;IAED,yCAAyC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW;QACtF,UAAU,CAAC;QAEX,IAAI,QAAQ,GAAG,EAAE,GAAG,MAAM,CAAC,eAAe,CAAC;QAC3C,IAAI,SAAS,GAAG,IAAI,CAAC;QAGrB,IAAI,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACV,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YACrC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACvC,CAAC;QAED,iBAAiB,CAAC,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,CAAA;QAC3C,UAAU,CAAC,GAAG,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;QAExD,2BAA2B,KAAK,EAAE,MAAM;YACpC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;YAC/B,IAAI,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YAGxC,MAAM,CAAC,OAAO,GAAG,SAAS,GAAG,gBAAgB,IAAI,SAAS,GAAG,gBAAgB,CAAC;QAClF,CAAC;IAEL,CAAC;IAED,+BAA+B,aAAa;QACxC,UAAU,CAAC;QAEX,IAAI,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAE5B,MAAM,CAAC;YACH,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,UAAS,MAAW,EAAE,QAAQ,EAAE,MAAM;gBAExC,MAAM,CAAC,IAAI,GAAG,cAAa,MAAM,CAAC,MAAM,CAAC,OAAO,CAAA,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;YACD,UAAU,EAAE,+BAA+B;SAC9C,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,aAAa,CAAC;SACrB,SAAS,CAAC,iBAAiB,EAAE,qBAAqB,CAAC,CAAC;AAEzD,CAAC,CAAC,EAAE,CAAC;;;ACvDL,YAAY,CAAC;;AAEF,QAAA,oBAAoB,GAAG,oBAAoB,CAAC;AAC5C,QAAA,yBAAyB,GAAG,yBAAyB,CAAC;AACtD,QAAA,iBAAiB,GAAG,iBAAiB,CAAC;AACtC,QAAA,kBAAkB,GAAG,kBAAkB,CAAC;AAEnD;IAAA;IAKA,CAAC;IAAD,qBAAC;AAAD,CALA,AAKC,IAAA;AALY,wCAAc;AAwC3B;IAOI,yBAAmB,MAAsB,EAAE,UAAgC,EAAE,UAAuC;QAF5G,OAAE,GAAG,cAAc,CAAC;QAGxB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,sBAAW,mCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAW,oCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAW,kCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;YACjC,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;;;OALA;IAOD,sBAAW,kCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,iCAAyB,EAAE,KAAK,CAAC,CAAC;QACjE,CAAC;;;OALA;IAOM,gCAAM,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;IAC3C,CAAC;IAEM,8BAAI,GAAX;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;IAClC,CAAC;IAEM,+BAAK,GAAZ;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;IACnC,CAAC;IAEM,gCAAM,GAAb;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;IACpC,CAAC;IAEM,kCAAQ,GAAf;QAAA,iBAKC;QALe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,qCAAW,GAAlB;QAAA,iBAKC;QALkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEM,8BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAEO,yCAAe,GAAvB;QACI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,4BAAoB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9D,CAAC;IACL,sBAAC;AAAD,CA7EA,AA6EC,IAAA;AAED;IAAA;QACY,YAAO,GAAmB;YAC9B,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,IAAI;SACd,CAAC;IAwEN,CAAC;IApEG,sBAAW,oCAAM;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;aAED,UAAkB,KAAqB;YACnC,IAAI,CAAC,OAAO,GAAG,KAAK,IAAI,IAAI,cAAc,EAAE,CAAC;QACjD,CAAC;;;OAJA;IAMD,sBAAW,mCAAK;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC9B,CAAC;aAED,UAAiB,KAAU;YACvB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE,CAAC;QACrC,CAAC;;;OAJA;IAMD,sBAAW,kCAAI;aAAf;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC7B,CAAC;aAED,UAAgB,KAAa;YACzB,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;QAC9B,CAAC;;;OAJA;IAMD,sBAAW,qCAAO;aAAlB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;aAED,UAAmB,KAAe;YAC9B,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,KAAK,IAAI,EAAE,CAAC;QACvC,CAAC;;;OAJA;IAMM,mCAAQ,GAAf;QAAA,iBAIC;QAJe,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QAChC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,sCAAW,GAAlB;QAAA,iBAIC;QAJkB,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACnC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,UAAC,CAAC;YACd,KAAI,CAAC,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UAAC,EAAE,IAAK,OAAA,EAAE,IAAI,CAAC,EAAP,CAAO,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,+BAAI,GAAX,UAAY,IAAY,EAAE,KAAU;QAChC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACrC,CAAC;IAEM,+BAAI,GAAX;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAEM,gCAAK,GAAZ;QACI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAEM,iCAAM,GAAb;QACI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAEM,+BAAI,GAAX,UAAY,UAAgC,EAAE,UAAuC;QACjF,UAAU,CAAC;QAEX,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QAE9E,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACL,uBAAC;AAAD,CA9EA,AA8EC,IAAA;AAED,4BAA4B,UAAgC,EAAE,WAA6B;IACvF,UAAU,CAAC,GAAG,CAAC,yBAAiB,EAAE,cAAQ,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,UAAU,CAAC,GAAG,CAAC,0BAAkB,EAAE,cAAQ,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,OAAO;KACF,MAAM,CAAC,aAAa,CAAC;KACrB,QAAQ,CAAC,aAAa,EAAE,gBAAgB,CAAC;KACzC,GAAG,CAAC,kBAAkB,CAAC,CAAC;;;ACtN7B,YAAY,CAAC;;;;;AAEb,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;AAE9C,6BAA2B;AAC3B,mCAAiC;AACjC,+BAA6B;AAE7B,uCAAkC;;;ACRlC,YAAY,CAAC;;;;;AAEb,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC;AAEvE,yBAAuB;AAEvB,mCAAiC;AACjC,mCAAiC;AACjC,qCAAmC;AACnC,uCAAqC;AACrC,qCAAmC;AACnC,oCAAkC;AAClC,4BAA0B;AAE1B,mCAA8B;;;ACd9B,YAAY,CAAC;;AAEb,sDAAqG;AAGrG,CAAC;IASD;QAEI,2BACY,UAAgC,EAChC,QAAgB,EAChB,MAAgC;YAH5C,iBAmBC;YAlBW,eAAU,GAAV,UAAU,CAAsB;YAChC,aAAQ,GAAR,QAAQ,CAAQ;YAChB,WAAM,GAAN,MAAM,CAA0B;YAIxC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAE9B,IAAI,QAAQ,GAAG,cAAQ,KAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAA;YAGvC,UAAU,CAAC,GAAG,CAAC,+BAAgB,EAAE,QAAQ,CAAC,CAAC;YAG3C,IAAI,CAAC,MAAM,EAAE,CAAC;YAGd,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAC9B,CAAC;QAEO,kCAAM,GAAd;YAAA,iBA8EC;YA7EG,IACI,SAAS,GAAG,CAAC,CAAC,gBAAgB,CAAC,EAC/B,aAAa,GAAG,CAAC,CAAC,qBAAqB,CAAC,EACxC,WAAW,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;YACxC,IACI,QAAQ,GAAG,SAAS,CAAC,KAAK,EAAE,EAC5B,SAAS,GAAG,SAAS,CAAC,MAAM,EAAE,EAC9B,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,EACjF,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,EACpF,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,EACxE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,EAC3E,IAAI,EAAE,GAAG,CAAC;YAGd,EAAE,CAAC,CAAC,qCAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5B,QAAQ,GAAG,IAAI,CAAC;gBAChB,SAAS,GAAG,IAAI,CAAC;gBACjB,KAAK,GAAG,IAAI,CAAC;gBACb,MAAM,GAAG,IAAI,CAAC;gBACd,QAAQ,GAAG,IAAI,CAAC;gBAChB,SAAS,GAAG,IAAI,CAAC;YACrB,CAAC;YAED,IAAI,CAAC,CAAC;gBAEF,IAAM,KAAK,GAAG,qCAAsB,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;gBACxD,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC;gBACtB,SAAS,IAAI,KAAK,GAAG,CAAC,CAAC;gBAGvB,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC;gBAC1D,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC;gBAG9D,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC;gBACjD,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC;YACzD,CAAC;YAGD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,GAAG,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,GAAG,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;YAChE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;YACtD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,GAAG,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;YAEzD,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBAC9C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,GAAG,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;gBACnE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,GAAG,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;gBACnE,IACI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,EACnD,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,EACnD,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC5C,IAAI,aAAa,GAAG,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;gBAEpD,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;oBACnB,aAAa,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAC/C,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;oBACnB,aAAa,IAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAE/C,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,aAAa,GAAG,IAAI,CAAC,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;gBACrC,EAAE,CAAC,CAAC,qCAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC5B,IAAI,GAAG,CAAC,CAAC;oBACT,GAAG,GAAG,CAAC,CAAC;gBACZ,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,GAAG,aAAa,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;oBAClE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;gBACpF,CAAC;gBAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBAE9B,UAAU,CAAC,cAAQ,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YACrE,CAAC;YAGD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAC9C,CAAC;QACL,wBAAC;IAAD,CAtGA,AAsGC,IAAA;IAED,uBAAuB,UAAgC;QACnD,UAAU,CAAC;QAEX,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,UAAC,MAAM,EAAE,QAAQ,EAAE,MAAM;gBAC3B,IAAI,iBAAiB,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;YACxD,CAAC;SACJ,CAAA;IACL,CAAC;IAGD,OAAO;SACF,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;AAEzC,CAAC,CAAC,EAAE,CAAC;;;ACtIL,YAAY,CAAC;AAGb,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,UAAC,MAAiB,EAAE,QAAgB,EAAE,MAAsB;gBAC9D,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACpC,CAAC;SACJ,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;AAE7C,CAAC,CAAC,EAAE,CAAC;;;AClBL,YAAY,CAAC;AAGb,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,UAAC,MAAiB,EAAE,QAAgB,EAAE,MAAsB;gBAC9D,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YACtC,CAAC;SACJ,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;AAEjD,CAAC,CAAC,EAAE,CAAC;;;AClBL,YAAY,CAAC;;AAEb,4DAAmF;AACnF,sDAAkG;AAGlG,CAAC;IAMD;QAGI,iCACY,MAAiB,EACjB,QAAqC,EACrC,UAAgC,EAChC,QAA4B,EAC5B,MAAgC;YAL5C,iBAuBC;YAtBW,WAAM,GAAN,MAAM,CAAW;YACjB,aAAQ,GAAR,QAAQ,CAA6B;YACrC,eAAU,GAAV,UAAU,CAAsB;YAChC,aAAQ,GAAR,QAAQ,CAAoB;YAC5B,WAAM,GAAN,MAAM,CAA0B;YAExC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC;YAG1E,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAG9B,IAAM,QAAQ,GAAG,cAAQ,KAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1C,mCAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YAGhD,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;gBACnB,sCAAoB,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;YACvD,CAAC,CAAC,CAAC;YAGH,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACpC,CAAC;QAEO,0DAAwB,GAAhC;YAAA,iBAeC;YAdG,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;YAC3C,IAAM,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;YAEvB,qCAAsB,CAAC,MAAM,CAAC,8BAAe,EAAE,KAAK,CAAC,CAAC;YAEtD,CAAC,CAAC,IAAI,CAAC,qCAAsB,EAAE,UAAC,UAAU,EAAE,MAAM;gBAC9C,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACtB,IAAI,CAAC,MAAM,GAAG,UAAU,GAAE,aAAa,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;gBAClE,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC;gBACV,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC7B,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,wCAAM,GAAd;YACI,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,+BAAgB,EAAE,qCAAsB,CAAC,CAAC;QACpE,CAAC;QACL,8BAAC;IAAD,CAjDA,AAiDC,IAAA;IAED;QACI,+BACI,MAAiB,EACjB,QAAqC;YAGrC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;QACvC,CAAC;QACL,4BAAC;IAAD,CARA,AAQC,IAAA;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,uBAAuB;YACnC,YAAY,EAAE,IAAI;SACrB,CAAA;IACL,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,qBAAqB;SAC9B,CAAA;IACL,CAAC;IAED,OAAO;SACF,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,SAAS,EAAE,aAAa,CAAC;SACnC,SAAS,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;AAEjD,CAAC,CAAC,EAAE,CAAC;;;AC7FL,YAAY,CAAC;AAGb,CAAC;IAED;QACI,MAAM,CAAC;YACH,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,UAAC,MAAiB,EAAE,QAAgB,EAAE,MAAsB;gBAC9D,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YACpC,CAAC;SACJ,CAAC;IACN,CAAC;IAED,OAAO;SACF,MAAM,CAAC,WAAW,CAAC;SACnB,SAAS,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;AAE7C,CAAC,CAAC,EAAE,CAAC;;;AClBL,YAAY,CAAC;;AAEb,4DAAmF;AACnF,sDAAsH;AAStH;IAAA;IAKA,CAAC;IAAD,mBAAC;AAAD,CALA,AAKC,IAAA;AAMD;IAOI,4BACI,MAAiB,EACT,QAAgB,EAChB,MAAiC,EACjC,UAAgC;QAJ5C,iBAgCC;QA9BW,aAAQ,GAAR,QAAQ,CAAQ;QAChB,WAAM,GAAN,MAAM,CAA2B;QACjC,eAAU,GAAV,UAAU,CAAsB;QAExC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG;YACrF,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,QAAQ,CAAC,sBAAsB,CAAC;YAC3D,IAAI,CAAC,mBAAmB,GAAG,IAAI;YAC/B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAGjD,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAG/B,IAAM,QAAQ,GAAG,cAAQ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,mCAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAGzC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE;YACnB,sCAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,oCAAoC,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAGtC,UAAU,CAAC,GAAG,CAAC,+BAAgB,EAAE,cAAQ,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAGhE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAEO,mCAAM,GAAd,UAAe,KAAc;QACzB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,EACtC,cAAc,CAAC;QAEnB,EAAE,CAAC,CAAC,qCAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACtE,KAAK,GAAG,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;YAEvB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;YACpD,cAAc,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;YAEzD,EAAE,CAAC,CAAC,cAAc,GAAG,KAAK,CAAC,CAAC,CAAC;gBACzB,OAAO,EAAE,CAAC;gBACV,cAAc,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,GAAG,OAAO,GAAG,EAAE,CAAC;YAC7D,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;gBACd,cAAc,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,GAAG,IAAI,CAAC,CAAC;YACpD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;YACvD,CAAC;YAGD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC9C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,KAAK,GAAG,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;YACvB,cAAc,GAAG,KAAK,CAAC;YAEvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,cAAc,GAAG,IAAI,CAAC,CAAC;YAEhD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAC3C,CAAC;QAGD,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,cAAc,IAAI,KAAK,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,mBAAmB,GAAG,cAAc,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAGvB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,iCAAkB,CAAC,CAAC;QAC9C,CAAC;IACL,CAAC;IACL,yBAAC;AAAD,CArFA,AAqFC,IAAA;AAED,wBAAwB,UAAgC;IACpD,UAAU,CAAC;IAGX,0BAA0B,KAAK;QAC3B,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAChC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACzB,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC;QACH,QAAQ,EAAE,IAAI;QACd,KAAK,EAAE,KAAK;QACZ,UAAU,EAAE,IAAI;QAChB,QAAQ,EACJ,UAAC,QAAgB,EAAE,MAAiC;YAChD,EAAE,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACvC,MAAM,CAAC,MAAM,EAAE;sBACT,+EAA+E;sBAC/E,yEAAyE;sBACzE,wEAAwE;sBACxE,uCAAuC;sBACvC,QAAQ,CAAC;YACnB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,EAAE;sBACT,+EAA+E;sBAC/E,yEAAyE;sBACzE,kCAAkC;sBAClC,QAAQ,CAAC;YACnB,CAAC;QACL,CAAC;QACL,UAAU,EAAE,UAAC,MAA6B;YACtC,MAAM,CAAC,YAAY,GAAG;gBAClB,MAAM,EAAE,CAAC;gBACT,UAAU,EAAE,KAAK;gBACjB,aAAa,EAAE,KAAK;gBACpB,kBAAkB,EAAE,CAAC;aACxB,CAAC;QACN,CAAC;QACD,IAAI,EAAE,UAAC,MAAiB,EAAE,QAAgB,EAAE,MAAiC;YACzE,IAAI,kBAAkB,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QACjE,CAAC;KACJ,CAAC;AACN,CAAC;AAED,OAAO;KACF,MAAM,CAAC,WAAW,CAAC;KACnB,SAAS,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;;;AC9J3C,YAAY,CAAC;;AAEb;IACI,0BACI,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;QAE9C,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACjB,CAAC;IAML,uBAAC;AAAD,CAdA,AAcC,IAAA;AAdY,4CAAgB;AAgB7B;IAAA;IA0BA,CAAC;IAdU,wCAAM,GAAb,UAAc,WAA6B,EAAE,KAAa;QACtD,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC;YAAC,MAAM,CAAC;QAEhC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,WAAW,CAAC,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC,EAAE,IAAI,KAAK,IAAI,WAAW,CAAC,EAAE,CAAC;QAC/D,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC,EAAE,IAAI,KAAK,IAAI,WAAW,CAAC,EAAE,CAAC;QAC/D,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC,EAAE,IAAI,KAAK,IAAI,WAAW,CAAC,EAAE,CAAC;QAC/D,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC;IACL,8BAAC;AAAD,CA1BA,AA0BC,IAAA;AA1BY,0DAAuB;AA4BzB,QAAA,gBAAgB,GAAW,gBAAgB,CAAC;AAC5C,QAAA,kBAAkB,GAAW,kBAAkB,CAAC;AAEhD,QAAA,eAAe,GAAqB,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC/E,QAAA,sBAAsB,GAA4B,IAAI,uBAAuB,EAAE,CAAC;AAY3F;IAAA;IAkCA,CAAC;IAjCG,sBAAW,sCAAW;aAAtB;YACI,MAAM,CAAC,uBAAe,CAAC;QAC3B,CAAC;aAED,UAAuB,KAAuB;YAC1C,uBAAe,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OAJA;IAMM,4BAAI,GAAX;QACI,IAAM,OAAO,GAAG,UAAS,IAAI;YACzB,MAAM,CAAC,8BAAsB,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC,CAAA;QAED,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,aAAa,EAAE;YAC1C,GAAG,EAAE,cAAQ,MAAM,CAAC,uBAAe,CAAC,CAAC,CAAC;YACtC,GAAG,EAAE,UAAC,KAAK;gBACP,uBAAe,GAAG,KAAK,IAAI,IAAI,gBAAgB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAEtE,8BAAsB,CAAC,MAAM,CACzB,uBAAe,EACf,8BAAsB,CAAC,KAAK,CAC/B,CAAC;YACN,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,OAAO,EAAE;YACpC,GAAG,EAAE;gBACD,MAAM,CAAC,8BAAsB,CAAC,KAAK,CAAC;YACxC,CAAC;SACJ,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IACL,oBAAC;AAAD,CAlCA,AAkCC,IAAA;AAED,OAAO;KACF,MAAM,CAAC,UAAU,CAAC;KAClB,QAAQ,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;;;ACpGzC,YAAY,CAAC;;AAEb,IAAI,WAAW,GAAS,QAAS,CAAC,WAAW,CAAC;AAC9C,IAAI,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAEhD,sBAAsB,QAAQ;IAC1B,IAAI,KAAK,GAAG,MAAM,CAAC,qBAAqB;WAC3B,MAAO,CAAC,wBAAwB;WAChC,MAAO,CAAC,2BAA2B;WACzC,UAAS,QAAQ;YAChB,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC3C,CAAC,CAAC;IAEN,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC3B,CAAC;AAED;IACI,IAAI,MAAM,GAAG,MAAM,CAAC,oBAAoB;WAC3B,MAAO,CAAC,uBAAuB;WAC/B,MAAO,CAAC,0BAA0B;WACxC,MAAM,CAAC,YAAY,CAAC;IAE3B,MAAM,CAAC,UAAS,EAAE;QACd,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACtB,CAAC,CAAC;AACN,CAAC;AAED,wBAAwB,KAAU;IAC9B,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC;IAC7C,EAAE,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC;QAAC,WAAW,EAAuB,CAAC;IAC1D,GAAG,CAAC,aAAa,GAAG,YAAY,CAAC;QAC7B,IAAM,OAAO,GAAG,GAAG,CAAC,iBAAiB,CAAC;QACtC,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC,UAAS,EAAE;YAC3C,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC;AAED,sBAAsB,KAAU;IAC5B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC;IAC5E,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;AAChF,CAAC;AAED,2BAAkC,OAAO,EAAE,QAAQ;IAC/C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAC/B,OAAO,CAAC,mBAAmB,GAAG,EAAE,CAAC;QACjC,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,OAAO,CAAC,iBAAiB,GAAG,OAAO,CAAC;YACpC,OAAO,CAAC,WAAW,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,CAAC;YACF,EAAE,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC;gBAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;YACxF,IAAM,GAAG,GAAQ,OAAO,CAAC,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC9E,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,sIAAsI,CAAC,CAAC;YAClK,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC;YAChC,GAAG,CAAC,MAAM,GAAG,YAAY,CAAC;YAC1B,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC;gBAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACnC,GAAG,CAAC,IAAI,GAAG,aAAa,CAAC;YACzB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;gBAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACxC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC/C,CAAC;AArBD,8CAqBC;AAED,8BAAqC,OAAO,EAAE,QAAQ;IAClD,EAAE,CAAC,CAAC,QAAQ,CAAC;QAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACnG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;QACtC,EAAE,CAAC,CAAC,WAAW,CAAC;YAAC,OAAO,CAAC,WAAW,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACjE,IAAI,CAAC,CAAC;YACF,OAAO,CAAC,iBAAiB,CAAC,eAAe,CAAC,WAAW,CAAC,mBAAmB,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;YACpG,OAAO,CAAC,iBAAiB,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAChF,CAAC;IACL,CAAC;AACL,CAAC;AATD,oDASC;;;AC3ED,YAAY,CAAC;;;;;AAEb,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AAE/B,0BAAwB;AACxB,6BAA2B;AAE3B,oCAA+B;AAC/B,uCAAkC","file":"pip-webui-layouts.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nimport { MainBreakpoints } from '../media/MediaService';\nimport { IAuxPanelService } from './AuxPanelService';\n\n(() => {\n\nclass AuxPanelDirectiveController {\n    private _pipAuxPanel: IAuxPanelService;\n    private normalSize: number = 320;\n    private largeSize: number = 480;\n\n    public constructor(pipAuxPanel: IAuxPanelService) {\n        this._pipAuxPanel = pipAuxPanel;\n    }\n\n    public isGtxs():boolean {\n        return Number($('body').width()) > MainBreakpoints.xs && this._pipAuxPanel.isOpen();\n    }\n\n    public isGtlg():boolean {\n        return Number($('body').width()) > (MainBreakpoints.lg + this.largeSize);\n    }\n}\n\nfunction AuxPanelDirective() {\n    return {\n        restrict: 'E',\n        replace: true,\n        controller: AuxPanelDirectiveController,\n        transclude: true,\n        controllerAs: 'vm',\n        template: '<md-sidenav class=\"md-sidenav-right md-whiteframe-z2 pip-auxpanel color-content-bg\" ng-class=\"{\\'pip-large\\': vm.isGtlg()}\"' + \n                    'md-component-id=\"pip-auxpanel\" md-is-locked-open=\"vm.isGtxs()\" pip-focused ng-transclude>' + \n                    '</md-sidenav>'\n    }\n}\n\nangular\n    .module('pipAuxPanel')\n    .directive('pipAuxPanel', AuxPanelDirective);\n\n})();","'use strict';\n\n// Prevent junk from going into typescript definitions\n(() => {\n\nfunction AuxPanelPartDirectiveController($scope, $element, $attrs, $rootScope, pipAuxPanel) {\n    \"ngInject\";\n\n    var partName = '' + $attrs.pipAuxPanelPart;\n    var partValue = null;\n\n    // Break part apart\n    var pos = partName.indexOf(':');\n    if (pos > 0) {\n        partValue = partName.substr(pos + 1);\n        partName = partName.substr(0, pos);\n    }\n\n    onAuxPanelChanged(null, pipAuxPanel.config)\n    $rootScope.$on('pipAuxPanelChanged', onAuxPanelChanged);\n\n    function onAuxPanelChanged(event, config) {\n        var parts = config.parts || {};\n        var currentPartValue = config[partName];\n        // Set visible variable to switch ngIf\n\n        $scope.visible = partValue ? currentPartValue == partValue : currentPartValue;\n    }\n\n}\n\nfunction AuxPanelPartDirective(ngIfDirective) {\n    \"ngInject\";\n\n    var ngIf = ngIfDirective[0];\n\n    return {\n        transclude: ngIf.transclude,\n        priority: ngIf.priority,\n        terminal: ngIf.terminal,\n        restrict: ngIf.restrict,\n        scope: true,\n        link: function($scope: any, $element, $attrs) {\n            // Visualize based on visible variable in scope\n            $attrs.ngIf = function() { return $scope.visible };\n            ngIf.link.apply(ngIf);\n        },\n        controller: AuxPanelPartDirectiveController\n    };\n}\n\nangular\n    .module('pipAuxPanel')\n    .directive('pipAuxPanelPart', AuxPanelPartDirective);\n\n})();","'use strict';\n\nexport let AuxPanelChangedEvent = 'pipAuxPanelChanged';\nexport let AuxPanelStateChangedEvent = 'pipAuxPanelStateChanged';\nexport let OpenAuxPanelEvent = 'pipOpenAuxPanel';\nexport let CloseAuxPanelEvent = 'pipCloseAuxPanel';\n\nexport class AuxPanelConfig {\n    parts: any;\n    classes: string[];\n    state: any;\n    type: string;\n} \n\nexport interface IAuxPanelService {\n    readonly config: AuxPanelConfig;\n    readonly classes: string[];\n    parts: any;\n    state: any;    \n\n    isOpen(): boolean;\n    open(): void;\n    close(): void;\n    toggle(): void;\n  \n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n \n    part(part: string, value: any): void;\n}\n\nexport interface IAuxPanelProvider extends ng.IServiceProvider {\n    config: AuxPanelConfig;\n    parts: any;\n    type: string;\n    classes: string[];\n\n    open(): void;\n    close(): void;\n    toggle(): void;\n\n    addClass(...classes: string[]): void;\n    removeClass(...classes: string[]): void;\n\n    part(part: string, value: any): void;\n}\n\nclass AuxPanelService implements IAuxPanelService {\n    private _config: AuxPanelConfig;\n    private _state: any;\n    private _rootScope: ng.IRootScopeService;\n    private _sidenav: ng.material.ISidenavService;\n    private id = 'pip-auxpanel';\n\n    public constructor(config: AuxPanelConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        this._config = config;\n        this._rootScope = $rootScope;\n        this._sidenav = $mdSidenav;\n    }\n\n    public get config(): AuxPanelConfig {\n        return this._config;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n        this.sendConfigEvent();\n    }\n\n    public get state(): any {\n        return this._state;\n    }\n\n    public set state(value: any) {\n        this._state = value || {};\n        this._rootScope.$broadcast(AuxPanelStateChangedEvent, value);\n    }\n\n    public isOpen(): boolean {\n        return this._sidenav(this.id).isOpen();\n    }\n\n    public open() {\n        this._sidenav(this.id).open();\n    }\n            \n    public close() {\n        this._sidenav(this.id).close();\n    }\n\n    public toggle() {\n        this._sidenav(this.id).toggle();\n    }\n  \n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n        this.sendConfigEvent();\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n        this.sendConfigEvent();\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n        this.sendConfigEvent();\n    }\n\n    private sendConfigEvent() {\n        this._rootScope.$emit(AuxPanelChangedEvent, this._config);\n    }\n}\n\nclass AuxPanelProvider implements IAuxPanelProvider {\n    private _config: AuxPanelConfig = {\n        parts: {},\n        classes: [],\n        type: 'sticky',\n        state: null\n    };\n\n    private _service: AuxPanelService;\n\n    public get config(): AuxPanelConfig {\n        return this._config;\n    }\n\n    public set config(value: AuxPanelConfig) {\n        this._config = value || new AuxPanelConfig();\n    }\n\n    public get parts(): any {\n        return this._config.parts;\n    }\n\n    public set parts(value: any) {\n        this._config.parts = value || {};\n    }\n\n    public get type(): string {\n        return this._config.type;\n    }\n\n    public set type(value: string) {\n        this._config.type = value;\n    }\n\n    public get classes(): string[] {\n        return this._config.classes;\n    }\n\n    public set classes(value: string[]) {\n        this._config.classes = value || [];\n    }\n\n    public addClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes.push(c);\n        });\n    }\n\n    public removeClass(...classes: string[]): void {\n        _.each(classes, (c) => {\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\n        });\n    }\n \n    public part(part: string, value: any): void {\n        this._config.parts[part] = value;\n    }\n\n    public open(): void {\n        this._service.open();\n    }\n\n    public close(): void {\n        this._service.close();\n    }\n\n    public toggle(): void {\n        this._service.toggle();\n    }\n\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\n        \"ngInject\";\n\n        if (this._service == null)\n            this._service = new AuxPanelService(this._config, $rootScope, $mdSidenav);\n\n        return this._service;\n    }     \n}\n\nfunction hookAuxPanelEvents($rootScope: ng.IRootScopeService, pipAuxPanel: IAuxPanelService) {\n    $rootScope.$on(OpenAuxPanelEvent, () => { pipAuxPanel.open(); });\n    $rootScope.$on(CloseAuxPanelEvent, () => { pipAuxPanel.close(); });\n}\n\nangular\n    .module('pipAuxPanel')\n    .provider('pipAuxPanel', AuxPanelProvider)\n    .run(hookAuxPanelEvents);\n","'use strict';\n\nangular.module('pipAuxPanel', ['ngMaterial']);\n\nimport './AuxPanelService';\nimport './AuxPanelPartDirective';\nimport './AuxPanelDirective';\n\nexport * from './AuxPanelService';","'use strict';\n\nangular.module('pipLayout', ['wu.masonry', 'pipMedia', 'pipAuxPanel']);\n\nimport './media/index';\n\nimport './layouts/MainDirective';\nimport './layouts/CardDirective';\nimport './layouts/DialogDirective';\nimport './layouts/DocumentDirective';\nimport './layouts/SimpleDirective';\nimport './layouts/TilesDirective';\nimport './auxpanel/index';\n\nexport * from './media/index';\n","'use strict';\n\nimport { MainResizedEvent, LayoutResizedEvent, MainBreakpointStatuses } from '../media/MediaService';\n\n// Avoid default export\n(() => {\n\ninterface ICardDirectiveAttributes extends ng.IAttributes {\n    minWidth: string | number;\n    minHeight: string | number;\n    width: string | number;\n    height: string | number;\n}\n\nclass CardDirectiveLink {\n\n    public constructor(\n        private $rootScope: ng.IRootScopeService, \n        private $element: JQuery, \n        private $attrs: ICardDirectiveAttributes\n    ) {\n\n        // Add class to the element\n        $element.addClass('pip-card');\n\n        let listener = () => { this.resize(); }\n\n        // Resize every time window is resized\n        $rootScope.$on(MainResizedEvent, listener);\n\n        // Resize right away to avoid flicking\n        this.resize();\n\n        // Resize the element right away\n        setTimeout(listener, 100);\n    }\n\n    private resize() {\n        const\n            $mainBody = $('.pip-main-body'),\n            cardContainer = $('.pip-card-container'),\n            windowWidth = $('pip-main').width();\n        let\n            maxWidth = $mainBody.width(),\n            maxHeight = $mainBody.height(),\n            minWidth = this.$attrs.minWidth ? Math.floor(Number(this.$attrs.minWidth)) : null,\n            minHeight = this.$attrs.minHeight ? Math.floor(Number(this.$attrs.minHeight)) : null,\n            width = this.$attrs.width ? Math.floor(Number(this.$attrs.width)) : null,\n            height = this.$attrs.height ? Math.floor(Number(this.$attrs.height)) : null,\n            left, top;\n\n        // Full-screen on phone\n        if (MainBreakpointStatuses.xs) {\n            minWidth = null;\n            minHeight = null;\n            width = null;\n            height = null;\n            maxWidth = null;\n            maxHeight = null;\n        }\n        // Card view with adjustable margins on tablet and desktop\n        else {\n            // Set margin and maximum dimensions\n            const space = MainBreakpointStatuses['gt-md'] ? 24 : 16;\n            maxWidth -= space * 2;\n            maxHeight -= space * 2;\n\n            // Set minimum dimensions\n            minWidth = minWidth ? Math.min(minWidth, maxWidth) : null;\n            minHeight = minHeight ? Math.min(minHeight, maxHeight) : null;\n\n            // Set regular dimensions\n            width = width ? Math.min(width, maxWidth) : null;\n            height = height ? Math.min(height, maxHeight) : null;\n        }\n\n        // Set dimensions\n        this.$element.css('max-width', maxWidth ? maxWidth + 'px' : '');\n        this.$element.css('min-width', minWidth ? minWidth + 'px' : '');\n        this.$element.css('width', width ? width + 'px' : '');\n        this.$element.css('height', height ? height + 'px' : '');\n\n        if (!cardContainer.hasClass('pip-outer-scroll')) {\n            this.$element.css('max-height', maxHeight ? maxHeight + 'px' : '');\n            this.$element.css('min-height', minHeight ? minHeight + 'px' : '');\n            const\n                $header = this.$element.find('.pip-header:visible'),\n                $footer = this.$element.find('.pip-footer:visible'),\n                $body = this.$element.find('.pip-body');\n            let maxBodyHeight = maxHeight || $mainBody.height();\n\n            if ($header.length > 0)\n                maxBodyHeight -= $header.outerHeight(true);\n            if ($footer.length > 0)\n                maxBodyHeight -= $footer.outerHeight(true);\n\n            $body.css('max-height', maxBodyHeight + 'px');\n        } else {\n            cardContainer.addClass('pip-scroll');\n            if (MainBreakpointStatuses.xs) {\n                left = 0;\n                top = 0;\n            } else {\n                left = cardContainer.width() / 2 - this.$element.width() / 2 - 16;\n                top = Math.max(cardContainer.height() / 2 - this.$element.height() / 2 - 16, 0);\n            }\n\n            this.$element.css('left', left);\n            this.$element.css('top', top);\n\n            setTimeout(() => { this.$element.css('display', 'flex'); }, 100);\n        }\n\n        // Notify child controls that layout was resized\n        this.$rootScope.$emit('pipLayoutResized');\n    }\n}\n\nfunction cardDirective($rootScope: ng.IRootScopeService) {\n    \"ngInject\";\n\n    return {\n        restrict: 'EA',\n        link: ($scope, $element, $attrs) => {\n            new CardDirectiveLink($rootScope, $element, $attrs);\n        }\n    }\n}\n\n\nangular\n    .module('pipLayout')\n    .directive('pipCard', cardDirective);\n\n})();","'use strict';\n\n// Avoid default export\n(() => {\n\nfunction dialogDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\n            $element.addClass('pip-dialog');\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipDialog', dialogDirective);\n\n})();","'use strict';\n\n// Avoid default export\n(() => {\n\nfunction documentDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\n            $element.addClass('pip-document');\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipDocument', documentDirective);\n\n})();","'use strict';\n\nimport { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\nimport { MainBreakpoints, MainBreakpointStatuses, MainResizedEvent } from '../media/MediaService'; \n\n// Avoid default export\n(() => {\n\ninterface IMainDirectiveAttributes extends ng.IAttributes {\n    pipContainer: string;\n}\n\nclass MainDirectiveController implements ng.IController {\n    private _container: any;\n\n    public constructor(\n        private $scope: ng.IScope, \n        private $element: angular.IRootElementService, \n        private $rootScope: ng.IRootScopeService,\n        private $timeout: ng.ITimeoutService,\n        private $attrs: IMainDirectiveAttributes\n    ) {\n        this._container = $attrs.pipContainer ? $($attrs.pipContainer) : $element;\n\n        // Add CSS class\n        $element.addClass('pip-main');\n\n        // Add resize listener\n        const listener = () => { this.resize(); };\n        addResizeListener(this._container[0], listener);\n\n        // Unbind when scope is removed\n        $scope.$on('$destroy', () => {\n            removeResizeListener(this._container[0], listener);\n        });\n\n        // Perform initial calculations\n        this.updateBreakpointStatuses();\n    }\n\n    private updateBreakpointStatuses() {\n        const width = this._container.innerWidth();\n        const body = $('body');\n\n        MainBreakpointStatuses.update(MainBreakpoints, width);\n\n        $.each(MainBreakpointStatuses, (breakpoint, status) => {\n            if (_.isBoolean(status)) {\n                body[status ? 'addClass': 'removeClass']('pip-' + breakpoint);\n            }\n        });\n\n        this.$timeout(() => {\n            this.$rootScope.$apply();\n        });\n    }\n    \n    private resize() {\n        this.updateBreakpointStatuses();\n        this.$rootScope.$emit(MainResizedEvent, MainBreakpointStatuses);\n    }\n}\n\nclass MainBodyDirectiveLink {\n    public constructor(\n        $scope: ng.IScope, \n        $element: angular.IRootElementService\n    ) {\n        // Add CSS class\n        $element.addClass('pip-main-body');\n    }\n}\n\nfunction mainDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        controller: MainDirectiveController,\n        controllerAs: 'vm' \n    }\n}\n\nfunction mainBodyDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: MainBodyDirectiveLink\n    }\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipMain', mainDirective)\n    .directive('pipMainBody', mainBodyDirective);\n\n})();","'use strict';\n\n// Avoid default export\n(() => {\n\nfunction simpleDirective(): ng.IDirective {\n    return {\n        restrict: 'EA',\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\n            $element.addClass('pip-simple');\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipSimple', simpleDirective);\n\n})();","'use strict';\n\nimport { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\nimport { MainResizedEvent, LayoutResizedEvent, MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\n\ndeclare var Masonry: any;\n\ninterface ITilesDirectiveAttributes extends ng.IAttributes {\n    columnWidth: string | number;\n    pipInfinite: string | boolean | number;\n}\n\nclass TilesOptions {\n    gutter: number;\n    isFitWidth: boolean;\n    isResizeBound: boolean;\n    transitionDuration: number;\n}\n\ninterface ITilesControllerScope extends ng.IScope {\n    tilesOptions: TilesOptions;\n}\n\nclass TilesDirectiveLink {\n    private _columnWidth: number;\n    private _container: any;\n    private _prevContainerWidth: number;\n    private _masonry: any;\n    private _sizer: any;\n\n    public constructor(\n        $scope: ng.IScope, \n        private $element: JQuery, \n        private $attrs: ITilesDirectiveAttributes,\n        private $rootScope: ng.IRootScopeService\n    ) {\n        this._columnWidth = $attrs.columnWidth ? Math.floor(Number($attrs.columnWidth)) : 440,\n        this._container = $element.children('.pip-tiles-container'),\n        this._prevContainerWidth = null,\n        this._masonry = Masonry.data(this._container[0]);\n        \n        // Add class to the element\n        $element.addClass('pip-tiles');\n\n        // Add resize listener\n        const listener = () => { this.resize(false); };\n        addResizeListener($element[0], listener);\n\n        // Unbind when scope is removed\n        $scope.$on('$destroy', () => {\n            removeResizeListener($element[0], listener);\n        });\n\n        // Insert sizer\n        this._sizer = $('<div class=\"pip-tile-sizer\"></div>');\n        this._sizer.appendTo(this._container);\n\n        // Resize every time window is resized\n        $rootScope.$on(MainResizedEvent, () => { this.resize(false); });\n\n        // Resize the element right away\n        this.resize(true);\n    }\n\n    private resize(force: boolean) {\n        let width = this.$element.parent().width(),\n            containerWidth;\n\n        if (MainBreakpointStatuses['gt-xs'] && (width - 36) > this._columnWidth) {\n            width = width - 24 * 2;\n\n            let columns = Math.floor(width / this._columnWidth);\n            containerWidth = (this._columnWidth + 16) * columns - 16;\n\n            if (containerWidth > width) {\n                columns--;\n                containerWidth = (this._columnWidth + 16) * columns - 16;\n            }\n\n            if (columns < 1) {\n                containerWidth = width;\n                this._sizer.css('width', containerWidth + 'px');\n            } else {\n                this._sizer.css('width', this._columnWidth + 'px');\n            }\n\n            // +10 to avoid precision related error\n            this._container.css('width', (containerWidth + 10) + 'px');\n            this._container.removeClass('pip-mobile');\n        } else {\n            width = width - 16 * 2;\n            containerWidth = width;\n\n            this._sizer.css('width', containerWidth + 'px');\n            // +10 to avoid precision related error\n            this._container.css('width', (containerWidth + 10) + 'px');\n            this._container.addClass('pip-mobile');\n        }\n\n        // Manually call layout on tile container\n        if (this._prevContainerWidth != containerWidth || force) {\n            this._prevContainerWidth = containerWidth;\n            this._masonry.layout();\n\n            // Notify child controls that layout was resized\n            this.$rootScope.$emit(LayoutResizedEvent);\n        }\n    }\n}\n\nfunction tilesDirective($rootScope: ng.IRootScopeService): ng.IDirective {\n    \"ngInject\";\n\n    // Converts value into boolean\n    function convertToBoolean(value): boolean {\n        if (value == null) return false;\n        if (!value) return false;\n        value = value.toString().toLowerCase();\n        return value == '1' || value == 'true';\n    }\n\n    return {\n        restrict: 'EA',\n        scope: false,\n        transclude: true,\n        template:\n            ($element: JQuery, $attrs: ITilesDirectiveAttributes) => {\n                if (convertToBoolean($attrs.pipInfinite)) {\n                    return String()\n                        + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\n                        + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\n                        + ' masonry-options=\"tilesOptions\"  pip-scroll-container=\"\\'.pip-tiles\\'\"'\n                        + ' pip-infinite-scroll=\"readScroll()\" >'\n                        + '</div>';\n                } else {\n                    return String()\n                        + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\n                        + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\n                        + ' masonry-options=\"tilesOptions\">'\n                        + '</div>';\n                }\n            },\n        controller: ($scope: ITilesControllerScope) => {\n            $scope.tilesOptions = {\n                gutter: 8,//16\n                isFitWidth: false,\n                isResizeBound: false,\n                transitionDuration: 0 // '0.2s'\n            };\n        },\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ITilesDirectiveAttributes) => {\n            new TilesDirectiveLink($scope, $element, $attrs, $rootScope);\n        }\n    };\n}\n\nangular\n    .module('pipLayout')\n    .directive('pipTiles', tilesDirective);\n","'use strict';\n\nexport class MediaBreakpoints {\n    public constructor(\n        xs: number, sm: number, md: number, lg: number\n    ) {\n        this.xs = xs;\n        this.sm = sm;\n        this.md = md;\n        this.lg = lg;\n    }\n\n    public xs: number;\n    public sm: number;\n    public md: number;\n    public lg: number;\n}\n\nexport class MediaBreakpointStatuses {\n    public width: number;\n    public 'xs': boolean;\n    public 'gt-xs': boolean;\n    public 'sm': boolean;\n    public 'gt-sm': boolean;\n    public 'md': boolean;\n    public 'gt-md': boolean;\n    public 'lg': boolean;\n    public 'gt-lg': boolean;\n    public 'xl': boolean;\n\n    public update(breakpoints: MediaBreakpoints, width: number) {\n        if (breakpoints == null) return;\n\n        this.width = width;\n        this['xs'] = width <= breakpoints.xs;\n        this['gt-xs'] = width > breakpoints.xs;\n        this['sm'] = width > breakpoints.xs && width <= breakpoints.sm;\n        this['gt-sm'] = width > breakpoints.sm;\n        this['md'] = width > breakpoints.sm && width <= breakpoints.md;\n        this['gt-md'] = width > breakpoints.md;\n        this['lg'] = width > breakpoints.md && width <= breakpoints.lg;\n        this['gt-lg'] = width > breakpoints.lg;\n        this['xl'] = this['gt-lg'];\n    }\n}\n\nexport let MainResizedEvent: string = 'pipMainResized';\nexport let LayoutResizedEvent: string = 'pipLayoutResized';\n\nexport let MainBreakpoints: MediaBreakpoints = new MediaBreakpoints(639, 716, 1024, 1439);\nexport let MainBreakpointStatuses: MediaBreakpointStatuses = new MediaBreakpointStatuses();\n\nexport interface IMediaService {\n    (breakpoint: string): boolean;\n    breakpoints: MediaBreakpoints;\n    width: number;\n} \n\nexport interface IMediaProvider extends ng.IServiceProvider {\n    breakpoints: MediaBreakpoints;\n}\n\nclass MediaProvider implements IMediaProvider {\n    public get breakpoints(): MediaBreakpoints {\n        return MainBreakpoints;\n    }\n\n    public set breakpoints(value: MediaBreakpoints) {\n        MainBreakpoints = value;\n    }\n\n    public $get() {\n        const service = function(size) {\n            return MainBreakpointStatuses[size];\n        }\n\n        Object.defineProperty(service, 'breakpoints', {\n            get: () => { return MainBreakpoints; },\n            set: (value) => { \n                MainBreakpoints = value || new MediaBreakpoints(639, 716, 1024, 1439);\n                \n                MainBreakpointStatuses.update(\n                    MainBreakpoints, \n                    MainBreakpointStatuses.width\n                );\n            }\n        });\n\n        Object.defineProperty(service, 'width', {\n            get: () => { \n                return MainBreakpointStatuses.width; \n            }\n        });\n\n        return service; \n    }\n}\n\nangular\n    .module('pipMedia')\n    .provider('pipMedia', MediaProvider);\n","'use strict';\n\nlet attachEvent = (<any>document).attachEvent;\nlet isIE = navigator.userAgent.match(/Trident/);\n\nfunction requestFrame(callback): any {\n    let frame = window.requestAnimationFrame \n        || (<any>window).mozRequestAnimationFrame \n        || (<any>window).webkitRequestAnimationFrame \n        || function(callback) { \n            return window.setTimeout(callback, 20);     \n        };\n\n    return frame(callback);\n}\n\nfunction cancelFrame(): any {\n    let cancel = window.cancelAnimationFrame \n        || (<any>window).mozCancelAnimationFrame \n        || (<any>window).webkitCancelAnimationFrame \n        || window.clearTimeout;\n\n    return function(id) { \n        return cancel(id); \n    };\n}\n\nfunction resizeListener(event: any): void {\n    const win = event.target || event.srcElement;\n    if (win.__resizeRAF__) cancelFrame(/*win.__resizeRAF__*/);\n    win.__resizeRAF__ = requestFrame(function() {\n        const trigger = win.__resizeTrigger__;\n        trigger.__resizeListeners__.forEach(function(fn){\n            fn.call(trigger, event);\n        });\n    });\n}\n\nfunction loadListener(event: any): void {\n    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\n    this.contentDocument.defaultView.addEventListener('resize', resizeListener);\n}\n\nexport function addResizeListener(element, listener): void {\n    if (!element.__resizeListeners__) {\n        element.__resizeListeners__ = [];\n        if (attachEvent) {\n            element.__resizeTrigger__ = element;\n            element.attachEvent('onresize', resizeListener);\n        }\n        else {\n            if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\n            const obj: any = element.__resizeTrigger__ = document.createElement('object');\n            obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n            obj.__resizeElement__ = element;\n            obj.onload = loadListener;\n            obj.type = 'text/html';\n            if (isIE) element.appendChild(obj);\n            obj.data = 'about:blank';\n            if (!isIE) element.appendChild(obj);\n        }\n    }\n\n    element.__resizeListeners__.push(listener);\n}\n\nexport function removeResizeListener(element, listener): void {\n    if (listener) element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(listener), 1);\n    if (!element.__resizeListeners__.length) {\n        if (attachEvent) element.detachEvent('onresize', resizeListener);\n        else {\n            element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\n            element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\n        }\n    }\n}\n","'use strict';\n\nangular.module('pipMedia', []);\n\nimport './MediaService';\nimport './ResizeFunctions';\n\nexport * from './MediaService';\nexport * from './ResizeFunctions';"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}