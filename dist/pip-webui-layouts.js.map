{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/auxpanel/AuxPanelDirective.ts","src/auxpanel/AuxPanelPartDirective.ts","src/auxpanel/AuxPanelService.ts","src/auxpanel/index.ts","src/index.ts","src/layouts/CardDirective.ts","src/layouts/DialogDirective.ts","src/layouts/DocumentDirective.ts","src/layouts/MainDirective.ts","src/layouts/SimpleDirective.ts","src/layouts/TilesDirective.ts","src/media/MediaService.ts","src/media/ResizeFunctions.ts","src/media/index.ts"],"names":[],"mappings":"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","file":"pip-webui-layouts.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nimport { MainBreakpoints } from '../media/MediaService';\r\nimport { IAuxPanelService } from './AuxPanelService';\r\n\r\n(() => {\r\n\r\nclass AuxPanelDirectiveController {\r\n    private _pipAuxPanel: IAuxPanelService;\r\n    private normalSize: number = 320;\r\n    private largeSize: number = 480;\r\n\r\n    public constructor(pipAuxPanel: IAuxPanelService) {\r\n        this._pipAuxPanel = pipAuxPanel;\r\n    }\r\n\r\n    public isGtxs():boolean {\r\n        return Number($('body').width()) > MainBreakpoints.xs && this._pipAuxPanel.isOpen();\r\n    }\r\n\r\n    public isGtlg():boolean {\r\n        return Number($('body').width()) > (MainBreakpoints.lg + this.largeSize);\r\n    }\r\n}\r\n\r\nfunction AuxPanelDirective() {\r\n    return {\r\n        restrict: 'E',\r\n        replace: true,\r\n        controller: AuxPanelDirectiveController,\r\n        transclude: true,\r\n        controllerAs: 'vm',\r\n        template: '<md-sidenav class=\"md-sidenav-right md-whiteframe-z2 pip-auxpanel color-content-bg\" ng-class=\"{\\'pip-large\\': vm.isGtlg()}\"' + \r\n                    'md-component-id=\"pip-auxpanel\" md-is-locked-open=\"vm.isGtxs()\" pip-focused ng-transclude>' + \r\n                    '</md-sidenav>'\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipAuxPanel')\r\n    .directive('pipAuxPanel', AuxPanelDirective);\r\n\r\n})();","'use strict';\r\n\r\n// Prevent junk from going into typescript definitions\r\n(() => {\r\n\r\nfunction AuxPanelPartDirectiveController($scope, $element, $attrs, $rootScope, pipAuxPanel) {\r\n    \"ngInject\";\r\n\r\n    var partName = '' + $attrs.pipAuxPanelPart;\r\n    var partValue = null;\r\n\r\n    // Break part apart\r\n    var pos = partName.indexOf(':');\r\n    if (pos > 0) {\r\n        partValue = partName.substr(pos + 1);\r\n        partName = partName.substr(0, pos);\r\n    }\r\n\r\n    onAuxPanelChanged(null, pipAuxPanel.config)\r\n    $rootScope.$on('pipAuxPanelChanged', onAuxPanelChanged);\r\n\r\n    function onAuxPanelChanged(event, config) {\r\n        var parts = config.parts || {};\r\n        var currentPartValue = config[partName];\r\n        // Set visible variable to switch ngIf\r\n\r\n        $scope.visible = partValue ? currentPartValue == partValue : currentPartValue;\r\n    }\r\n\r\n}\r\n\r\nfunction AuxPanelPartDirective(ngIfDirective) {\r\n    \"ngInject\";\r\n\r\n    var ngIf = ngIfDirective[0];\r\n\r\n    return {\r\n        transclude: ngIf.transclude,\r\n        priority: ngIf.priority,\r\n        terminal: ngIf.terminal,\r\n        restrict: ngIf.restrict,\r\n        scope: true,\r\n        link: function($scope: any, $element, $attrs) {\r\n            // Visualize based on visible variable in scope\r\n            $attrs.ngIf = function() { return $scope.visible };\r\n            ngIf.link.apply(ngIf);\r\n        },\r\n        controller: AuxPanelPartDirectiveController\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipAuxPanel')\r\n    .directive('pipAuxPanelPart', AuxPanelPartDirective);\r\n\r\n})();","'use strict';\r\n\r\nexport let AuxPanelChangedEvent = 'pipAuxPanelChanged';\r\nexport let AuxPanelStateChangedEvent = 'pipAuxPanelStateChanged';\r\nexport let OpenAuxPanelEvent = 'pipOpenAuxPanel';\r\nexport let CloseAuxPanelEvent = 'pipCloseAuxPanel';\r\n\r\nexport class AuxPanelConfig {\r\n    parts: any;\r\n    classes: string[];\r\n    state: any;\r\n    type: string;\r\n} \r\n\r\nexport interface IAuxPanelService {\r\n    readonly config: AuxPanelConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n    state: any;    \r\n\r\n    isOpen(): boolean;\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n  \r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n \r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface IAuxPanelProvider extends ng.IServiceProvider {\r\n    config: AuxPanelConfig;\r\n    parts: any;\r\n    type: string;\r\n    classes: string[];\r\n\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}\r\n\r\nclass AuxPanelService implements IAuxPanelService {\r\n    private _config: AuxPanelConfig;\r\n    private _state: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _sidenav: ng.material.ISidenavService;\r\n    private id = 'pip-auxpanel';\r\n\r\n    public constructor(config: AuxPanelConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n        this._sidenav = $mdSidenav;\r\n    }\r\n\r\n    public get config(): AuxPanelConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: any) {\r\n        this._state = value || {};\r\n        this._rootScope.$broadcast(AuxPanelStateChangedEvent, value);\r\n    }\r\n\r\n    public isOpen(): boolean {\r\n        return this._sidenav(this.id).isOpen();\r\n    }\r\n\r\n    public open() {\r\n        this._sidenav(this.id).open();\r\n    }\r\n            \r\n    public close() {\r\n        this._sidenav(this.id).close();\r\n    }\r\n\r\n    public toggle() {\r\n        this._sidenav(this.id).toggle();\r\n    }\r\n  \r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(AuxPanelChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass AuxPanelProvider implements IAuxPanelProvider {\r\n    private _config: AuxPanelConfig = {\r\n        parts: {},\r\n        classes: [],\r\n        type: 'sticky',\r\n        state: null\r\n    };\r\n\r\n    private _service: AuxPanelService;\r\n\r\n    public get config(): AuxPanelConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: AuxPanelConfig) {\r\n        this._config = value || new AuxPanelConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._config.type;\r\n    }\r\n\r\n    public set type(value: string) {\r\n        this._config.type = value;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n \r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public open(): void {\r\n        this._service.open();\r\n    }\r\n\r\n    public close(): void {\r\n        this._service.close();\r\n    }\r\n\r\n    public toggle(): void {\r\n        this._service.toggle();\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AuxPanelService(this._config, $rootScope, $mdSidenav);\r\n\r\n        return this._service;\r\n    }     \r\n}\r\n\r\nfunction hookAuxPanelEvents($rootScope: ng.IRootScopeService, pipAuxPanel: IAuxPanelService) {\r\n    $rootScope.$on(OpenAuxPanelEvent, () => { pipAuxPanel.open(); });\r\n    $rootScope.$on(CloseAuxPanelEvent, () => { pipAuxPanel.close(); });\r\n}\r\n\r\nangular\r\n    .module('pipAuxPanel')\r\n    .provider('pipAuxPanel', AuxPanelProvider)\r\n    .run(hookAuxPanelEvents);\r\n","'use strict';\r\n\r\nangular.module('pipAuxPanel', ['ngMaterial']);\r\n\r\nimport './AuxPanelService';\r\nimport './AuxPanelPartDirective';\r\nimport './AuxPanelDirective';\r\n\r\nexport * from './AuxPanelService';","'use strict';\r\n\r\nangular.module('pipLayout', ['wu.masonry', 'pipMedia', 'pipAuxPanel']);\r\n\r\nimport './media/index';\r\n\r\nimport './layouts/MainDirective';\r\nimport './layouts/CardDirective';\r\nimport './layouts/DialogDirective';\r\nimport './layouts/DocumentDirective';\r\nimport './layouts/SimpleDirective';\r\nimport './layouts/TilesDirective';\r\nimport './auxpanel/index';\r\n\r\nexport * from './media/index';\r\n","'use strict';\r\n\r\nimport { MainResizedEvent, LayoutResizedEvent, MainBreakpointStatuses } from '../media/MediaService';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\nclass CardDirectiveLink {\r\n    private _element: any;\r\n    private _attrs: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n\r\n    public constructor($rootScope: ng.IRootScopeService, $element: any, $attrs: any) {\r\n        this._element = $element;\r\n        this._rootScope = $rootScope;\r\n        this._attrs = $attrs;\r\n\r\n        // Add class to the element\r\n        $element.addClass('pip-card');\r\n\r\n        let listener = () => { this.resize(); }\r\n\r\n        // Resize every time window is resized\r\n        $rootScope.$on(MainResizedEvent, listener);\r\n\r\n        // Resize right away to avoid flicking\r\n        this.resize();\r\n\r\n        // Resize the element right away\r\n        setTimeout(listener, 100);\r\n    }\r\n\r\n    private resize() {\r\n        var\r\n            $mainBody = $('.pip-main-body'),\r\n            cardContainer = $('.pip-card-container'),\r\n            windowWidth = $('pip-main').width(),\r\n            maxWidth = $mainBody.width(),\r\n            maxHeight = $mainBody.height(),\r\n            minWidth = this._attrs.minWidth ? Math.floor(this._attrs.minWidth) : null,\r\n            minHeight = this._attrs.minHeight ? Math.floor(this._attrs.minHeight) : null,\r\n            width = this._attrs.width ? Math.floor(this._attrs.width) : null,\r\n            height = this._attrs.height ? Math.floor(this._attrs.height) : null,\r\n            left, top;\r\n\r\n        // Full-screen on phone\r\n        if (MainBreakpointStatuses.xs) {\r\n            minWidth = null;\r\n            minHeight = null;\r\n            width = null;\r\n            height = null;\r\n            maxWidth = null;\r\n            maxHeight = null;\r\n        }\r\n        // Card view with adjustable margins on tablet and desktop\r\n        else {\r\n            // Set margin and maximum dimensions\r\n            var space = MainBreakpointStatuses['gt-md'] ? 24 : 16;\r\n            maxWidth -= space * 2;\r\n            maxHeight -= space * 2;\r\n\r\n            // Set minimum dimensions\r\n            minWidth = minWidth ? Math.min(minWidth, maxWidth) : null;\r\n            minHeight = minHeight ? Math.min(minHeight, maxHeight) : null;\r\n\r\n            // Set regular dimensions\r\n            width = width ? Math.min(width, maxWidth) : null;\r\n            height = height ? Math.min(height, maxHeight) : null;\r\n        }\r\n\r\n        // Set dimensions\r\n        this._element.css('max-width', maxWidth ? maxWidth + 'px' : '');\r\n        this._element.css('min-width', minWidth ? minWidth + 'px' : '');\r\n        this._element.css('width', width ? width + 'px' : '');\r\n        this._element.css('height', height ? height + 'px' : '');\r\n\r\n        if (!cardContainer.hasClass('pip-outer-scroll')) {\r\n            this._element.css('max-height', maxHeight ? maxHeight + 'px' : '');\r\n            this._element.css('min-height', minHeight ? minHeight + 'px' : '');\r\n            var\r\n                $header = this._element.find('.pip-header:visible'),\r\n                $footer = this._element.find('.pip-footer:visible'),\r\n                $body = this._element.find('.pip-body'),\r\n                maxBodyHeight = maxHeight || $mainBody.height();\r\n\r\n            if ($header.length > 0)\r\n                maxBodyHeight -= $header.outerHeight(true);\r\n            if ($footer.length > 0)\r\n                maxBodyHeight -= $footer.outerHeight(true);\r\n\r\n            $body.css('max-height', maxBodyHeight + 'px');\r\n        } else {\r\n            cardContainer.addClass('pip-scroll');\r\n            if (MainBreakpointStatuses.xs) {\r\n                left = 0;\r\n                top = 0;\r\n            } else {\r\n                left = cardContainer.width() / 2 - this._element.width() / 2 - 16;\r\n                top = Math.max(cardContainer.height() / 2 - this._element.height() / 2 - 16, 0);\r\n            }\r\n\r\n            this._element.css('left', left);\r\n            this._element.css('top', top);\r\n\r\n            setTimeout(() => { this._element.css('display', 'flex'); }, 100);\r\n        }\r\n\r\n        // Notify child controls that layout was resized\r\n        this._rootScope.$emit('pipLayoutResized');\r\n    }\r\n}\r\n\r\nfunction cardDirective($rootScope: ng.IRootScopeService) {\r\n    \"ngInject\";\r\n\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope, $element, $attrs) => {\r\n            new CardDirectiveLink($rootScope, $element, $attrs);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipCard', cardDirective);\r\n\r\n})();","'use strict';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\nfunction dialogDirective() {\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope, $element, $attrs) => {\r\n            $element.addClass('pip-dialog');\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipDialog', dialogDirective);\r\n\r\n})();","'use strict';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\nfunction documentDirective() {\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope, $element, $attrs) => {\r\n            $element.addClass('pip-document');\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipDocument', documentDirective);\r\n\r\n})();","'use strict';\r\n\r\nimport { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\r\nimport { MainBreakpoints, MainBreakpointStatuses, MainResizedEvent } from '../media/MediaService'; \r\n\r\n// Avoid default export\r\n(() => {\r\n\r\nclass MainDirectiveController {\r\n    private _element: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _timeout: ng.ITimeoutService;\r\n    private _container: any;\r\n\r\n    public constructor(\r\n        $scope: ng.IScope, \r\n        $element: any, \r\n        $rootScope: ng.IRootScopeService,\r\n        $timeout: ng.ITimeoutService,\r\n        $attrs: any\r\n    ) {\r\n        this._element = $element;        \r\n        this._rootScope = $rootScope;\r\n        this._timeout = $timeout;\r\n        this._container = $attrs.pipContainer ? $($attrs.pipContainer) : $element;\r\n\r\n        // Add CSS class\r\n        $element.addClass('pip-main');\r\n\r\n        // Add resize listener\r\n        let listener = () => { this.resize(); };\r\n        addResizeListener(this._container[0], listener);\r\n\r\n        // Unbind when scope is removed\r\n        $scope.$on('$destroy', () => {\r\n            removeResizeListener(this._container[0], listener);\r\n        });\r\n\r\n        // Perform initial calculations\r\n        this.updateBreakpointStatuses();\r\n    }\r\n\r\n    private updateBreakpointStatuses() {\r\n        let width = this._container.innerWidth();\r\n        let body = $('body');\r\n\r\n        MainBreakpointStatuses.update(MainBreakpoints, width);\r\n\r\n        $.each(MainBreakpointStatuses, (breakpoint, status) => {\r\n            if (_.isBoolean(status))\r\n                body[status ? 'addClass': 'removeClass']('pip-' + breakpoint);\r\n        });\r\n\r\n        this._timeout(() => {\r\n            this._rootScope.$apply();\r\n        });\r\n    }\r\n    \r\n    private resize() {\r\n        this.updateBreakpointStatuses();\r\n        this._rootScope.$emit(MainResizedEvent, MainBreakpointStatuses);\r\n    }\r\n}\r\n\r\nclass MainBodyDirectiveLink {\r\n    public constructor(\r\n        $scope: ng.IScope, \r\n        $element: any\r\n    ) {\r\n        // Add CSS class\r\n        $element.addClass('pip-main-body');\r\n    }\r\n}\r\n\r\nfunction mainDirective() {\r\n    return {\r\n        restrict: 'EA',\r\n        controller: MainDirectiveController,\r\n        controllerAs: 'vm' \r\n    }\r\n}\r\n\r\nfunction mainBodyDirective() {\r\n    return {\r\n        restrict: 'EA',\r\n        link: MainBodyDirectiveLink\r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipMain', mainDirective)\r\n    .directive('pipMainBody', mainBodyDirective);\r\n\r\n})();","'use strict';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\nfunction simpleDirective() {\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope, $element, $attrs) => {\r\n            $element.addClass('pip-simple');\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipSimple', simpleDirective);\r\n\r\n})();","'use strict';\r\n\r\nimport { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\r\nimport { MainResizedEvent, LayoutResizedEvent, MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\r\n\r\ndeclare var Masonry: any;\r\n\r\nclass TilesDirectiveLink {\r\n    private _element: any;\r\n    private _attrs: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _columnWidth: number;\r\n    private _container: any;\r\n    private _prevContainerWidth: number;\r\n    private _masonry: any;\r\n    private _sizer: any;\r\n\r\n    public constructor($scope: ng.IScope, $element: any, $rootScope: ng.IRootScopeService, $attrs: any) {\r\n        this._element = $element;\r\n        this._rootScope = $rootScope;\r\n        this._attrs = $attrs;\r\n\r\n        this._columnWidth = $attrs.columnWidth ? Math.floor($attrs.columnWidth) : 440,\r\n        this._container = $element.children('.pip-tiles-container'),\r\n        this._prevContainerWidth = null,\r\n        this._masonry = Masonry.data(this._container[0]);\r\n        \r\n        // Add class to the element\r\n        $element.addClass('pip-tiles');\r\n\r\n        // Add resize listener\r\n        let listener = () => { this.resize(false); };\r\n        addResizeListener($element[0], listener);\r\n\r\n        // Unbind when scope is removed\r\n        $scope.$on('$destroy', () => {\r\n            removeResizeListener($element[0], listener);\r\n        });\r\n\r\n        // Insert sizer\r\n        this._sizer = $('<div class=\"pip-tile-sizer\"></div>');\r\n        this._sizer.appendTo(this._container);\r\n\r\n        // Resize every time window is resized\r\n        $rootScope.$on(MainResizedEvent, () => { this.resize(false); });\r\n\r\n        // Resize the element right away\r\n        this.resize(true);\r\n    }\r\n\r\n    private resize(force: boolean) {\r\n        let width = this._element.parent().width();\r\n        let containerWidth;\r\n        \r\n        console.log();\r\n\r\n        if (MainBreakpointStatuses['gt-xs'] && (width - 36) > this._columnWidth) {\r\n            width = width - 24 * 2;\r\n\r\n            let columns = Math.floor(width / this._columnWidth);\r\n            containerWidth = (this._columnWidth + 16) * columns - 16;\r\n\r\n            if (containerWidth > width) {\r\n                columns--;\r\n                containerWidth = (this._columnWidth + 16) * columns - 16;\r\n            }\r\n\r\n            if (columns < 1) {\r\n                containerWidth = width;\r\n                this._sizer.css('width', containerWidth + 'px');\r\n            } else {\r\n                this._sizer.css('width', this._columnWidth + 'px');\r\n            }\r\n\r\n            // +10 to avoid precision related error\r\n            this._container.css('width', (containerWidth + 10) + 'px');\r\n            this._container.removeClass('pip-mobile');\r\n        } else {\r\n            width = width - 16 * 2;\r\n            containerWidth = width;\r\n\r\n            this._sizer.css('width', containerWidth + 'px');\r\n            // +10 to avoid precision related error\r\n            this._container.css('width', (containerWidth + 10) + 'px');\r\n            this._container.addClass('pip-mobile');\r\n        }\r\n\r\n        // Manually call layout on tile container\r\n        if (this._prevContainerWidth != containerWidth || force) {\r\n            this._prevContainerWidth = containerWidth;\r\n            this._masonry.layout();\r\n\r\n            // Notify child controls that layout was resized\r\n            this._rootScope.$emit(LayoutResizedEvent);\r\n        }\r\n    }\r\n}\r\n\r\nfunction tilesDirective($rootScope: ng.IRootScopeService) {\r\n    \"ngInject\";\r\n\r\n    // Converts value into boolean\r\n    function convertToBoolean(value) {\r\n        if (value == null) return false;\r\n        if (!value) return false;\r\n        value = value.toString().toLowerCase();\r\n        return value == '1' || value == 'true';\r\n    }\r\n\r\n    return {\r\n        restrict: 'EA',\r\n        scope: false,\r\n        transclude: true,\r\n        template:\r\n            ($element: any, $attrs: any) => {\r\n                if (convertToBoolean($attrs.pipInfinite)) {\r\n                    return String()\r\n                    + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\r\n                    + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\r\n                    + ' masonry-options=\"tilesOptions\"  pip-scroll-container=\"\\'.pip-tiles\\'\"'\r\n                    + ' pip-infinite-scroll=\"readScroll()\" >'\r\n                    + '</div>';\r\n                } else {\r\n                    return String()\r\n                        + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\r\n                        + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\r\n                        + ' masonry-options=\"tilesOptions\">'\r\n                        + '</div>';\r\n                }\r\n            },\r\n        controller: ($scope: any) => {\r\n            $scope.tilesOptions = {\r\n                gutter: 8,//16\r\n                isFitWidth: false,\r\n                isResizeBound: false,\r\n                transitionDuration: 0 // '0.2s'\r\n            };\r\n        },\r\n        link: ($scope, $element, $attrs) => {\r\n            new TilesDirectiveLink($scope, $element, $rootScope, $attrs);\r\n        } \r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipTiles', tilesDirective);\r\n","'use strict';\r\n\r\nexport class MediaBreakpoints {\r\n    public constructor(\r\n        xs: number, sm: number, md: number, lg: number\r\n    ) {\r\n        this.xs = xs;\r\n        this.sm = sm;\r\n        this.md = md;\r\n        this.lg = lg;\r\n    }\r\n\r\n    public xs: number;\r\n    public sm: number;\r\n    public md: number;\r\n    public lg: number;\r\n}\r\n\r\nexport class MediaBreakpointStatuses {\r\n    public width: number;\r\n    public 'xs': boolean;\r\n    public 'gt-xs': boolean;\r\n    public 'sm': boolean;\r\n    public 'gt-sm': boolean;\r\n    public 'md': boolean;\r\n    public 'gt-md': boolean;\r\n    public 'lg': boolean;\r\n    public 'gt-lg': boolean;\r\n    public 'xl': boolean;\r\n\r\n    public update(breakpoints: MediaBreakpoints, width: number) {\r\n        if (breakpoints == null) return;\r\n\r\n        this.width = width;\r\n        this['xs'] = width <= breakpoints.xs;\r\n        this['gt-xs'] = width > breakpoints.xs;\r\n        this['sm'] = width > breakpoints.xs && width <= breakpoints.sm;\r\n        this['gt-sm'] = width > breakpoints.sm;\r\n        this['md'] = width > breakpoints.sm && width <= breakpoints.md;\r\n        this['gt-md'] = width > breakpoints.md;\r\n        this['lg'] = width > breakpoints.md && width <= breakpoints.lg;\r\n        this['gt-lg'] = width > breakpoints.lg;\r\n        this['xl'] = this['gt-lg'];\r\n    }\r\n}\r\n\r\nexport let MainResizedEvent: string = 'pipMainResized';\r\nexport let LayoutResizedEvent: string = 'pipLayoutResized';\r\n\r\nexport let MainBreakpoints: MediaBreakpoints = new MediaBreakpoints(639, 716, 1024, 1439);\r\nexport let MainBreakpointStatuses: MediaBreakpointStatuses = new MediaBreakpointStatuses();\r\n\r\nexport interface IMediaService {\r\n    (breakpoint: string): boolean;\r\n    breakpoints: MediaBreakpoints;\r\n    width: number;\r\n} \r\n\r\nexport interface IMediaProvider extends ng.IServiceProvider {\r\n    breakpoints: MediaBreakpoints;\r\n}\r\n\r\nclass MediaProvider {\r\n    public get breakpoints(): MediaBreakpoints {\r\n        return MainBreakpoints;\r\n    }\r\n\r\n    public set breakpoints(value: MediaBreakpoints) {\r\n        MainBreakpoints = value;\r\n    }\r\n\r\n    public $get() {\r\n        let service = function(size) {\r\n            return MainBreakpointStatuses[size];\r\n        }\r\n\r\n        Object.defineProperty(service, 'breakpoints', {\r\n            get: () => { return MainBreakpoints; },\r\n            set: (value) => { \r\n                MainBreakpoints = value || new MediaBreakpoints(639, 716, 1024, 1439);\r\n                \r\n                MainBreakpointStatuses.update(\r\n                    MainBreakpoints, \r\n                    MainBreakpointStatuses.width\r\n                );\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(service, 'width', {\r\n            get: () => { \r\n                return MainBreakpointStatuses.width; \r\n            }\r\n        });\r\n\r\n        return service; \r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipMedia')\r\n    .provider('pipMedia', MediaProvider);\r\n","'use strict';\r\n\r\nlet attachEvent = (<any>document).attachEvent;\r\nlet isIE = navigator.userAgent.match(/Trident/);\r\n\r\nfunction requestFrame(callback): any {\r\n    let frame = window.requestAnimationFrame \r\n        || (<any>window).mozRequestAnimationFrame \r\n        || (<any>window).webkitRequestAnimationFrame \r\n        || function(callback) { \r\n            return window.setTimeout(callback, 20);     \r\n        };\r\n\r\n    return frame(callback);\r\n}\r\n\r\nfunction cancelFrame(): any {\r\n    let cancel = window.cancelAnimationFrame \r\n        || (<any>window).mozCancelAnimationFrame \r\n        || (<any>window).webkitCancelAnimationFrame \r\n        || window.clearTimeout;\r\n\r\n    return function(id) { \r\n        return cancel(id); \r\n    };\r\n}\r\n\r\nfunction resizeListener(event: any): void {\r\n    var win = event.target || event.srcElement;\r\n    if (win.__resizeRAF__) cancelFrame(/*win.__resizeRAF__*/);\r\n    win.__resizeRAF__ = requestFrame(function() {\r\n        var trigger = win.__resizeTrigger__;\r\n        trigger.__resizeListeners__.forEach(function(fn){\r\n            fn.call(trigger, event);\r\n        });\r\n    });\r\n}\r\n\r\nfunction loadListener(event: any): void {\r\n    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\r\n    this.contentDocument.defaultView.addEventListener('resize', resizeListener);\r\n}\r\n\r\nexport function addResizeListener(element, listener): void {\r\n    if (!element.__resizeListeners__) {\r\n        element.__resizeListeners__ = [];\r\n        if (attachEvent) {\r\n            element.__resizeTrigger__ = element;\r\n            element.attachEvent('onresize', resizeListener);\r\n        }\r\n        else {\r\n            if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\r\n            var obj: any = element.__resizeTrigger__ = document.createElement('object');\r\n            obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\r\n            obj.__resizeElement__ = element;\r\n            obj.onload = loadListener;\r\n            obj.type = 'text/html';\r\n            if (isIE) element.appendChild(obj);\r\n            obj.data = 'about:blank';\r\n            if (!isIE) element.appendChild(obj);\r\n        }\r\n    }\r\n\r\n    element.__resizeListeners__.push(listener);\r\n}\r\n\r\nexport function removeResizeListener(element, listener): void {\r\n    if (listener) element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(listener), 1);\r\n    if (!element.__resizeListeners__.length) {\r\n        if (attachEvent) element.detachEvent('onresize', resizeListener);\r\n        else {\r\n            element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\r\n            element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\r\n        }\r\n    }\r\n}\r\n","'use strict';\r\n\r\nangular.module('pipMedia', []);\r\n\r\nimport './MediaService';\r\nimport './ResizeFunctions';\r\n\r\nexport * from './MediaService';\r\nexport * from './ResizeFunctions';"],"preExisting":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvYXV4cGFuZWwvQXV4UGFuZWxEaXJlY3RpdmUudHMiLCJzcmMvYXV4cGFuZWwvQXV4UGFuZWxQYXJ0RGlyZWN0aXZlLnRzIiwic3JjL2F1eHBhbmVsL0F1eFBhbmVsU2VydmljZS50cyIsInNyYy9hdXhwYW5lbC9pbmRleC50cyIsInNyYy9pbmRleC50cyIsInNyYy9sYXlvdXRzL0NhcmREaXJlY3RpdmUudHMiLCJzcmMvbGF5b3V0cy9EaWFsb2dEaXJlY3RpdmUudHMiLCJzcmMvbGF5b3V0cy9Eb2N1bWVudERpcmVjdGl2ZS50cyIsInNyYy9sYXlvdXRzL01haW5EaXJlY3RpdmUudHMiLCJzcmMvbGF5b3V0cy9TaW1wbGVEaXJlY3RpdmUudHMiLCJzcmMvbGF5b3V0cy9UaWxlc0RpcmVjdGl2ZS50cyIsInNyYy9tZWRpYS9NZWRpYVNlcnZpY2UudHMiLCJzcmMvbWVkaWEvUmVzaXplRnVuY3Rpb25zLnRzIiwic3JjL21lZGlhL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsWUFBWSxDQUFDO0FBRWIsc0RBQXdEO0FBR3hELENBQUM7SUFFRDtRQUtJLHFDQUFtQixXQUE2QjtZQUh4QyxlQUFVLEdBQVcsR0FBRyxDQUFDO1lBQ3pCLGNBQVMsR0FBVyxHQUFHLENBQUM7WUFHNUIsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUM7UUFDcEMsQ0FBQztRQUVNLDRDQUFNLEdBQWI7WUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLDhCQUFlLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDeEYsQ0FBQztRQUVNLDRDQUFNLEdBQWI7WUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxL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QixHQUFHLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUNoRixDQUFDO0lBQ0wsQ0FBQztBQUNMLENBQUM7QUFURCxvREFTQzs7QUMzRUQsWUFBWSxDQUFDOzs7O0FBRWIsT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFFL0IsMEJBQXdCO0FBQ3hCLDZCQUEyQjtBQUUzQixvQ0FBK0I7QUFDL0IsdUNBQWtDIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIid1c2Ugc3RyaWN0JztcclxuXHJcbmltcG9ydCB7IE1haW5CcmVha3BvaW50cyB9IGZyb20gJy4uL21lZGlhL01lZGlhU2VydmljZSc7XHJcbmltcG9ydCB7IElBdXhQYW5lbFNlcnZpY2UgfSBmcm9tICcuL0F1eFBhbmVsU2VydmljZSc7XHJcblxyXG4oKCkgPT4ge1xyXG5cclxuY2xhc3MgQXV4UGFuZWxEaXJlY3RpdmVDb250cm9sbGVyIHtcclxuICAgIHByaXZhdGUgX3BpcEF1eFBhbmVsOiBJQXV4UGFuZWxTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBub3JtYWxTaXplOiBudW1iZXIgPSAzMjA7XHJcbiAgICBwcml2YXRlIGxhcmdlU2l6ZTogbnVtYmVyID0gNDgwO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihwaXBBdXhQYW5lbDogSUF1eFBhbmVsU2VydmljZSkge1xyXG4gICAgICAgIHRoaXMuX3BpcEF1eFBhbmVsID0gcGlwQXV4UGFuZWw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGlzR3R4cygpOmJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBOdW1iZXIoJCgnYm9keScpLndpZHRoKCkpID4gTWFpbkJyZWFrcG9pbnRzLnhzICYmIHRoaXMuX3BpcEF1eFBhbmVsLmlzT3BlbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpc0d0bGcoKTpib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gTnVtYmVyKCQoJ2JvZHknKS53aWR0aCgpKSA+IChNYWluQnJlYWtwb2ludHMubGcgKyB0aGlzLmxhcmdlU2l6ZSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIEF1eFBhbmVsRGlyZWN0aXZlKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICByZXN0cmljdDogJ0UnLFxyXG4gICAgICAgIHJlcGxhY2U6IHRydWUsXHJcbiAgICAgICAgY29udHJvbGxlcjogQXV4UGFuZWxEaXJlY3RpdmVDb250cm9sbGVyLFxyXG4gICAgICAgIHRyYW5zY2x1ZGU6IHRydWUsXHJcbiAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxyXG4gICAgICAgIHRlbXBsYXRlOiAnPG1kLXNpZGVuYXYgY2xhc3M9XCJtZC1zaWRlbmF2LXJpZ2h0IG1kLXdoaXRlZnJhbWUtejIgcGlwLWF1eHBhbmVsIGNvbG9yLWNvbnRlbnQtYmdcIiBuZy1jbGFzcz1cIntcXCdwaXAtbGFyZ2VcXCc6IHZtLmlzR3RsZygpfVwiJyArIFxyXG4gICAgICAgICAgICAgICAgICAgICdtZC1jb21wb25lbnQtaWQ9XCJwaXAtYXV4cGFuZWxcIiBtZC1pcy1sb2NrZWQtb3Blbj1cInZtLmlzR3R4cygpXCIgcGlwLWZvY3VzZWQgbmctdHJhbnNjbHVkZT4nICsgXHJcbiAgICAgICAgICAgICAgICAgICAgJzwvbWQtc2lkZW5hdj4nXHJcbiAgICB9XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcEF1eFBhbmVsJylcclxuICAgIC5kaXJlY3RpdmUoJ3BpcEF1eFBhbmVsJywgQXV4UGFuZWxEaXJlY3RpdmUpO1xyXG5cclxufSkoKTsiLCIndXNlIHN0cmljdCc7XHJcblxyXG4vLyBQcmV2ZW50IGp1bmsgZnJvbSBnb2luZyBpbnRvIHR5cGVzY3JpcHQgZGVmaW5pdGlvbnNcclxuKCgpID0+IHtcclxuXHJcbmZ1bmN0aW9uIEF1eFBhbmVsUGFydERpcmVjdGl2ZUNvbnRyb2xsZXIoJHNjb3BlLCAkZWxlbWVudCwgJGF0dHJzLCAkcm9vdFNjb3BlLCBwaXBBdXhQYW5lbCkge1xyXG4gICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgIHZhciBwYXJ0TmFtZSA9ICcnICsgJGF0dHJzLnBpcEF1eFBhbmVsUGFydDtcclxuICAgIHZhciBwYXJ0VmFsdWUgPSBudWxsO1xyXG5cclxuICAgIC8vIEJyZWFrIHBhcnQgYXBhcnRcclxuICAgIHZhciBwb3MgPSBwYXJ0TmFtZS5pbmRleE9mKCc6Jyk7XHJcbiAgICBpZiAocG9zID4gMCkge1xyXG4gICAgICAgIHBhcnRWYWx1ZSA9IHBhcnROYW1lLnN1YnN0cihwb3MgKyAxKTtcclxuICAgICAgICBwYXJ0TmFtZSA9IHBhcnROYW1lLnN1YnN0cigwLCBwb3MpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQXV4UGFuZWxDaGFuZ2VkKG51bGwsIHBpcEF1eFBhbmVsLmNvbmZpZylcclxuICAgICRyb290U2NvcGUuJG9uKCdwaXBBdXhQYW5lbENoYW5nZWQnLCBvbkF1eFBhbmVsQ2hhbmdlZCk7XHJcblxyXG4gICAgZnVuY3Rpb24gb25BdXhQYW5lbENoYW5nZWQoZXZlbnQsIGNvbmZpZykge1xyXG4gICAgICAgIHZhciBwYXJ0cyA9IGNvbmZpZy5wYXJ0cyB8fCB7fTtcclxuICAgICAgICB2YXIgY3VycmVudFBhcnRWYWx1ZSA9IGNvbmZpZ1twYXJ0TmFtZV07XHJcbiAgICAgICAgLy8gU2V0IHZpc2libGUgdmFyaWFibGUgdG8gc3dpdGNoIG5nSWZcclxuXHJcbiAgICAgICAgJHNjb3BlLnZpc2libGUgPSBwYXJ0VmFsdWUgPyBjdXJyZW50UGFydFZhbHVlID09IHBhcnRWYWx1ZSA6IGN1cnJlbnRQYXJ0VmFsdWU7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBBdXhQYW5lbFBhcnREaXJlY3RpdmUobmdJZkRpcmVjdGl2ZSkge1xyXG4gICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgIHZhciBuZ0lmID0gbmdJZkRpcmVjdGl2ZVswXTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHRyYW5zY2x1ZGU6IG5nSWYudHJhbnNjbHVkZSxcclxuICAgICAgICBwcmlvcml0eTogbmdJZi5wcmlvcml0eSxcclxuICAgICAgICB0ZXJtaW5hbDogbmdJZi50ZXJtaW5hbCxcclxuICAgICAgICByZXN0cmljdDogbmdJZi5yZXN0cmljdCxcclxuICAgICAgICBzY29wZTogdHJ1ZSxcclxuICAgICAgICBsaW5rOiBmdW5jdGlvbigkc2NvcGU6IGFueSwgJGVsZW1lbnQsICRhdHRycykge1xyXG4gICAgICAgICAgICAvLyBWaXN1YWxpemUgYmFzZWQgb24gdmlzaWJsZSB2YXJpYWJsZSBpbiBzY29wZVxyXG4gICAgICAgICAgICAkYXR0cnMubmdJZiA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gJHNjb3BlLnZpc2libGUgfTtcclxuICAgICAgICAgICAgbmdJZi5saW5rLmFwcGx5KG5nSWYpO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29udHJvbGxlcjogQXV4UGFuZWxQYXJ0RGlyZWN0aXZlQ29udHJvbGxlclxyXG4gICAgfTtcclxufVxyXG5cclxuYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwQXV4UGFuZWwnKVxyXG4gICAgLmRpcmVjdGl2ZSgncGlwQXV4UGFuZWxQYXJ0JywgQXV4UGFuZWxQYXJ0RGlyZWN0aXZlKTtcclxuXHJcbn0pKCk7IiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuZXhwb3J0IGxldCBBdXhQYW5lbENoYW5nZWRFdmVudCA9ICdwaXBBdXhQYW5lbENoYW5nZWQnO1xyXG5leHBvcnQgbGV0IEF1eFBhbmVsU3RhdGVDaGFuZ2VkRXZlbnQgPSAncGlwQXV4UGFuZWxTdGF0ZUNoYW5nZWQnO1xyXG5leHBvcnQgbGV0IE9wZW5BdXhQYW5lbEV2ZW50ID0gJ3BpcE9wZW5BdXhQYW5lbCc7XHJcbmV4cG9ydCBsZXQgQ2xvc2VBdXhQYW5lbEV2ZW50ID0gJ3BpcENsb3NlQXV4UGFuZWwnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEF1eFBhbmVsQ29uZmlnIHtcclxuICAgIHBhcnRzOiBhbnk7XHJcbiAgICBjbGFzc2VzOiBzdHJpbmdbXTtcclxuICAgIHN0YXRlOiBhbnk7XHJcbiAgICB0eXBlOiBzdHJpbmc7XHJcbn0gXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElBdXhQYW5lbFNlcnZpY2Uge1xyXG4gICAgcmVhZG9ubHkgY29uZmlnOiBBdXhQYW5lbENvbmZpZztcclxuICAgIHJlYWRvbmx5IGNsYXNzZXM6IHN0cmluZ1tdO1xyXG4gICAgcGFydHM6IGFueTtcclxuICAgIHN0YXRlOiBhbnk7ICAgIFxyXG5cclxuICAgIGlzT3BlbigpOiBib29sZWFuO1xyXG4gICAgb3BlbigpOiB2b2lkO1xyXG4gICAgY2xvc2UoKTogdm9pZDtcclxuICAgIHRvZ2dsZSgpOiB2b2lkO1xyXG4gIFxyXG4gICAgYWRkQ2xhc3MoLi4uY2xhc3Nlczogc3RyaW5nW10pOiB2b2lkO1xyXG4gICAgcmVtb3ZlQ2xhc3MoLi4uY2xhc3Nlczogc3RyaW5nW10pOiB2b2lkO1xyXG4gXHJcbiAgICBwYXJ0KHBhcnQ6IHN0cmluZywgdmFsdWU6IGFueSk6IHZvaWQ7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgSUF1eFBhbmVsUHJvdmlkZXIgZXh0ZW5kcyBuZy5JU2VydmljZVByb3ZpZGVyIHtcclxuICAgIGNvbmZpZzogQXV4UGFuZWxDb25maWc7XHJcbiAgICBwYXJ0czogYW55O1xyXG4gICAgdHlwZTogc3RyaW5nO1xyXG4gICAgY2xhc3Nlczogc3RyaW5nW107XHJcblxyXG4gICAgb3BlbigpOiB2b2lkO1xyXG4gICAgY2xvc2UoKTogdm9pZDtcclxuICAgIHRvZ2dsZSgpOiB2b2lkO1xyXG5cclxuICAgIGFkZENsYXNzKC4uLmNsYXNzZXM6IHN0cmluZ1tdKTogdm9pZDtcclxuICAgIHJlbW92ZUNsYXNzKC4uLmNsYXNzZXM6IHN0cmluZ1tdKTogdm9pZDtcclxuXHJcbiAgICBwYXJ0KHBhcnQ6IHN0cmluZywgdmFsdWU6IGFueSk6IHZvaWQ7XHJcbn1cclxuXHJcbmNsYXNzIEF1eFBhbmVsU2VydmljZSBpbXBsZW1lbnRzIElBdXhQYW5lbFNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBBdXhQYW5lbENvbmZpZztcclxuICAgIHByaXZhdGUgX3N0YXRlOiBhbnk7XHJcbiAgICBwcml2YXRlIF9yb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBfc2lkZW5hdjogbmcubWF0ZXJpYWwuSVNpZGVuYXZTZXJ2aWNlO1xyXG4gICAgcHJpdmF0ZSBpZCA9ICdwaXAtYXV4cGFuZWwnO1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3Rvcihjb25maWc6IEF1eFBhbmVsQ29uZmlnLCAkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSwgJG1kU2lkZW5hdjogbmcubWF0ZXJpYWwuSVNpZGVuYXZTZXJ2aWNlKSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnID0gY29uZmlnO1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZSA9ICRyb290U2NvcGU7XHJcbiAgICAgICAgdGhpcy5fc2lkZW5hdiA9ICRtZFNpZGVuYXY7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBjb25maWcoKTogQXV4UGFuZWxDb25maWcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWc7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBjbGFzc2VzKCk6IHN0cmluZ1tdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmNsYXNzZXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBwYXJ0cygpOiBhbnkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcucGFydHM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBwYXJ0cyh2YWx1ZTogYW55KSB7XHJcbiAgICAgICAgdGhpcy5fY29uZmlnLnBhcnRzID0gdmFsdWUgfHwge307XHJcbiAgICAgICAgdGhpcy5zZW5kQ29uZmlnRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0IHN0YXRlKCk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N0YXRlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgc3RhdGUodmFsdWU6IGFueSkge1xyXG4gICAgICAgIHRoaXMuX3N0YXRlID0gdmFsdWUgfHwge307XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRicm9hZGNhc3QoQXV4UGFuZWxTdGF0ZUNoYW5nZWRFdmVudCwgdmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpc09wZW4oKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZGVuYXYodGhpcy5pZCkuaXNPcGVuKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9wZW4oKSB7XHJcbiAgICAgICAgdGhpcy5fc2lkZW5hdih0aGlzLmlkKS5vcGVuKCk7XHJcbiAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgcHVibGljIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX3NpZGVuYXYodGhpcy5pZCkuY2xvc2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdG9nZ2xlKCkge1xyXG4gICAgICAgIHRoaXMuX3NpZGVuYXYodGhpcy5pZCkudG9nZ2xlKCk7XHJcbiAgICB9XHJcbiAgXHJcbiAgICBwdWJsaWMgYWRkQ2xhc3MoLi4uY2xhc3Nlczogc3RyaW5nW10pOiB2b2lkIHtcclxuICAgICAgICBfLmVhY2goY2xhc3NlcywgKGMpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fY29uZmlnLmNsYXNzZXMucHVzaChjKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLnNlbmRDb25maWdFdmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyByZW1vdmVDbGFzcyguLi5jbGFzc2VzOiBzdHJpbmdbXSk6IHZvaWQge1xyXG4gICAgICAgIF8uZWFjaChjbGFzc2VzLCAoYykgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9jb25maWcuY2xhc3NlcyA9IF8ucmVqZWN0KHRoaXMuX2NvbmZpZy5jbGFzc2VzLCAoY2MpID0+IGNjID09IGMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcbiBcclxuICAgIHB1YmxpYyBwYXJ0KHBhcnQ6IHN0cmluZywgdmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wYXJ0c1twYXJ0XSA9IHZhbHVlO1xyXG4gICAgICAgIHRoaXMuc2VuZENvbmZpZ0V2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzZW5kQ29uZmlnRXZlbnQoKSB7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRlbWl0KEF1eFBhbmVsQ2hhbmdlZEV2ZW50LCB0aGlzLl9jb25maWcpO1xyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBBdXhQYW5lbFByb3ZpZGVyIGltcGxlbWVudHMgSUF1eFBhbmVsUHJvdmlkZXIge1xyXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBBdXhQYW5lbENvbmZpZyA9IHtcclxuICAgICAgICBwYXJ0czoge30sXHJcbiAgICAgICAgY2xhc3NlczogW10sXHJcbiAgICAgICAgdHlwZTogJ3N0aWNreScsXHJcbiAgICAgICAgc3RhdGU6IG51bGxcclxuICAgIH07XHJcblxyXG4gICAgcHJpdmF0ZSBfc2VydmljZTogQXV4UGFuZWxTZXJ2aWNlO1xyXG5cclxuICAgIHB1YmxpYyBnZXQgY29uZmlnKCk6IEF1eFBhbmVsQ29uZmlnIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgY29uZmlnKHZhbHVlOiBBdXhQYW5lbENvbmZpZykge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IHZhbHVlIHx8IG5ldyBBdXhQYW5lbENvbmZpZygpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgcGFydHMoKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLnBhcnRzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgcGFydHModmFsdWU6IGFueSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wYXJ0cyA9IHZhbHVlIHx8IHt9O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgdHlwZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jb25maWcudHlwZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IHR5cGUodmFsdWU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy50eXBlID0gdmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBjbGFzc2VzKCk6IHN0cmluZ1tdIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uZmlnLmNsYXNzZXM7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldCBjbGFzc2VzKHZhbHVlOiBzdHJpbmdbXSkge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5jbGFzc2VzID0gdmFsdWUgfHwgW107XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFkZENsYXNzKC4uLmNsYXNzZXM6IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICAgICAgXy5lYWNoKGNsYXNzZXMsIChjKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5jbGFzc2VzLnB1c2goYyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZUNsYXNzKC4uLmNsYXNzZXM6IHN0cmluZ1tdKTogdm9pZCB7XHJcbiAgICAgICAgXy5lYWNoKGNsYXNzZXMsIChjKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbmZpZy5jbGFzc2VzID0gXy5yZWplY3QodGhpcy5fY29uZmlnLmNsYXNzZXMsIChjYykgPT4gY2MgPT0gYyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiBcclxuICAgIHB1YmxpYyBwYXJ0KHBhcnQ6IHN0cmluZywgdmFsdWU6IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2NvbmZpZy5wYXJ0c1twYXJ0XSA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvcGVuKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX3NlcnZpY2Uub3BlbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBjbG9zZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9zZXJ2aWNlLmNsb3NlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHRvZ2dsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9zZXJ2aWNlLnRvZ2dsZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyAkZ2V0KCRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlLCAkbWRTaWRlbmF2OiBuZy5tYXRlcmlhbC5JU2lkZW5hdlNlcnZpY2UpIHtcclxuICAgICAgICBcIm5nSW5qZWN0XCI7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9zZXJ2aWNlID09IG51bGwpXHJcbiAgICAgICAgICAgIHRoaXMuX3NlcnZpY2UgPSBuZXcgQXV4UGFuZWxTZXJ2aWNlKHRoaXMuX2NvbmZpZywgJHJvb3RTY29wZSwgJG1kU2lkZW5hdik7XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLl9zZXJ2aWNlO1xyXG4gICAgfSAgICAgXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhvb2tBdXhQYW5lbEV2ZW50cygkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSwgcGlwQXV4UGFuZWw6IElBdXhQYW5lbFNlcnZpY2UpIHtcclxuICAgICRyb290U2NvcGUuJG9uKE9wZW5BdXhQYW5lbEV2ZW50LCAoKSA9PiB7IHBpcEF1eFBhbmVsLm9wZW4oKTsgfSk7XHJcbiAgICAkcm9vdFNjb3BlLiRvbihDbG9zZUF1eFBhbmVsRXZlbnQsICgpID0+IHsgcGlwQXV4UGFuZWwuY2xvc2UoKTsgfSk7XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcEF1eFBhbmVsJylcclxuICAgIC5wcm92aWRlcigncGlwQXV4UGFuZWwnLCBBdXhQYW5lbFByb3ZpZGVyKVxyXG4gICAgLnJ1bihob29rQXV4UGFuZWxFdmVudHMpO1xyXG4iLCIndXNlIHN0cmljdCc7XHJcblxyXG5hbmd1bGFyLm1vZHVsZSgncGlwQXV4UGFuZWwnLCBbJ25nTWF0ZXJpYWwnXSk7XHJcblxyXG5pbXBvcnQgJy4vQXV4UGFuZWxTZXJ2aWNlJztcclxuaW1wb3J0ICcuL0F1eFBhbmVsUGFydERpcmVjdGl2ZSc7XHJcbmltcG9ydCAnLi9BdXhQYW5lbERpcmVjdGl2ZSc7XHJcblxyXG5leHBvcnQgKiBmcm9tICcuL0F1eFBhbmVsU2VydmljZSc7IiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuYW5ndWxhci5tb2R1bGUoJ3BpcExheW91dCcsIFsnd3UubWFzb25yeScsICdwaXBNZWRpYScsICdwaXBBdXhQYW5lbCddKTtcclxuXHJcbmltcG9ydCAnLi9tZWRpYS9pbmRleCc7XHJcblxyXG5pbXBvcnQgJy4vbGF5b3V0cy9NYWluRGlyZWN0aXZlJztcclxuaW1wb3J0ICcuL2xheW91dHMvQ2FyZERpcmVjdGl2ZSc7XHJcbmltcG9ydCAnLi9sYXlvdXRzL0RpYWxvZ0RpcmVjdGl2ZSc7XHJcbmltcG9ydCAnLi9sYXlvdXRzL0RvY3VtZW50RGlyZWN0aXZlJztcclxuaW1wb3J0ICcuL2xheW91dHMvU2ltcGxlRGlyZWN0aXZlJztcclxuaW1wb3J0ICcuL2xheW91dHMvVGlsZXNEaXJlY3RpdmUnO1xyXG5pbXBvcnQgJy4vYXV4cGFuZWwvaW5kZXgnO1xyXG5cclxuZXhwb3J0ICogZnJvbSAnLi9tZWRpYS9pbmRleCc7XHJcbiIsIid1c2Ugc3RyaWN0JztcclxuXHJcbmltcG9ydCB7IE1haW5SZXNpemVkRXZlbnQsIExheW91dFJlc2l6ZWRFdmVudCwgTWFpbkJyZWFrcG9pbnRTdGF0dXNlcyB9IGZyb20gJy4uL21lZGlhL01lZGlhU2VydmljZSc7XHJcblxyXG4vLyBBdm9pZCBkZWZhdWx0IGV4cG9ydFxyXG4oKCkgPT4ge1xyXG5cclxuY2xhc3MgQ2FyZERpcmVjdGl2ZUxpbmsge1xyXG4gICAgcHJpdmF0ZSBfZWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSBfYXR0cnM6IGFueTtcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCRyb290U2NvcGU6IG5nLklSb290U2NvcGVTZXJ2aWNlLCAkZWxlbWVudDogYW55LCAkYXR0cnM6IGFueSkge1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSAkZWxlbWVudDtcclxuICAgICAgICB0aGlzLl9yb290U2NvcGUgPSAkcm9vdFNjb3BlO1xyXG4gICAgICAgIHRoaXMuX2F0dHJzID0gJGF0dHJzO1xyXG5cclxuICAgICAgICAvLyBBZGQgY2xhc3MgdG8gdGhlIGVsZW1lbnRcclxuICAgICAgICAkZWxlbWVudC5hZGRDbGFzcygncGlwLWNhcmQnKTtcclxuXHJcbiAgICAgICAgbGV0IGxpc3RlbmVyID0gKCkgPT4geyB0aGlzLnJlc2l6ZSgpOyB9XHJcblxyXG4gICAgICAgIC8vIFJlc2l6ZSBldmVyeSB0aW1lIHdpbmRvdyBpcyByZXNpemVkXHJcbiAgICAgICAgJHJvb3RTY29wZS4kb24oTWFpblJlc2l6ZWRFdmVudCwgbGlzdGVuZXIpO1xyXG5cclxuICAgICAgICAvLyBSZXNpemUgcmlnaHQgYXdheSB0byBhdm9pZCBmbGlja2luZ1xyXG4gICAgICAgIHRoaXMucmVzaXplKCk7XHJcblxyXG4gICAgICAgIC8vIFJlc2l6ZSB0aGUgZWxlbWVudCByaWdodCBhd2F5XHJcbiAgICAgICAgc2V0VGltZW91dChsaXN0ZW5lciwgMTAwKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHJlc2l6ZSgpIHtcclxuICAgICAgICB2YXJcclxuICAgICAgICAgICAgJG1haW5Cb2R5ID0gJCgnLnBpcC1tYWluLWJvZHknKSxcclxuICAgICAgICAgICAgY2FyZENvbnRhaW5lciA9ICQoJy5waXAtY2FyZC1jb250YWluZXInKSxcclxuICAgICAgICAgICAgd2luZG93V2lkdGggPSAkKCdwaXAtbWFpbicpLndpZHRoKCksXHJcbiAgICAgICAgICAgIG1heFdpZHRoID0gJG1haW5Cb2R5LndpZHRoKCksXHJcbiAgICAgICAgICAgIG1heEhlaWdodCA9ICRtYWluQm9keS5oZWlnaHQoKSxcclxuICAgICAgICAgICAgbWluV2lkdGggPSB0aGlzLl9hdHRycy5taW5XaWR0aCA/IE1hdGguZmxvb3IodGhpcy5fYXR0cnMubWluV2lkdGgpIDogbnVsbCxcclxuICAgICAgICAgICAgbWluSGVpZ2h0ID0gdGhpcy5fYXR0cnMubWluSGVpZ2h0ID8gTWF0aC5mbG9vcih0aGlzLl9hdHRycy5taW5IZWlnaHQpIDogbnVsbCxcclxuICAgICAgICAgICAgd2lkdGggPSB0aGlzLl9hdHRycy53aWR0aCA/IE1hdGguZmxvb3IodGhpcy5fYXR0cnMud2lkdGgpIDogbnVsbCxcclxuICAgICAgICAgICAgaGVpZ2h0ID0gdGhpcy5fYXR0cnMuaGVpZ2h0ID8gTWF0aC5mbG9vcih0aGlzLl9hdHRycy5oZWlnaHQpIDogbnVsbCxcclxuICAgICAgICAgICAgbGVmdCwgdG9wO1xyXG5cclxuICAgICAgICAvLyBGdWxsLXNjcmVlbiBvbiBwaG9uZVxyXG4gICAgICAgIGlmIChNYWluQnJlYWtwb2ludFN0YXR1c2VzLnhzKSB7XHJcbiAgICAgICAgICAgIG1pbldpZHRoID0gbnVsbDtcclxuICAgICAgICAgICAgbWluSGVpZ2h0ID0gbnVsbDtcclxuICAgICAgICAgICAgd2lkdGggPSBudWxsO1xyXG4gICAgICAgICAgICBoZWlnaHQgPSBudWxsO1xyXG4gICAgICAgICAgICBtYXhXaWR0aCA9IG51bGw7XHJcbiAgICAgICAgICAgIG1heEhlaWdodCA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIENhcmQgdmlldyB3aXRoIGFkanVzdGFibGUgbWFyZ2lucyBvbiB0YWJsZXQgYW5kIGRlc2t0b3BcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgLy8gU2V0IG1hcmdpbiBhbmQgbWF4aW11bSBkaW1lbnNpb25zXHJcbiAgICAgICAgICAgIHZhciBzcGFjZSA9IE1haW5CcmVha3BvaW50U3RhdHVzZXNbJ2d0LW1kJ10gPyAyNCA6IDE2O1xyXG4gICAgICAgICAgICBtYXhXaWR0aCAtPSBzcGFjZSAqIDI7XHJcbiAgICAgICAgICAgIG1heEhlaWdodCAtPSBzcGFjZSAqIDI7XHJcblxyXG4gICAgICAgICAgICAvLyBTZXQgbWluaW11bSBkaW1lbnNpb25zXHJcbiAgICAgICAgICAgIG1pbldpZHRoID0gbWluV2lkdGggPyBNYXRoLm1pbihtaW5XaWR0aCwgbWF4V2lkdGgpIDogbnVsbDtcclxuICAgICAgICAgICAgbWluSGVpZ2h0ID0gbWluSGVpZ2h0ID8gTWF0aC5taW4obWluSGVpZ2h0LCBtYXhIZWlnaHQpIDogbnVsbDtcclxuXHJcbiAgICAgICAgICAgIC8vIFNldCByZWd1bGFyIGRpbWVuc2lvbnNcclxuICAgICAgICAgICAgd2lkdGggPSB3aWR0aCA/IE1hdGgubWluKHdpZHRoLCBtYXhXaWR0aCkgOiBudWxsO1xyXG4gICAgICAgICAgICBoZWlnaHQgPSBoZWlnaHQgPyBNYXRoLm1pbihoZWlnaHQsIG1heEhlaWdodCkgOiBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gU2V0IGRpbWVuc2lvbnNcclxuICAgICAgICB0aGlzLl9lbGVtZW50LmNzcygnbWF4LXdpZHRoJywgbWF4V2lkdGggPyBtYXhXaWR0aCArICdweCcgOiAnJyk7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5jc3MoJ21pbi13aWR0aCcsIG1pbldpZHRoID8gbWluV2lkdGggKyAncHgnIDogJycpO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQuY3NzKCd3aWR0aCcsIHdpZHRoID8gd2lkdGggKyAncHgnIDogJycpO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQuY3NzKCdoZWlnaHQnLCBoZWlnaHQgPyBoZWlnaHQgKyAncHgnIDogJycpO1xyXG5cclxuICAgICAgICBpZiAoIWNhcmRDb250YWluZXIuaGFzQ2xhc3MoJ3BpcC1vdXRlci1zY3JvbGwnKSkge1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LmNzcygnbWF4LWhlaWdodCcsIG1heEhlaWdodCA/IG1heEhlaWdodCArICdweCcgOiAnJyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQuY3NzKCdtaW4taGVpZ2h0JywgbWluSGVpZ2h0ID8gbWluSGVpZ2h0ICsgJ3B4JyA6ICcnKTtcclxuICAgICAgICAgICAgdmFyXHJcbiAgICAgICAgICAgICAgICAkaGVhZGVyID0gdGhpcy5fZWxlbWVudC5maW5kKCcucGlwLWhlYWRlcjp2aXNpYmxlJyksXHJcbiAgICAgICAgICAgICAgICAkZm9vdGVyID0gdGhpcy5fZWxlbWVudC5maW5kKCcucGlwLWZvb3Rlcjp2aXNpYmxlJyksXHJcbiAgICAgICAgICAgICAgICAkYm9keSA9IHRoaXMuX2VsZW1lbnQuZmluZCgnLnBpcC1ib2R5JyksXHJcbiAgICAgICAgICAgICAgICBtYXhCb2R5SGVpZ2h0ID0gbWF4SGVpZ2h0IHx8ICRtYWluQm9keS5oZWlnaHQoKTtcclxuXHJcbiAgICAgICAgICAgIGlmICgkaGVhZGVyLmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgICAgICBtYXhCb2R5SGVpZ2h0IC09ICRoZWFkZXIub3V0ZXJIZWlnaHQodHJ1ZSk7XHJcbiAgICAgICAgICAgIGlmICgkZm9vdGVyLmxlbmd0aCA+IDApXHJcbiAgICAgICAgICAgICAgICBtYXhCb2R5SGVpZ2h0IC09ICRmb290ZXIub3V0ZXJIZWlnaHQodHJ1ZSk7XHJcblxyXG4gICAgICAgICAgICAkYm9keS5jc3MoJ21heC1oZWlnaHQnLCBtYXhCb2R5SGVpZ2h0ICsgJ3B4Jyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY2FyZENvbnRhaW5lci5hZGRDbGFzcygncGlwLXNjcm9sbCcpO1xyXG4gICAgICAgICAgICBpZiAoTWFpbkJyZWFrcG9pbnRTdGF0dXNlcy54cykge1xyXG4gICAgICAgICAgICAgICAgbGVmdCA9IDA7XHJcbiAgICAgICAgICAgICAgICB0b3AgPSAwO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbGVmdCA9IGNhcmRDb250YWluZXIud2lkdGgoKSAvIDIgLSB0aGlzLl9lbGVtZW50LndpZHRoKCkgLyAyIC0gMTY7XHJcbiAgICAgICAgICAgICAgICB0b3AgPSBNYXRoLm1heChjYXJkQ29udGFpbmVyLmhlaWdodCgpIC8gMiAtIHRoaXMuX2VsZW1lbnQuaGVpZ2h0KCkgLyAyIC0gMTYsIDApO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LmNzcygnbGVmdCcsIGxlZnQpO1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LmNzcygndG9wJywgdG9wKTtcclxuXHJcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4geyB0aGlzLl9lbGVtZW50LmNzcygnZGlzcGxheScsICdmbGV4Jyk7IH0sIDEwMCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBOb3RpZnkgY2hpbGQgY29udHJvbHMgdGhhdCBsYXlvdXQgd2FzIHJlc2l6ZWRcclxuICAgICAgICB0aGlzLl9yb290U2NvcGUuJGVtaXQoJ3BpcExheW91dFJlc2l6ZWQnKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gY2FyZERpcmVjdGl2ZSgkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSkge1xyXG4gICAgXCJuZ0luamVjdFwiO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVzdHJpY3Q6ICdFQScsXHJcbiAgICAgICAgbGluazogKCRzY29wZSwgJGVsZW1lbnQsICRhdHRycykgPT4ge1xyXG4gICAgICAgICAgICBuZXcgQ2FyZERpcmVjdGl2ZUxpbmsoJHJvb3RTY29wZSwgJGVsZW1lbnQsICRhdHRycyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuYW5ndWxhclxyXG4gICAgLm1vZHVsZSgncGlwTGF5b3V0JylcclxuICAgIC5kaXJlY3RpdmUoJ3BpcENhcmQnLCBjYXJkRGlyZWN0aXZlKTtcclxuXHJcbn0pKCk7IiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuLy8gQXZvaWQgZGVmYXVsdCBleHBvcnRcclxuKCgpID0+IHtcclxuXHJcbmZ1bmN0aW9uIGRpYWxvZ0RpcmVjdGl2ZSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVzdHJpY3Q6ICdFQScsXHJcbiAgICAgICAgbGluazogKCRzY29wZSwgJGVsZW1lbnQsICRhdHRycykgPT4ge1xyXG4gICAgICAgICAgICAkZWxlbWVudC5hZGRDbGFzcygncGlwLWRpYWxvZycpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcExheW91dCcpXHJcbiAgICAuZGlyZWN0aXZlKCdwaXBEaWFsb2cnLCBkaWFsb2dEaXJlY3RpdmUpO1xyXG5cclxufSkoKTsiLCIndXNlIHN0cmljdCc7XHJcblxyXG4vLyBBdm9pZCBkZWZhdWx0IGV4cG9ydFxyXG4oKCkgPT4ge1xyXG5cclxuZnVuY3Rpb24gZG9jdW1lbnREaXJlY3RpdmUoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlc3RyaWN0OiAnRUEnLFxyXG4gICAgICAgIGxpbms6ICgkc2NvcGUsICRlbGVtZW50LCAkYXR0cnMpID0+IHtcclxuICAgICAgICAgICAgJGVsZW1lbnQuYWRkQ2xhc3MoJ3BpcC1kb2N1bWVudCcpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcExheW91dCcpXHJcbiAgICAuZGlyZWN0aXZlKCdwaXBEb2N1bWVudCcsIGRvY3VtZW50RGlyZWN0aXZlKTtcclxuXHJcbn0pKCk7IiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaW1wb3J0IHsgYWRkUmVzaXplTGlzdGVuZXIsIHJlbW92ZVJlc2l6ZUxpc3RlbmVyIH0gZnJvbSAnLi4vbWVkaWEvUmVzaXplRnVuY3Rpb25zJztcclxuaW1wb3J0IHsgTWFpbkJyZWFrcG9pbnRzLCBNYWluQnJlYWtwb2ludFN0YXR1c2VzLCBNYWluUmVzaXplZEV2ZW50IH0gZnJvbSAnLi4vbWVkaWEvTWVkaWFTZXJ2aWNlJzsgXHJcblxyXG4vLyBBdm9pZCBkZWZhdWx0IGV4cG9ydFxyXG4oKCkgPT4ge1xyXG5cclxuY2xhc3MgTWFpbkRpcmVjdGl2ZUNvbnRyb2xsZXIge1xyXG4gICAgcHJpdmF0ZSBfZWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSBfcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZTtcclxuICAgIHByaXZhdGUgX3RpbWVvdXQ6IG5nLklUaW1lb3V0U2VydmljZTtcclxuICAgIHByaXZhdGUgX2NvbnRhaW5lcjogYW55O1xyXG5cclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihcclxuICAgICAgICAkc2NvcGU6IG5nLklTY29wZSwgXHJcbiAgICAgICAgJGVsZW1lbnQ6IGFueSwgXHJcbiAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXHJcbiAgICAgICAgJHRpbWVvdXQ6IG5nLklUaW1lb3V0U2VydmljZSxcclxuICAgICAgICAkYXR0cnM6IGFueVxyXG4gICAgKSB7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9ICRlbGVtZW50OyAgICAgICAgXHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuICAgICAgICB0aGlzLl90aW1lb3V0ID0gJHRpbWVvdXQ7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyID0gJGF0dHJzLnBpcENvbnRhaW5lciA/ICQoJGF0dHJzLnBpcENvbnRhaW5lcikgOiAkZWxlbWVudDtcclxuXHJcbiAgICAgICAgLy8gQWRkIENTUyBjbGFzc1xyXG4gICAgICAgICRlbGVtZW50LmFkZENsYXNzKCdwaXAtbWFpbicpO1xyXG5cclxuICAgICAgICAvLyBBZGQgcmVzaXplIGxpc3RlbmVyXHJcbiAgICAgICAgbGV0IGxpc3RlbmVyID0gKCkgPT4geyB0aGlzLnJlc2l6ZSgpOyB9O1xyXG4gICAgICAgIGFkZFJlc2l6ZUxpc3RlbmVyKHRoaXMuX2NvbnRhaW5lclswXSwgbGlzdGVuZXIpO1xyXG5cclxuICAgICAgICAvLyBVbmJpbmQgd2hlbiBzY29wZSBpcyByZW1vdmVkXHJcbiAgICAgICAgJHNjb3BlLiRvbignJGRlc3Ryb3knLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHJlbW92ZVJlc2l6ZUxpc3RlbmVyKHRoaXMuX2NvbnRhaW5lclswXSwgbGlzdGVuZXIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBQZXJmb3JtIGluaXRpYWwgY2FsY3VsYXRpb25zXHJcbiAgICAgICAgdGhpcy51cGRhdGVCcmVha3BvaW50U3RhdHVzZXMoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHVwZGF0ZUJyZWFrcG9pbnRTdGF0dXNlcygpIHtcclxuICAgICAgICBsZXQgd2lkdGggPSB0aGlzLl9jb250YWluZXIuaW5uZXJXaWR0aCgpO1xyXG4gICAgICAgIGxldCBib2R5ID0gJCgnYm9keScpO1xyXG5cclxuICAgICAgICBNYWluQnJlYWtwb2ludFN0YXR1c2VzLnVwZGF0ZShNYWluQnJlYWtwb2ludHMsIHdpZHRoKTtcclxuXHJcbiAgICAgICAgJC5lYWNoKE1haW5CcmVha3BvaW50U3RhdHVzZXMsIChicmVha3BvaW50LCBzdGF0dXMpID0+IHtcclxuICAgICAgICAgICAgaWYgKF8uaXNCb29sZWFuKHN0YXR1cykpXHJcbiAgICAgICAgICAgICAgICBib2R5W3N0YXR1cyA/ICdhZGRDbGFzcyc6ICdyZW1vdmVDbGFzcyddKCdwaXAtJyArIGJyZWFrcG9pbnQpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLl90aW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fcm9vdFNjb3BlLiRhcHBseSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBwcml2YXRlIHJlc2l6ZSgpIHtcclxuICAgICAgICB0aGlzLnVwZGF0ZUJyZWFrcG9pbnRTdGF0dXNlcygpO1xyXG4gICAgICAgIHRoaXMuX3Jvb3RTY29wZS4kZW1pdChNYWluUmVzaXplZEV2ZW50LCBNYWluQnJlYWtwb2ludFN0YXR1c2VzKTtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgTWFpbkJvZHlEaXJlY3RpdmVMaW5rIHtcclxuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcihcclxuICAgICAgICAkc2NvcGU6IG5nLklTY29wZSwgXHJcbiAgICAgICAgJGVsZW1lbnQ6IGFueVxyXG4gICAgKSB7XHJcbiAgICAgICAgLy8gQWRkIENTUyBjbGFzc1xyXG4gICAgICAgICRlbGVtZW50LmFkZENsYXNzKCdwaXAtbWFpbi1ib2R5Jyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1haW5EaXJlY3RpdmUoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlc3RyaWN0OiAnRUEnLFxyXG4gICAgICAgIGNvbnRyb2xsZXI6IE1haW5EaXJlY3RpdmVDb250cm9sbGVyLFxyXG4gICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyBcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gbWFpbkJvZHlEaXJlY3RpdmUoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlc3RyaWN0OiAnRUEnLFxyXG4gICAgICAgIGxpbms6IE1haW5Cb2R5RGlyZWN0aXZlTGlua1xyXG4gICAgfVxyXG59XHJcblxyXG5hbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBMYXlvdXQnKVxyXG4gICAgLmRpcmVjdGl2ZSgncGlwTWFpbicsIG1haW5EaXJlY3RpdmUpXHJcbiAgICAuZGlyZWN0aXZlKCdwaXBNYWluQm9keScsIG1haW5Cb2R5RGlyZWN0aXZlKTtcclxuXHJcbn0pKCk7IiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuLy8gQXZvaWQgZGVmYXVsdCBleHBvcnRcclxuKCgpID0+IHtcclxuXHJcbmZ1bmN0aW9uIHNpbXBsZURpcmVjdGl2ZSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgcmVzdHJpY3Q6ICdFQScsXHJcbiAgICAgICAgbGluazogKCRzY29wZSwgJGVsZW1lbnQsICRhdHRycykgPT4ge1xyXG4gICAgICAgICAgICAkZWxlbWVudC5hZGRDbGFzcygncGlwLXNpbXBsZScpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcExheW91dCcpXHJcbiAgICAuZGlyZWN0aXZlKCdwaXBTaW1wbGUnLCBzaW1wbGVEaXJlY3RpdmUpO1xyXG5cclxufSkoKTsiLCIndXNlIHN0cmljdCc7XHJcblxyXG5pbXBvcnQgeyBhZGRSZXNpemVMaXN0ZW5lciwgcmVtb3ZlUmVzaXplTGlzdGVuZXIgfSBmcm9tICcuLi9tZWRpYS9SZXNpemVGdW5jdGlvbnMnO1xyXG5pbXBvcnQgeyBNYWluUmVzaXplZEV2ZW50LCBMYXlvdXRSZXNpemVkRXZlbnQsIE1haW5CcmVha3BvaW50cywgTWFpbkJyZWFrcG9pbnRTdGF0dXNlcyB9IGZyb20gJy4uL21lZGlhL01lZGlhU2VydmljZSc7XHJcblxyXG5kZWNsYXJlIHZhciBNYXNvbnJ5OiBhbnk7XHJcblxyXG5jbGFzcyBUaWxlc0RpcmVjdGl2ZUxpbmsge1xyXG4gICAgcHJpdmF0ZSBfZWxlbWVudDogYW55O1xyXG4gICAgcHJpdmF0ZSBfYXR0cnM6IGFueTtcclxuICAgIHByaXZhdGUgX3Jvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2U7XHJcbiAgICBwcml2YXRlIF9jb2x1bW5XaWR0aDogbnVtYmVyO1xyXG4gICAgcHJpdmF0ZSBfY29udGFpbmVyOiBhbnk7XHJcbiAgICBwcml2YXRlIF9wcmV2Q29udGFpbmVyV2lkdGg6IG51bWJlcjtcclxuICAgIHByaXZhdGUgX21hc29ucnk6IGFueTtcclxuICAgIHByaXZhdGUgX3NpemVyOiBhbnk7XHJcblxyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCRzY29wZTogbmcuSVNjb3BlLCAkZWxlbWVudDogYW55LCAkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSwgJGF0dHJzOiBhbnkpIHtcclxuICAgICAgICB0aGlzLl9lbGVtZW50ID0gJGVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5fcm9vdFNjb3BlID0gJHJvb3RTY29wZTtcclxuICAgICAgICB0aGlzLl9hdHRycyA9ICRhdHRycztcclxuXHJcbiAgICAgICAgdGhpcy5fY29sdW1uV2lkdGggPSAkYXR0cnMuY29sdW1uV2lkdGggPyBNYXRoLmZsb29yKCRhdHRycy5jb2x1bW5XaWR0aCkgOiA0NDAsXHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyID0gJGVsZW1lbnQuY2hpbGRyZW4oJy5waXAtdGlsZXMtY29udGFpbmVyJyksXHJcbiAgICAgICAgdGhpcy5fcHJldkNvbnRhaW5lcldpZHRoID0gbnVsbCxcclxuICAgICAgICB0aGlzLl9tYXNvbnJ5ID0gTWFzb25yeS5kYXRhKHRoaXMuX2NvbnRhaW5lclswXSk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gQWRkIGNsYXNzIHRvIHRoZSBlbGVtZW50XHJcbiAgICAgICAgJGVsZW1lbnQuYWRkQ2xhc3MoJ3BpcC10aWxlcycpO1xyXG5cclxuICAgICAgICAvLyBBZGQgcmVzaXplIGxpc3RlbmVyXHJcbiAgICAgICAgbGV0IGxpc3RlbmVyID0gKCkgPT4geyB0aGlzLnJlc2l6ZShmYWxzZSk7IH07XHJcbiAgICAgICAgYWRkUmVzaXplTGlzdGVuZXIoJGVsZW1lbnRbMF0sIGxpc3RlbmVyKTtcclxuXHJcbiAgICAgICAgLy8gVW5iaW5kIHdoZW4gc2NvcGUgaXMgcmVtb3ZlZFxyXG4gICAgICAgICRzY29wZS4kb24oJyRkZXN0cm95JywgKCkgPT4ge1xyXG4gICAgICAgICAgICByZW1vdmVSZXNpemVMaXN0ZW5lcigkZWxlbWVudFswXSwgbGlzdGVuZXIpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBJbnNlcnQgc2l6ZXJcclxuICAgICAgICB0aGlzLl9zaXplciA9ICQoJzxkaXYgY2xhc3M9XCJwaXAtdGlsZS1zaXplclwiPjwvZGl2PicpO1xyXG4gICAgICAgIHRoaXMuX3NpemVyLmFwcGVuZFRvKHRoaXMuX2NvbnRhaW5lcik7XHJcblxyXG4gICAgICAgIC8vIFJlc2l6ZSBldmVyeSB0aW1lIHdpbmRvdyBpcyByZXNpemVkXHJcbiAgICAgICAgJHJvb3RTY29wZS4kb24oTWFpblJlc2l6ZWRFdmVudCwgKCkgPT4geyB0aGlzLnJlc2l6ZShmYWxzZSk7IH0pO1xyXG5cclxuICAgICAgICAvLyBSZXNpemUgdGhlIGVsZW1lbnQgcmlnaHQgYXdheVxyXG4gICAgICAgIHRoaXMucmVzaXplKHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgcmVzaXplKGZvcmNlOiBib29sZWFuKSB7XHJcbiAgICAgICAgbGV0IHdpZHRoID0gdGhpcy5fZWxlbWVudC5wYXJlbnQoKS53aWR0aCgpO1xyXG4gICAgICAgIGxldCBjb250YWluZXJXaWR0aDtcclxuICAgICAgICBcclxuICAgICAgICBjb25zb2xlLmxvZygpO1xyXG5cclxuICAgICAgICBpZiAoTWFpbkJyZWFrcG9pbnRTdGF0dXNlc1snZ3QteHMnXSAmJiAod2lkdGggLSAzNikgPiB0aGlzLl9jb2x1bW5XaWR0aCkge1xyXG4gICAgICAgICAgICB3aWR0aCA9IHdpZHRoIC0gMjQgKiAyO1xyXG5cclxuICAgICAgICAgICAgbGV0IGNvbHVtbnMgPSBNYXRoLmZsb29yKHdpZHRoIC8gdGhpcy5fY29sdW1uV2lkdGgpO1xyXG4gICAgICAgICAgICBjb250YWluZXJXaWR0aCA9ICh0aGlzLl9jb2x1bW5XaWR0aCArIDE2KSAqIGNvbHVtbnMgLSAxNjtcclxuXHJcbiAgICAgICAgICAgIGlmIChjb250YWluZXJXaWR0aCA+IHdpZHRoKSB7XHJcbiAgICAgICAgICAgICAgICBjb2x1bW5zLS07XHJcbiAgICAgICAgICAgICAgICBjb250YWluZXJXaWR0aCA9ICh0aGlzLl9jb2x1bW5XaWR0aCArIDE2KSAqIGNvbHVtbnMgLSAxNjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKGNvbHVtbnMgPCAxKSB7XHJcbiAgICAgICAgICAgICAgICBjb250YWluZXJXaWR0aCA9IHdpZHRoO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc2l6ZXIuY3NzKCd3aWR0aCcsIGNvbnRhaW5lcldpZHRoICsgJ3B4Jyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zaXplci5jc3MoJ3dpZHRoJywgdGhpcy5fY29sdW1uV2lkdGggKyAncHgnKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gKzEwIHRvIGF2b2lkIHByZWNpc2lvbiByZWxhdGVkIGVycm9yXHJcbiAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5jc3MoJ3dpZHRoJywgKGNvbnRhaW5lcldpZHRoICsgMTApICsgJ3B4Jyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5yZW1vdmVDbGFzcygncGlwLW1vYmlsZScpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHdpZHRoID0gd2lkdGggLSAxNiAqIDI7XHJcbiAgICAgICAgICAgIGNvbnRhaW5lcldpZHRoID0gd2lkdGg7XHJcblxyXG4gICAgICAgICAgICB0aGlzLl9zaXplci5jc3MoJ3dpZHRoJywgY29udGFpbmVyV2lkdGggKyAncHgnKTtcclxuICAgICAgICAgICAgLy8gKzEwIHRvIGF2b2lkIHByZWNpc2lvbiByZWxhdGVkIGVycm9yXHJcbiAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5jc3MoJ3dpZHRoJywgKGNvbnRhaW5lcldpZHRoICsgMTApICsgJ3B4Jyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvbnRhaW5lci5hZGRDbGFzcygncGlwLW1vYmlsZScpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gTWFudWFsbHkgY2FsbCBsYXlvdXQgb24gdGlsZSBjb250YWluZXJcclxuICAgICAgICBpZiAodGhpcy5fcHJldkNvbnRhaW5lcldpZHRoICE9IGNvbnRhaW5lcldpZHRoIHx8IGZvcmNlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3ByZXZDb250YWluZXJXaWR0aCA9IGNvbnRhaW5lcldpZHRoO1xyXG4gICAgICAgICAgICB0aGlzLl9tYXNvbnJ5LmxheW91dCgpO1xyXG5cclxuICAgICAgICAgICAgLy8gTm90aWZ5IGNoaWxkIGNvbnRyb2xzIHRoYXQgbGF5b3V0IHdhcyByZXNpemVkXHJcbiAgICAgICAgICAgIHRoaXMuX3Jvb3RTY29wZS4kZW1pdChMYXlvdXRSZXNpemVkRXZlbnQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gdGlsZXNEaXJlY3RpdmUoJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UpIHtcclxuICAgIFwibmdJbmplY3RcIjtcclxuXHJcbiAgICAvLyBDb252ZXJ0cyB2YWx1ZSBpbnRvIGJvb2xlYW5cclxuICAgIGZ1bmN0aW9uIGNvbnZlcnRUb0Jvb2xlYW4odmFsdWUpIHtcclxuICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIGlmICghdmFsdWUpIHJldHVybiBmYWxzZTtcclxuICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKTtcclxuICAgICAgICByZXR1cm4gdmFsdWUgPT0gJzEnIHx8IHZhbHVlID09ICd0cnVlJztcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHJlc3RyaWN0OiAnRUEnLFxyXG4gICAgICAgIHNjb3BlOiBmYWxzZSxcclxuICAgICAgICB0cmFuc2NsdWRlOiB0cnVlLFxyXG4gICAgICAgIHRlbXBsYXRlOlxyXG4gICAgICAgICAgICAoJGVsZW1lbnQ6IGFueSwgJGF0dHJzOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChjb252ZXJ0VG9Cb29sZWFuKCRhdHRycy5waXBJbmZpbml0ZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gU3RyaW5nKClcclxuICAgICAgICAgICAgICAgICAgICArICc8ZGl2IG1hc29ucnkgY2xhc3M9XCJwaXAtdGlsZXMtY29udGFpbmVyXCIgbG9hZC1pbWFnZXM9XCJmYWxzZVwiIHByZXNlcnZlLW9yZGVyICAnXHJcbiAgICAgICAgICAgICAgICAgICAgKyAnIG5nLXRyYW5zY2x1ZGUgY29sdW1uLXdpZHRoPVwiLnBpcC10aWxlLXNpemVyXCIgaXRlbS1zZWxlY3Rvcj1cIi5waXAtdGlsZVwiJ1xyXG4gICAgICAgICAgICAgICAgICAgICsgJyBtYXNvbnJ5LW9wdGlvbnM9XCJ0aWxlc09wdGlvbnNcIiAgcGlwLXNjcm9sbC1jb250YWluZXI9XCJcXCcucGlwLXRpbGVzXFwnXCInXHJcbiAgICAgICAgICAgICAgICAgICAgKyAnIHBpcC1pbmZpbml0ZS1zY3JvbGw9XCJyZWFkU2Nyb2xsKClcIiA+J1xyXG4gICAgICAgICAgICAgICAgICAgICsgJzwvZGl2Pic7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBTdHJpbmcoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICArICc8ZGl2IG1hc29ucnkgY2xhc3M9XCJwaXAtdGlsZXMtY29udGFpbmVyXCIgbG9hZC1pbWFnZXM9XCJmYWxzZVwiIHByZXNlcnZlLW9yZGVyICAnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICsgJyBuZy10cmFuc2NsdWRlIGNvbHVtbi13aWR0aD1cIi5waXAtdGlsZS1zaXplclwiIGl0ZW0tc2VsZWN0b3I9XCIucGlwLXRpbGVcIidcclxuICAgICAgICAgICAgICAgICAgICAgICAgKyAnIG1hc29ucnktb3B0aW9ucz1cInRpbGVzT3B0aW9uc1wiPidcclxuICAgICAgICAgICAgICAgICAgICAgICAgKyAnPC9kaXY+JztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICBjb250cm9sbGVyOiAoJHNjb3BlOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgJHNjb3BlLnRpbGVzT3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgICAgIGd1dHRlcjogOCwvLzE2XHJcbiAgICAgICAgICAgICAgICBpc0ZpdFdpZHRoOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGlzUmVzaXplQm91bmQ6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiAwIC8vICcwLjJzJ1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbGluazogKCRzY29wZSwgJGVsZW1lbnQsICRhdHRycykgPT4ge1xyXG4gICAgICAgICAgICBuZXcgVGlsZXNEaXJlY3RpdmVMaW5rKCRzY29wZSwgJGVsZW1lbnQsICRyb290U2NvcGUsICRhdHRycyk7XHJcbiAgICAgICAgfSBcclxuICAgIH07XHJcbn1cclxuXHJcbmFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ3BpcExheW91dCcpXHJcbiAgICAuZGlyZWN0aXZlKCdwaXBUaWxlcycsIHRpbGVzRGlyZWN0aXZlKTtcclxuIiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1lZGlhQnJlYWtwb2ludHMge1xyXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHhzOiBudW1iZXIsIHNtOiBudW1iZXIsIG1kOiBudW1iZXIsIGxnOiBudW1iZXJcclxuICAgICkge1xyXG4gICAgICAgIHRoaXMueHMgPSB4cztcclxuICAgICAgICB0aGlzLnNtID0gc207XHJcbiAgICAgICAgdGhpcy5tZCA9IG1kO1xyXG4gICAgICAgIHRoaXMubGcgPSBsZztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgeHM6IG51bWJlcjtcclxuICAgIHB1YmxpYyBzbTogbnVtYmVyO1xyXG4gICAgcHVibGljIG1kOiBudW1iZXI7XHJcbiAgICBwdWJsaWMgbGc6IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIE1lZGlhQnJlYWtwb2ludFN0YXR1c2VzIHtcclxuICAgIHB1YmxpYyB3aWR0aDogbnVtYmVyO1xyXG4gICAgcHVibGljICd4cyc6IGJvb2xlYW47XHJcbiAgICBwdWJsaWMgJ2d0LXhzJzogYm9vbGVhbjtcclxuICAgIHB1YmxpYyAnc20nOiBib29sZWFuO1xyXG4gICAgcHVibGljICdndC1zbSc6IGJvb2xlYW47XHJcbiAgICBwdWJsaWMgJ21kJzogYm9vbGVhbjtcclxuICAgIHB1YmxpYyAnZ3QtbWQnOiBib29sZWFuO1xyXG4gICAgcHVibGljICdsZyc6IGJvb2xlYW47XHJcbiAgICBwdWJsaWMgJ2d0LWxnJzogYm9vbGVhbjtcclxuICAgIHB1YmxpYyAneGwnOiBib29sZWFuO1xyXG5cclxuICAgIHB1YmxpYyB1cGRhdGUoYnJlYWtwb2ludHM6IE1lZGlhQnJlYWtwb2ludHMsIHdpZHRoOiBudW1iZXIpIHtcclxuICAgICAgICBpZiAoYnJlYWtwb2ludHMgPT0gbnVsbCkgcmV0dXJuO1xyXG5cclxuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XHJcbiAgICAgICAgdGhpc1sneHMnXSA9IHdpZHRoIDw9IGJyZWFrcG9pbnRzLnhzO1xyXG4gICAgICAgIHRoaXNbJ2d0LXhzJ10gPSB3aWR0aCA+IGJyZWFrcG9pbnRzLnhzO1xyXG4gICAgICAgIHRoaXNbJ3NtJ10gPSB3aWR0aCA+IGJyZWFrcG9pbnRzLnhzICYmIHdpZHRoIDw9IGJyZWFrcG9pbnRzLnNtO1xyXG4gICAgICAgIHRoaXNbJ2d0LXNtJ10gPSB3aWR0aCA+IGJyZWFrcG9pbnRzLnNtO1xyXG4gICAgICAgIHRoaXNbJ21kJ10gPSB3aWR0aCA+IGJyZWFrcG9pbnRzLnNtICYmIHdpZHRoIDw9IGJyZWFrcG9pbnRzLm1kO1xyXG4gICAgICAgIHRoaXNbJ2d0LW1kJ10gPSB3aWR0aCA+IGJyZWFrcG9pbnRzLm1kO1xyXG4gICAgICAgIHRoaXNbJ2xnJ10gPSB3aWR0aCA+IGJyZWFrcG9pbnRzLm1kICYmIHdpZHRoIDw9IGJyZWFrcG9pbnRzLmxnO1xyXG4gICAgICAgIHRoaXNbJ2d0LWxnJ10gPSB3aWR0aCA+IGJyZWFrcG9pbnRzLmxnO1xyXG4gICAgICAgIHRoaXNbJ3hsJ10gPSB0aGlzWydndC1sZyddO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgbGV0IE1haW5SZXNpemVkRXZlbnQ6IHN0cmluZyA9ICdwaXBNYWluUmVzaXplZCc7XHJcbmV4cG9ydCBsZXQgTGF5b3V0UmVzaXplZEV2ZW50OiBzdHJpbmcgPSAncGlwTGF5b3V0UmVzaXplZCc7XHJcblxyXG5leHBvcnQgbGV0IE1haW5CcmVha3BvaW50czogTWVkaWFCcmVha3BvaW50cyA9IG5ldyBNZWRpYUJyZWFrcG9pbnRzKDYzOSwgNzE2LCAxMDI0LCAxNDM5KTtcclxuZXhwb3J0IGxldCBNYWluQnJlYWtwb2ludFN0YXR1c2VzOiBNZWRpYUJyZWFrcG9pbnRTdGF0dXNlcyA9IG5ldyBNZWRpYUJyZWFrcG9pbnRTdGF0dXNlcygpO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJTWVkaWFTZXJ2aWNlIHtcclxuICAgIChicmVha3BvaW50OiBzdHJpbmcpOiBib29sZWFuO1xyXG4gICAgYnJlYWtwb2ludHM6IE1lZGlhQnJlYWtwb2ludHM7XHJcbiAgICB3aWR0aDogbnVtYmVyO1xyXG59IFxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJTWVkaWFQcm92aWRlciBleHRlbmRzIG5nLklTZXJ2aWNlUHJvdmlkZXIge1xyXG4gICAgYnJlYWtwb2ludHM6IE1lZGlhQnJlYWtwb2ludHM7XHJcbn1cclxuXHJcbmNsYXNzIE1lZGlhUHJvdmlkZXIge1xyXG4gICAgcHVibGljIGdldCBicmVha3BvaW50cygpOiBNZWRpYUJyZWFrcG9pbnRzIHtcclxuICAgICAgICByZXR1cm4gTWFpbkJyZWFrcG9pbnRzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgYnJlYWtwb2ludHModmFsdWU6IE1lZGlhQnJlYWtwb2ludHMpIHtcclxuICAgICAgICBNYWluQnJlYWtwb2ludHMgPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgJGdldCgpIHtcclxuICAgICAgICBsZXQgc2VydmljZSA9IGZ1bmN0aW9uKHNpemUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIE1haW5CcmVha3BvaW50U3RhdHVzZXNbc2l6ZV07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VydmljZSwgJ2JyZWFrcG9pbnRzJywge1xyXG4gICAgICAgICAgICBnZXQ6ICgpID0+IHsgcmV0dXJuIE1haW5CcmVha3BvaW50czsgfSxcclxuICAgICAgICAgICAgc2V0OiAodmFsdWUpID0+IHsgXHJcbiAgICAgICAgICAgICAgICBNYWluQnJlYWtwb2ludHMgPSB2YWx1ZSB8fCBuZXcgTWVkaWFCcmVha3BvaW50cyg2MzksIDcxNiwgMTAyNCwgMTQzOSk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIE1haW5CcmVha3BvaW50U3RhdHVzZXMudXBkYXRlKFxyXG4gICAgICAgICAgICAgICAgICAgIE1haW5CcmVha3BvaW50cywgXHJcbiAgICAgICAgICAgICAgICAgICAgTWFpbkJyZWFrcG9pbnRTdGF0dXNlcy53aWR0aFxyXG4gICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc2VydmljZSwgJ3dpZHRoJywge1xyXG4gICAgICAgICAgICBnZXQ6ICgpID0+IHsgXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTWFpbkJyZWFrcG9pbnRTdGF0dXNlcy53aWR0aDsgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHNlcnZpY2U7IFxyXG4gICAgfVxyXG59XHJcblxyXG5hbmd1bGFyXHJcbiAgICAubW9kdWxlKCdwaXBNZWRpYScpXHJcbiAgICAucHJvdmlkZXIoJ3BpcE1lZGlhJywgTWVkaWFQcm92aWRlcik7XHJcbiIsIid1c2Ugc3RyaWN0JztcclxuXHJcbmxldCBhdHRhY2hFdmVudCA9ICg8YW55PmRvY3VtZW50KS5hdHRhY2hFdmVudDtcclxubGV0IGlzSUUgPSBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9UcmlkZW50Lyk7XHJcblxyXG5mdW5jdGlvbiByZXF1ZXN0RnJhbWUoY2FsbGJhY2spOiBhbnkge1xyXG4gICAgbGV0IGZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSBcclxuICAgICAgICB8fCAoPGFueT53aW5kb3cpLm1velJlcXVlc3RBbmltYXRpb25GcmFtZSBcclxuICAgICAgICB8fCAoPGFueT53aW5kb3cpLndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSBcclxuICAgICAgICB8fCBmdW5jdGlvbihjYWxsYmFjaykgeyBcclxuICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5zZXRUaW1lb3V0KGNhbGxiYWNrLCAyMCk7ICAgICBcclxuICAgICAgICB9O1xyXG5cclxuICAgIHJldHVybiBmcmFtZShjYWxsYmFjayk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNhbmNlbEZyYW1lKCk6IGFueSB7XHJcbiAgICBsZXQgY2FuY2VsID0gd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lIFxyXG4gICAgICAgIHx8ICg8YW55PndpbmRvdykubW96Q2FuY2VsQW5pbWF0aW9uRnJhbWUgXHJcbiAgICAgICAgfHwgKDxhbnk+d2luZG93KS53ZWJraXRDYW5jZWxBbmltYXRpb25GcmFtZSBcclxuICAgICAgICB8fCB3aW5kb3cuY2xlYXJUaW1lb3V0O1xyXG5cclxuICAgIHJldHVybiBmdW5jdGlvbihpZCkgeyBcclxuICAgICAgICByZXR1cm4gY2FuY2VsKGlkKTsgXHJcbiAgICB9O1xyXG59XHJcblxyXG5mdW5jdGlvbiByZXNpemVMaXN0ZW5lcihldmVudDogYW55KTogdm9pZCB7XHJcbiAgICB2YXIgd2luID0gZXZlbnQudGFyZ2V0IHx8IGV2ZW50LnNyY0VsZW1lbnQ7XHJcbiAgICBpZiAod2luLl9fcmVzaXplUkFGX18pIGNhbmNlbEZyYW1lKC8qd2luLl9fcmVzaXplUkFGX18qLyk7XHJcbiAgICB3aW4uX19yZXNpemVSQUZfXyA9IHJlcXVlc3RGcmFtZShmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgdHJpZ2dlciA9IHdpbi5fX3Jlc2l6ZVRyaWdnZXJfXztcclxuICAgICAgICB0cmlnZ2VyLl9fcmVzaXplTGlzdGVuZXJzX18uZm9yRWFjaChmdW5jdGlvbihmbil7XHJcbiAgICAgICAgICAgIGZuLmNhbGwodHJpZ2dlciwgZXZlbnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGxvYWRMaXN0ZW5lcihldmVudDogYW55KTogdm9pZCB7XHJcbiAgICB0aGlzLmNvbnRlbnREb2N1bWVudC5kZWZhdWx0Vmlldy5fX3Jlc2l6ZVRyaWdnZXJfXyA9IHRoaXMuX19yZXNpemVFbGVtZW50X187XHJcbiAgICB0aGlzLmNvbnRlbnREb2N1bWVudC5kZWZhdWx0Vmlldy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCByZXNpemVMaXN0ZW5lcik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBhZGRSZXNpemVMaXN0ZW5lcihlbGVtZW50LCBsaXN0ZW5lcik6IHZvaWQge1xyXG4gICAgaWYgKCFlbGVtZW50Ll9fcmVzaXplTGlzdGVuZXJzX18pIHtcclxuICAgICAgICBlbGVtZW50Ll9fcmVzaXplTGlzdGVuZXJzX18gPSBbXTtcclxuICAgICAgICBpZiAoYXR0YWNoRXZlbnQpIHtcclxuICAgICAgICAgICAgZWxlbWVudC5fX3Jlc2l6ZVRyaWdnZXJfXyA9IGVsZW1lbnQ7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuYXR0YWNoRXZlbnQoJ29ucmVzaXplJywgcmVzaXplTGlzdGVuZXIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCkucG9zaXRpb24gPT0gJ3N0YXRpYycpIGVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xyXG4gICAgICAgICAgICB2YXIgb2JqOiBhbnkgPSBlbGVtZW50Ll9fcmVzaXplVHJpZ2dlcl9fID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb2JqZWN0Jyk7XHJcbiAgICAgICAgICAgIG9iai5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgJ2Rpc3BsYXk6IGJsb2NrOyBwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMDsgbGVmdDogMDsgaGVpZ2h0OiAxMDAlOyB3aWR0aDogMTAwJTsgb3ZlcmZsb3c6IGhpZGRlbjsgcG9pbnRlci1ldmVudHM6IG5vbmU7IHotaW5kZXg6IC0xOycpO1xyXG4gICAgICAgICAgICBvYmouX19yZXNpemVFbGVtZW50X18gPSBlbGVtZW50O1xyXG4gICAgICAgICAgICBvYmoub25sb2FkID0gbG9hZExpc3RlbmVyO1xyXG4gICAgICAgICAgICBvYmoudHlwZSA9ICd0ZXh0L2h0bWwnO1xyXG4gICAgICAgICAgICBpZiAoaXNJRSkgZWxlbWVudC5hcHBlbmRDaGlsZChvYmopO1xyXG4gICAgICAgICAgICBvYmouZGF0YSA9ICdhYm91dDpibGFuayc7XHJcbiAgICAgICAgICAgIGlmICghaXNJRSkgZWxlbWVudC5hcHBlbmRDaGlsZChvYmopO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBlbGVtZW50Ll9fcmVzaXplTGlzdGVuZXJzX18ucHVzaChsaXN0ZW5lcik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVSZXNpemVMaXN0ZW5lcihlbGVtZW50LCBsaXN0ZW5lcik6IHZvaWQge1xyXG4gICAgaWYgKGxpc3RlbmVyKSBlbGVtZW50Ll9fcmVzaXplTGlzdGVuZXJzX18uc3BsaWNlKGVsZW1lbnQuX19yZXNpemVMaXN0ZW5lcnNfXy5pbmRleE9mKGxpc3RlbmVyKSwgMSk7XHJcbiAgICBpZiAoIWVsZW1lbnQuX19yZXNpemVMaXN0ZW5lcnNfXy5sZW5ndGgpIHtcclxuICAgICAgICBpZiAoYXR0YWNoRXZlbnQpIGVsZW1lbnQuZGV0YWNoRXZlbnQoJ29ucmVzaXplJywgcmVzaXplTGlzdGVuZXIpO1xyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBlbGVtZW50Ll9fcmVzaXplVHJpZ2dlcl9fLmNvbnRlbnREb2N1bWVudC5kZWZhdWx0Vmlldy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCByZXNpemVMaXN0ZW5lcik7XHJcbiAgICAgICAgICAgIGVsZW1lbnQuX19yZXNpemVUcmlnZ2VyX18gPSAhZWxlbWVudC5yZW1vdmVDaGlsZChlbGVtZW50Ll9fcmVzaXplVHJpZ2dlcl9fKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiJ3VzZSBzdHJpY3QnO1xyXG5cclxuYW5ndWxhci5tb2R1bGUoJ3BpcE1lZGlhJywgW10pO1xyXG5cclxuaW1wb3J0ICcuL01lZGlhU2VydmljZSc7XHJcbmltcG9ydCAnLi9SZXNpemVGdW5jdGlvbnMnO1xyXG5cclxuZXhwb3J0ICogZnJvbSAnLi9NZWRpYVNlcnZpY2UnO1xyXG5leHBvcnQgKiBmcm9tICcuL1Jlc2l6ZUZ1bmN0aW9ucyc7Il19"}