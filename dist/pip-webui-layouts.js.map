{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/auxpanel/AuxPanel.ts","src/auxpanel/AuxPanelPart.ts","src/auxpanel/AuxPanelService.ts","src/auxpanel/IAuxPanelService.ts","src/auxpanel/index.ts","src/index.ts","src/layouts/CardDirective.ts","src/layouts/DialogDirective.ts","src/layouts/DocumentDirective.ts","src/layouts/MainDirective.ts","src/layouts/SimpleDirective.ts","src/layouts/TilesDirective.ts","src/media/IMediaService.ts","src/media/MediaService.ts","src/media/ResizeFunctions.ts","src/media/index.ts"],"names":[],"mappings":"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","file":"pip-webui-layouts.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { MainBreakpoints } from '../media/MediaService';\r\nimport { IAuxPanelService } from './IAuxPanelService';\r\n\r\n{\r\n    class AuxPanelDirectiveController {\r\n        private normalSize: number = 320;\r\n        private largeSize: number = 480;\r\n\r\n        public constructor(private pipAuxPanel: IAuxPanelService) {\r\n            \"ngInject\";\r\n        }\r\n\r\n        public isGtxs(): boolean {\r\n            return Number($('body').width()) > MainBreakpoints.xs && this.pipAuxPanel.isOpen();\r\n        }\r\n\r\n        public isGtlg(): boolean {\r\n            return Number($('body').width()) > (MainBreakpoints.lg + this.largeSize);\r\n        }\r\n    }\r\n\r\n    const AuxPanel: ng.IComponentOptions = {\r\n\r\n        controller: AuxPanelDirectiveController,\r\n        transclude: true,\r\n        template: '<md-sidenav class=\"md-sidenav-right md-whiteframe-z2 pip-auxpanel color-content-bg\" ng-class=\"{\\'pip-large\\': $ctrl.isGtlg()}\"' +\r\n        'md-component-id=\"pip-auxpanel\" md-is-locked-open=\"$ctrl.isGtxs()\" ng-transclude><div pip-focused></div>' +\r\n        '</md-sidenav>'\r\n    }\r\n\r\n    angular\r\n        .module('pipAuxPanel')\r\n        .component('pipAuxPanel', AuxPanel);\r\n\r\n}","{\r\n\r\n    class AuxPanelPartController {\r\n        private partName: string;\r\n        private partValue: string;\r\n        private pos: number;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            $element: ng.IRootElementService,\r\n            $attrs,\r\n            $rootScope: ng.IRootScopeService,\r\n            pipAuxPanel) {\r\n            \"ngInject\";\r\n            this.partName = '' + $attrs.pipAuxPanelPart;\r\n            this.pos = this.partName.indexOf(':');\r\n            if (this.pos > 0) {\r\n                this.partValue = this.partName.substr(this.pos + 1);\r\n                this.partName = this.partName.substr(0, this.pos);\r\n            }\r\n\r\n            this.onAuxPanelChanged(null, pipAuxPanel.config)\r\n            $rootScope.$on('pipAuxPanelChanged', (event, config) => {\r\n                this.onAuxPanelChanged(event, config);\r\n            });\r\n\r\n        }\r\n\r\n        private onAuxPanelChanged(event, config) {\r\n            let parts = config.parts || {};\r\n            let currentPartValue = config[this.partName];\r\n            // Set visible variable to switch ngIf\r\n\r\n            this.$scope['visible'] = this.partValue ? currentPartValue == this.partValue : currentPartValue;\r\n        }\r\n    }\r\n\r\n\r\n    function AuxPanelPartDirective(ngIfDirective) {\r\n        \"ngInject\";\r\n\r\n        let ngIf = ngIfDirective[0];\r\n\r\n        return {\r\n            transclude: ngIf.transclude,\r\n            priority: ngIf.priority,\r\n            terminal: ngIf.terminal,\r\n            restrict: ngIf.restrict,\r\n            scope: true,\r\n            link: function ($scope: ng.IScope, $element, $attrs) {\r\n                // Visualize based on visible variable in scope\r\n                $attrs.ngIf = () => { return $scope['visible'] };\r\n                ngIf.link.apply(ngIf);\r\n            },\r\n            controller: AuxPanelPartController\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipAuxPanel')\r\n        .directive('pipAuxPanelPart', AuxPanelPartDirective);\r\n\r\n}","import { AuxPanelStateChangedEvent, AuxPanelChangedEvent, OpenAuxPanelEvent, CloseAuxPanelEvent } from './IAuxPanelService';\r\nimport { AuxPanelConfig, IAuxPanelService, IAuxPanelProvider } from './IAuxPanelService';\r\n\r\nclass AuxPanelService implements IAuxPanelService {\r\n    private _config: AuxPanelConfig;\r\n    private _state: any;\r\n    private _rootScope: ng.IRootScopeService;\r\n    private _sidenav: ng.material.ISidenavService;\r\n    private id = 'pip-auxpanel';\r\n\r\n    public constructor(config: AuxPanelConfig, $rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n\r\n        \"ngInject\";\r\n        this._config = config;\r\n        this._rootScope = $rootScope;\r\n        this._sidenav = $mdSidenav;\r\n    }\r\n\r\n    public get config(): AuxPanelConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public get state(): any {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(value: any) {\r\n        this._state = value || {};\r\n        this._rootScope.$broadcast(AuxPanelStateChangedEvent, value);\r\n    }\r\n\r\n    public isOpen(): boolean {\r\n        return this._sidenav(this.id).isOpen();\r\n    }\r\n\r\n    public open() {\r\n        this._sidenav(this.id).open();\r\n    }\r\n\r\n    public close() {\r\n        this._sidenav(this.id).close();\r\n    }\r\n\r\n    public toggle() {\r\n        this._sidenav(this.id).toggle();\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n        this.sendConfigEvent();\r\n    }\r\n\r\n    private sendConfigEvent() {\r\n        this._rootScope.$emit(AuxPanelChangedEvent, this._config);\r\n    }\r\n}\r\n\r\nclass AuxPanelProvider implements IAuxPanelProvider {\r\n    private _config: AuxPanelConfig = {\r\n        parts: {},\r\n        classes: [],\r\n        type: 'sticky',\r\n        state: null\r\n    };\r\n\r\n    private _service: AuxPanelService;\r\n\r\n    public get config(): AuxPanelConfig {\r\n        return this._config;\r\n    }\r\n\r\n    public set config(value: AuxPanelConfig) {\r\n        this._config = value || new AuxPanelConfig();\r\n    }\r\n\r\n    public get parts(): any {\r\n        return this._config.parts;\r\n    }\r\n\r\n    public set parts(value: any) {\r\n        this._config.parts = value || {};\r\n    }\r\n\r\n    public get type(): string {\r\n        return this._config.type;\r\n    }\r\n\r\n    public set type(value: string) {\r\n        this._config.type = value;\r\n    }\r\n\r\n    public get classes(): string[] {\r\n        return this._config.classes;\r\n    }\r\n\r\n    public set classes(value: string[]) {\r\n        this._config.classes = value || [];\r\n    }\r\n\r\n    public addClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes.push(c);\r\n        });\r\n    }\r\n\r\n    public removeClass(...classes: string[]): void {\r\n        _.each(classes, (c) => {\r\n            this._config.classes = _.reject(this._config.classes, (cc) => cc == c);\r\n        });\r\n    }\r\n\r\n    public part(part: string, value: any): void {\r\n        this._config.parts[part] = value;\r\n    }\r\n\r\n    public open(): void {\r\n        this._service.open();\r\n    }\r\n\r\n    public close(): void {\r\n        this._service.close();\r\n    }\r\n\r\n    public toggle(): void {\r\n        this._service.toggle();\r\n    }\r\n\r\n    public $get($rootScope: ng.IRootScopeService, $mdSidenav: ng.material.ISidenavService) {\r\n        \"ngInject\";\r\n\r\n        if (this._service == null)\r\n            this._service = new AuxPanelService(this._config, $rootScope, $mdSidenav);\r\n\r\n        return this._service;\r\n    }\r\n}\r\n\r\nfunction hookAuxPanelEvents($rootScope: ng.IRootScopeService, pipAuxPanel: IAuxPanelService) {\r\n    \"ngInject\";\r\n    $rootScope.$on(OpenAuxPanelEvent, () => { pipAuxPanel.open(); });\r\n    $rootScope.$on(CloseAuxPanelEvent, () => { pipAuxPanel.close(); });\r\n}\r\n\r\nangular\r\n    .module('pipAuxPanel')\r\n    .provider('pipAuxPanel', AuxPanelProvider)\r\n    .run(hookAuxPanelEvents);\r\n","export const AuxPanelChangedEvent = 'pipAuxPanelChanged';\r\nexport const AuxPanelStateChangedEvent = 'pipAuxPanelStateChanged';\r\nexport const OpenAuxPanelEvent = 'pipOpenAuxPanel';\r\nexport const CloseAuxPanelEvent = 'pipCloseAuxPanel';\r\n\r\nexport class AuxPanelConfig {\r\n    parts: any;\r\n    classes: string[];\r\n    state: any;\r\n    type: string;\r\n} \r\n\r\nexport interface IAuxPanelService {\r\n    readonly config: AuxPanelConfig;\r\n    readonly classes: string[];\r\n    parts: any;\r\n    state: any;    \r\n\r\n    isOpen(): boolean;\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n  \r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n \r\n    part(part: string, value: any): void;\r\n}\r\n\r\nexport interface IAuxPanelProvider extends ng.IServiceProvider {\r\n    config: AuxPanelConfig;\r\n    parts: any;\r\n    type: string;\r\n    classes: string[];\r\n\r\n    open(): void;\r\n    close(): void;\r\n    toggle(): void;\r\n\r\n    addClass(...classes: string[]): void;\r\n    removeClass(...classes: string[]): void;\r\n\r\n    part(part: string, value: any): void;\r\n}","angular.module('pipAuxPanel', ['ngMaterial']);\r\n\r\nimport './AuxPanelService';\r\nimport './AuxPanelPart';\r\nimport './AuxPanel';\r\n\r\nexport * from './IAuxPanelService';","angular.module('pipLayout', ['wu.masonry', 'pipMedia', 'pipAuxPanel']);\r\n\r\nimport './media/index';\r\n\r\nimport './layouts/MainDirective';\r\nimport './layouts/CardDirective';\r\nimport './layouts/DialogDirective';\r\nimport './layouts/DocumentDirective';\r\nimport './layouts/SimpleDirective';\r\nimport './layouts/TilesDirective';\r\nimport './auxpanel/index';\r\n\r\nexport * from './media/index';\r\n","import { MainResizedEvent, LayoutResizedEvent } from '../media/IMediaService';\r\nimport { MainBreakpointStatuses } from '../media/MediaService';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\ninterface ICardDirectiveAttributes extends ng.IAttributes {\r\n    minWidth: string | number;\r\n    minHeight: string | number;\r\n    width: string | number;\r\n    height: string | number;\r\n}\r\n\r\nclass CardDirectiveLink {\r\n\r\n    public constructor(\r\n        private $rootScope: ng.IRootScopeService, \r\n        private $element: JQuery, \r\n        private $attrs: ICardDirectiveAttributes\r\n    ) {\r\n       \"ngInject\";\r\n        // Add class to the element\r\n        $element.addClass('pip-card');\r\n\r\n        let listener = () => { this.resize(); }\r\n\r\n        // Resize every time window is resized\r\n        $rootScope.$on(MainResizedEvent, listener);\r\n\r\n        // Resize right away to avoid flicking\r\n        this.resize();\r\n\r\n        // Resize the element right away\r\n        setTimeout(listener, 100);\r\n    }\r\n\r\n    private resize() {\r\n        const\r\n            $mainBody = $('.pip-main-body'),\r\n            cardContainer = $('.pip-card-container'),\r\n            windowWidth = $('pip-main').width();\r\n        let\r\n            maxWidth = $mainBody.width(),\r\n            maxHeight = $mainBody.height(),\r\n            minWidth = this.$attrs.minWidth ? Math.floor(Number(this.$attrs.minWidth)) : null,\r\n            minHeight = this.$attrs.minHeight ? Math.floor(Number(this.$attrs.minHeight)) : null,\r\n            width = this.$attrs.width ? Math.floor(Number(this.$attrs.width)) : null,\r\n            height = this.$attrs.height ? Math.floor(Number(this.$attrs.height)) : null,\r\n            left, top;\r\n\r\n        // Full-screen on phone\r\n        if (MainBreakpointStatuses.xs) {\r\n            minWidth = null;\r\n            minHeight = null;\r\n            width = null;\r\n            height = null;\r\n            maxWidth = null;\r\n            maxHeight = null;\r\n        }\r\n        // Card view with adjustable margins on tablet and desktop\r\n        else {\r\n            // Set margin and maximum dimensions\r\n            const space = MainBreakpointStatuses['gt-md'] ? 24 : 16;\r\n            maxWidth -= space * 2;\r\n            maxHeight -= space * 2;\r\n\r\n            // Set minimum dimensions\r\n            minWidth = minWidth ? Math.min(minWidth, maxWidth) : null;\r\n            minHeight = minHeight ? Math.min(minHeight, maxHeight) : null;\r\n\r\n            // Set regular dimensions\r\n            width = width ? Math.min(width, maxWidth) : null;\r\n            height = height ? Math.min(height, maxHeight) : null;\r\n        }\r\n\r\n        // Set dimensions\r\n        this.$element.css('max-width', maxWidth ? maxWidth + 'px' : '');\r\n        this.$element.css('min-width', minWidth ? minWidth + 'px' : '');\r\n        this.$element.css('width', width ? width + 'px' : '');\r\n        this.$element.css('height', height ? height + 'px' : '');\r\n\r\n        if (!cardContainer.hasClass('pip-outer-scroll')) {\r\n            this.$element.css('max-height', maxHeight ? maxHeight + 'px' : '');\r\n            this.$element.css('min-height', minHeight ? minHeight + 'px' : '');\r\n            const\r\n                $header = this.$element.find('.pip-header:visible'),\r\n                $footer = this.$element.find('.pip-footer:visible'),\r\n                $body = this.$element.find('.pip-body');\r\n            let maxBodyHeight = maxHeight || $mainBody.height();\r\n\r\n            if ($header.length > 0)\r\n                maxBodyHeight -= $header.outerHeight(true);\r\n            if ($footer.length > 0)\r\n                maxBodyHeight -= $footer.outerHeight(true);\r\n\r\n            $body.css('max-height', maxBodyHeight + 'px');\r\n        } else {\r\n            cardContainer.addClass('pip-scroll');\r\n            if (MainBreakpointStatuses.xs) {\r\n                left = 0;\r\n                top = 0;\r\n            } else {\r\n                left = cardContainer.width() / 2 - this.$element.width() / 2 - 16;\r\n                top = Math.max(cardContainer.height() / 2 - this.$element.height() / 2 - 16, 0);\r\n            }\r\n\r\n            this.$element.css('left', left);\r\n            this.$element.css('top', top);\r\n\r\n            setTimeout(() => { this.$element.css('display', 'flex'); }, 100);\r\n        }\r\n\r\n        // Notify child controls that layout was resized\r\n        this.$rootScope.$emit('pipLayoutResized');\r\n    }\r\n}\r\n\r\nfunction cardDirective($rootScope: ng.IRootScopeService) {\r\n    \"ngInject\";\r\n\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope, $element, $attrs) => {\r\n            new CardDirectiveLink($rootScope, $element, $attrs);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipCard', cardDirective);\r\n\r\n})();","// Avoid default export\r\n(() => {\r\n\r\nfunction dialogDirective(): ng.IDirective {\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\r\n            $element.addClass('pip-dialog');\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipDialog', dialogDirective);\r\n\r\n})();","// Avoid default export\r\n(() => {\r\n\r\nfunction documentDirective(): ng.IDirective {\r\n    return {\r\n        restrict: 'EA',\r\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\r\n            $element.addClass('pip-document');\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipDocument', documentDirective);\r\n\r\n})();","import { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\r\nimport { MainResizedEvent } from '../media/IMediaService';\r\nimport { MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\r\n\r\n// Avoid default export\r\n(() => {\r\n\r\n    interface IMainDirectiveAttributes extends ng.IAttributes {\r\n        pipContainer: string;\r\n    }\r\n\r\n    class MainDirectiveController implements ng.IController {\r\n        private _container: any;\r\n\r\n        public constructor(\r\n            private $scope: ng.IScope,\r\n            private $element: angular.IRootElementService,\r\n            private $rootScope: ng.IRootScopeService,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $attrs: IMainDirectiveAttributes\r\n        ) {\r\n            \"ngInject\";\r\n            this._container = $attrs.pipContainer ? $($attrs.pipContainer) : $element;\r\n\r\n            // Add CSS class\r\n            $element.addClass('pip-main');\r\n\r\n            // Add resize listener\r\n            const listener = () => { this.resize(); };\r\n            addResizeListener(this._container[0], listener);\r\n\r\n            // Unbind when scope is removed\r\n            $scope.$on('$destroy', () => {\r\n                removeResizeListener(this._container[0], listener);\r\n            });\r\n\r\n            // Perform initial calculations\r\n            this.updateBreakpointStatuses();\r\n        }\r\n\r\n        private updateBreakpointStatuses() {\r\n            const width = this._container.innerWidth();\r\n            const body = $('body');\r\n\r\n            MainBreakpointStatuses.update(MainBreakpoints, width);\r\n\r\n            $.each(MainBreakpointStatuses, (breakpoint, status) => {\r\n                if (_.isBoolean(status)) {\r\n                    body[status ? 'addClass' : 'removeClass']('pip-' + breakpoint);\r\n                }\r\n            });\r\n\r\n            this.$timeout(() => {\r\n                this.$rootScope.$apply();\r\n            });\r\n        }\r\n\r\n        private resize() {\r\n            this.updateBreakpointStatuses();\r\n            this.$rootScope.$emit(MainResizedEvent, MainBreakpointStatuses);\r\n        }\r\n    }\r\n\r\n    class MainBodyDirectiveLink {\r\n        public constructor(\r\n            $scope: ng.IScope,\r\n            $element: angular.IRootElementService\r\n        ) {\r\n            \"ngInject\";\r\n            // Add CSS class\r\n            $element.addClass('pip-main-body');\r\n        }\r\n    }\r\n\r\n    function mainDirective(): ng.IDirective {\r\n        \"ngInject\";\r\n        return {\r\n            restrict: 'EA',\r\n            controller: MainDirectiveController,\r\n            controllerAs: 'vm'\r\n        }\r\n    }\r\n\r\n    function mainBodyDirective(): ng.IDirective {\r\n        \"ngInject\";\r\n        return {\r\n            restrict: 'EA',\r\n            link: MainBodyDirectiveLink\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipLayout')\r\n        .directive('pipMain', mainDirective)\r\n        .directive('pipMainBody', mainBodyDirective);\r\n\r\n})();","(() => {\r\n\r\n    function simpleDirective(): ng.IDirective {\r\n        \"ngInject\";\r\n        return {\r\n            restrict: 'EA',\r\n            link: ($scope: ng.IScope, $element: JQuery, $attrs: ng.IAttributes) => {\r\n                $element.addClass('pip-simple');\r\n            }\r\n        };\r\n    }\r\n\r\n    angular\r\n        .module('pipLayout')\r\n        .directive('pipSimple', simpleDirective);\r\n\r\n})();","import { addResizeListener, removeResizeListener } from '../media/ResizeFunctions';\r\nimport { MainResizedEvent, LayoutResizedEvent } from '../media/IMediaService';\r\nimport { MainBreakpoints, MainBreakpointStatuses } from '../media/MediaService';\r\n\r\ndeclare var Masonry: any;\r\n\r\ninterface ITilesDirectiveAttributes extends ng.IAttributes {\r\n    columnWidth: string | number;\r\n    pipInfinite: string | boolean | number;\r\n}\r\n\r\nclass TilesOptions {\r\n    gutter: number;\r\n    isFitWidth: boolean;\r\n    isResizeBound: boolean;\r\n    transitionDuration: number;\r\n}\r\n\r\ninterface ITilesControllerScope extends ng.IScope {\r\n    tilesOptions: TilesOptions;\r\n}\r\n\r\nclass TilesDirectiveLink {\r\n    private _columnWidth: number;\r\n    private _container: any;\r\n    private _prevContainerWidth: number;\r\n    private _masonry: any;\r\n    private _sizer: any;\r\n\r\n    public constructor(\r\n        $scope: ng.IScope,\r\n        private $element: JQuery,\r\n        private $attrs: ITilesDirectiveAttributes,\r\n        private $rootScope: ng.IRootScopeService\r\n    ) {\r\n        \"ngInject\";\r\n        this._columnWidth = $attrs.columnWidth ? Math.floor(Number($attrs.columnWidth)) : 440;\r\n        this._container = $element.children('.pip-tiles-container');\r\n        this._prevContainerWidth = null;\r\n        this._masonry = Masonry.data(this._container[0]);\r\n\r\n        // Add class to the element\r\n        $element.addClass('pip-tiles');\r\n\r\n        // Add resize listener\r\n        const listener = () => { this.resize(false); };\r\n        addResizeListener($element[0], listener);\r\n\r\n        // Unbind when scope is removed\r\n        $scope.$on('$destroy', () => {\r\n            removeResizeListener($element[0], listener);\r\n        });\r\n\r\n        // Insert sizer\r\n        this._sizer = $('<div class=\"pip-tile-sizer\"></div>');\r\n        this._sizer.appendTo(this._container);\r\n\r\n        // Resize every time window is resized\r\n        $rootScope.$on(MainResizedEvent, () => { this.resize(false); });\r\n\r\n        // Resize the element right away\r\n        this.resize(true);\r\n    }\r\n\r\n    private resize(force: boolean) {\r\n        let width = this.$element.parent().width(),\r\n            containerWidth;\r\n\r\n        if (MainBreakpointStatuses['gt-xs'] && (width - 36) > this._columnWidth) {\r\n            width = width - 24 * 2;\r\n\r\n            let columns = Math.floor(width / this._columnWidth);\r\n            containerWidth = (this._columnWidth + 16) * columns - 16;\r\n\r\n            if (containerWidth > width) {\r\n                columns--;\r\n                containerWidth = (this._columnWidth + 16) * columns - 16;\r\n            }\r\n\r\n            if (columns < 1) {\r\n                containerWidth = width;\r\n                this._sizer.css('width', containerWidth + 'px');\r\n            } else {\r\n                this._sizer.css('width', this._columnWidth + 'px');\r\n            }\r\n\r\n            // +10 to avoid precision related error\r\n            this._container.css('width', (containerWidth + 10) + 'px');\r\n            this._container.removeClass('pip-mobile');\r\n        } else {\r\n            width = width - 16 * 2;\r\n            containerWidth = width;\r\n\r\n            this._sizer.css('width', containerWidth + 'px');\r\n            // +10 to avoid precision related error\r\n            this._container.css('width', (containerWidth + 10) + 'px');\r\n            this._container.addClass('pip-mobile');\r\n        }\r\n\r\n        // Manually call layout on tile container\r\n        if (this._prevContainerWidth != containerWidth || force) {\r\n            this._prevContainerWidth = containerWidth;\r\n            this._masonry.layout();\r\n\r\n            // Notify child controls that layout was resized\r\n            this.$rootScope.$emit(LayoutResizedEvent);\r\n        }\r\n    }\r\n}\r\n\r\nfunction tilesDirective($rootScope: ng.IRootScopeService): ng.IDirective {\r\n    \"ngInject\";\r\n\r\n    // Converts value into boolean\r\n    function convertToBoolean(value): boolean {\r\n        if (value == null) return false;\r\n        if (!value) return false;\r\n        value = value.toString().toLowerCase();\r\n        return value == '1' || value == 'true';\r\n    }\r\n\r\n    return {\r\n        restrict: 'EA',\r\n        scope: false,\r\n        transclude: true,\r\n        template:\r\n        ($element: JQuery, $attrs: ITilesDirectiveAttributes) => {\r\n            if (convertToBoolean($attrs.pipInfinite)) {\r\n                return String()\r\n                    + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\r\n                    + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\r\n                    + ' masonry-options=\"tilesOptions\"  pip-scroll-container=\"\\'.pip-tiles\\'\"'\r\n                    + ' pip-infinite-scroll=\"readScroll()\" >'\r\n                    + '</div>';\r\n            } else {\r\n                return String()\r\n                    + '<div masonry class=\"pip-tiles-container\" load-images=\"false\" preserve-order  '\r\n                    + ' ng-transclude column-width=\".pip-tile-sizer\" item-selector=\".pip-tile\"'\r\n                    + ' masonry-options=\"tilesOptions\">'\r\n                    + '</div>';\r\n            }\r\n        },\r\n        controller: ($scope: ITilesControllerScope) => {\r\n            $scope.tilesOptions = {\r\n                gutter: 8,//16\r\n                isFitWidth: false,\r\n                isResizeBound: false,\r\n                transitionDuration: 0 // '0.2s'\r\n            };\r\n        },\r\n        link: ($scope: ng.IScope, $element: JQuery, $attrs: ITilesDirectiveAttributes) => {\r\n            new TilesDirectiveLink($scope, $element, $attrs, $rootScope);\r\n        }\r\n    };\r\n}\r\n\r\nangular\r\n    .module('pipLayout')\r\n    .directive('pipTiles', tilesDirective);\r\n","export const MainResizedEvent = 'pipMainResized';\r\nexport const LayoutResizedEvent = 'pipLayoutResized';\r\n\r\nexport class MediaBreakpoints {\r\n    public constructor(\r\n        xs: number, sm: number, md: number, lg: number\r\n    ) {\r\n        this.xs = xs;\r\n        this.sm = sm;\r\n        this.md = md;\r\n        this.lg = lg;\r\n    }\r\n\r\n    public xs: number;\r\n    public sm: number;\r\n    public md: number;\r\n    public lg: number;\r\n}\r\n\r\nexport class MediaBreakpointStatuses {\r\n    public width: number;\r\n    public 'xs': boolean;\r\n    public 'gt-xs': boolean;\r\n    public 'sm': boolean;\r\n    public 'gt-sm': boolean;\r\n    public 'md': boolean;\r\n    public 'gt-md': boolean;\r\n    public 'lg': boolean;\r\n    public 'gt-lg': boolean;\r\n    public 'xl': boolean;\r\n\r\n    public update(breakpoints: MediaBreakpoints, width: number) {\r\n        if (breakpoints == null || width == null) return;\r\n\r\n        this.width = width;\r\n        this['xs'] = width <= breakpoints.xs;\r\n        this['gt-xs'] = width > breakpoints.xs;\r\n        this['sm'] = width > breakpoints.xs && width <= breakpoints.sm;\r\n        this['gt-sm'] = width > breakpoints.sm;\r\n        this['md'] = width > breakpoints.sm && width <= breakpoints.md;\r\n        this['gt-md'] = width > breakpoints.md;\r\n        this['lg'] = width > breakpoints.md && width <= breakpoints.lg;\r\n        this['gt-lg'] = width > breakpoints.lg;\r\n        this['xl'] = this['gt-lg'];\r\n    }\r\n}\r\n\r\nexport interface IMediaService {\r\n    (breakpoint: string): boolean;\r\n    breakpoints: MediaBreakpoints;\r\n    width: number;\r\n} \r\n\r\nexport interface IMediaProvider extends ng.IServiceProvider {\r\n    breakpoints: MediaBreakpoints;\r\n}","import { MediaBreakpoints, MediaBreakpointStatuses } from './IMediaService';\r\nimport { IMediaProvider } from './IMediaService';\r\n\r\nexport let MainBreakpoints = new MediaBreakpoints(639, 716, 1024, 1439);\r\nexport const MainBreakpointStatuses = new MediaBreakpointStatuses();\r\n\r\nclass MediaProvider implements IMediaProvider {\r\n    public get breakpoints(): MediaBreakpoints {\r\n        return MainBreakpoints;\r\n    }\r\n\r\n    public set breakpoints(value: MediaBreakpoints) {\r\n        MainBreakpoints = value;\r\n    }\r\n\r\n    public $get() {\r\n        const service = (size) => {\r\n            return MainBreakpointStatuses[size];\r\n        }\r\n\r\n        Object.defineProperty(service, 'breakpoints', {\r\n            get: () => { return MainBreakpoints; },\r\n            set: (value) => { \r\n                MainBreakpoints = value || new MediaBreakpoints(639, 716, 1024, 1439);\r\n                \r\n                MainBreakpointStatuses.update(\r\n                    MainBreakpoints, \r\n                    MainBreakpointStatuses.width\r\n                );\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(service, 'width', {\r\n            get: () => { \r\n                return MainBreakpointStatuses.width; \r\n            }\r\n        });\r\n\r\n        return service; \r\n    }\r\n}\r\n\r\nangular\r\n    .module('pipMedia')\r\n    .provider('pipMedia', MediaProvider);\r\n","let attachEvent = (<any>document).attachEvent;\r\nlet isIE = navigator.userAgent.match(/Trident/);\r\n\r\nfunction requestFrame(callback): any {\r\n           \"ngInject\";\r\n    let frame = window.requestAnimationFrame\r\n        || (<any>window).mozRequestAnimationFrame\r\n        || (<any>window).webkitRequestAnimationFrame\r\n        || function (callback) {\r\n            return window.setTimeout(callback, 20);\r\n        };\r\n\r\n    return frame(callback);\r\n}\r\n\r\nfunction cancelFrame(): any {\r\n           \"ngInject\";\r\n    let cancel = window.cancelAnimationFrame\r\n        || (<any>window).mozCancelAnimationFrame\r\n        || (<any>window).webkitCancelAnimationFrame\r\n        || window.clearTimeout;\r\n\r\n    return function (id) {\r\n        return cancel(id);\r\n    };\r\n}\r\n\r\nfunction resizeListener(event: any): void {\r\n    const win = event.target || event.srcElement;\r\n    if (win.__resizeRAF__) cancelFrame(/*win.__resizeRAF__*/);\r\n    win.__resizeRAF__ = requestFrame(function () {\r\n        const trigger = win.__resizeTrigger__;\r\n        trigger.__resizeListeners__.forEach(function (fn) {\r\n            fn.call(trigger, event);\r\n        });\r\n    });\r\n}\r\n\r\nfunction loadListener(event: any): void {\r\n    if (this.contentDocument) {\r\n        this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__;\r\n        this.contentDocument.defaultView.addEventListener('resize', resizeListener);\r\n    }\r\n}\r\n\r\nexport function addResizeListener(element, listener): void {\r\n           \"ngInject\";\r\n    if (!element.__resizeListeners__) {\r\n        element.__resizeListeners__ = [];\r\n        if (attachEvent) {\r\n            element.__resizeTrigger__ = element;\r\n            element.attachEvent('onresize', resizeListener);\r\n        }\r\n        else {\r\n            if (getComputedStyle(element).position == 'static') element.style.position = 'relative';\r\n            const obj: any = element.__resizeTrigger__ = document.createElement('object');\r\n            obj.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\r\n            obj.__resizeElement__ = element;\r\n            obj.onload = loadListener;\r\n            obj.type = 'text/html';\r\n            if (isIE) element.appendChild(obj);\r\n            obj.data = 'about:blank';\r\n            if (!isIE) element.appendChild(obj);\r\n        }\r\n    }\r\n\r\n    element.__resizeListeners__.push(listener);\r\n}\r\n\r\nexport function removeResizeListener(element, listener): void {\r\n           \"ngInject\";\r\n    if (listener) element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(listener), 1);\r\n    if (!element.__resizeListeners__.length) {\r\n        if (attachEvent) element.detachEvent('onresize', resizeListener);\r\n        else {\r\n            if (element.__resizeTrigger__.contentDocument) {\r\n                element.__resizeTrigger__.contentDocument.defaultView.removeEventListener('resize', resizeListener);\r\n                element.__resizeTrigger__ = !element.removeChild(element.__resizeTrigger__);\r\n            }\r\n        }\r\n    }\r\n}\r\n","angular.module('pipMedia', []);\r\n\r\nimport './MediaService';\r\nimport './ResizeFunctions';\r\n\r\nexport * from './IMediaService';\r\nexport * from './MediaService';\r\nexport * from './ResizeFunctions';"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}